{"version":3,"sources":["../node_modules/@material-ui/core/Grid/index.js","../node_modules/@material-ui/core/Grid/Grid.js","../node_modules/@material-ui/core/utils/requirePropFactory.js","components/OverallStats.js"],"names":["_interopRequireDefault","__webpack_require__","Object","defineProperty","exports","value","enumerable","get","_Grid","default","styles","_defineProperty2","_objectWithoutProperties2","_extends2","_react","_classnames","_withStyles","_createBreakpoints","GUTTERS","GRID_SIZES","theme","container","boxSizing","display","flexWrap","width","item","margin","zeroMinWidth","minWidth","direction-xs-column","flexDirection","direction-xs-column-reverse","direction-xs-row-reverse","wrap-xs-nowrap","wrap-xs-wrap-reverse","align-items-xs-center","alignItems","align-items-xs-flex-start","align-items-xs-flex-end","align-items-xs-baseline","align-content-xs-center","alignContent","align-content-xs-flex-start","align-content-xs-flex-end","align-content-xs-space-between","align-content-xs-space-around","justify-xs-center","justifyContent","justify-xs-flex-end","justify-xs-space-between","justify-xs-space-around","justify-xs-space-evenly","breakpoint","forEach","spacing","index","concat","& > $item","padding","generateGutter","keys","reduce","accumulator","key","globalStyles","size","Math","round","flexBasis","flexGrow","maxWidth","breakpoints","up","generateGrid","Grid","props","_classNames","classes","classNameProp","className","Component","component","direction","justify","lg","md","sm","wrap","xl","xs","other","String","defaultProps","createElement","propTypes","_default","name","componentNameInError","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_Table__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_Table__WEBPACK_IMPORTED_MODULE_2___default","_material_ui_core_TableBody__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core_TableBody__WEBPACK_IMPORTED_MODULE_3___default","_material_ui_core_TableCell__WEBPACK_IMPORTED_MODULE_4__","_material_ui_core_TableCell__WEBPACK_IMPORTED_MODULE_4___default","_material_ui_core_TableHead__WEBPACK_IMPORTED_MODULE_5__","_material_ui_core_TableHead__WEBPACK_IMPORTED_MODULE_5___default","_material_ui_core_TableRow__WEBPACK_IMPORTED_MODULE_6__","_material_ui_core_TableRow__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_core_Paper__WEBPACK_IMPORTED_MODULE_7__","_material_ui_core_Paper__WEBPACK_IMPORTED_MODULE_7___default","_material_ui_core_ExpansionPanel__WEBPACK_IMPORTED_MODULE_8__","_material_ui_core_ExpansionPanel__WEBPACK_IMPORTED_MODULE_8___default","_material_ui_core_ExpansionPanelSummary__WEBPACK_IMPORTED_MODULE_9__","_material_ui_core_ExpansionPanelSummary__WEBPACK_IMPORTED_MODULE_9___default","_material_ui_core_ExpansionPanelDetails__WEBPACK_IMPORTED_MODULE_10__","_material_ui_core_ExpansionPanelDetails__WEBPACK_IMPORTED_MODULE_10___default","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_11__","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_11___default","_material_ui_icons_ExpandMore__WEBPACK_IMPORTED_MODULE_12__","_material_ui_icons_ExpandMore__WEBPACK_IMPORTED_MODULE_12___default","_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_13__","_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_13___default","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_14__","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_14___default","PerformanceStats","React","lazy","e","then","bind","AveragePerformanceChart","Promise","all","OverallPerformanceChart","HeaderTableCell","withStyles","root","backgroundColor","color","palette","common","white","TableCell","marginLeft","marginRight","marginTop","unit","overflowX","table","expansionPanel","marginBottom","progress","buildMonthRows","racesByYear","listOfYears","map","eachYear","listOfMonths","push","staticListOfMonths","listOfTableCells","i","a","numeric","staticListOfTableCells","yearKey","year","toString","yearCell","totalForYear","months","length","eachMonth","monthName","monthIndex","indexOf","yearMonthKey","monthValue","parseInt","totalCell","rowKey","unshift","memo","overallStats","yearsAndMonths","Fragment","expandIcon","heading","fallback","overallRaceData","performanceData","performanceByMonthData","title","xTitle","performanceByYearData"],"mappings":"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","file":"static/js/18.50ea6a61.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function get() {\n    return _Grid.default;\n  }\n});\n\nvar _Grid = _interopRequireDefault(require(\"./Grid\"));","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.styles = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _withStyles = _interopRequireDefault(require(\"../styles/withStyles\"));\n\nvar _createBreakpoints = require(\"../styles/createBreakpoints\");\n\nvar _requirePropFactory = _interopRequireDefault(require(\"../utils/requirePropFactory\")); // A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - http://v4-alpha.getbootstrap.com/layout/flexbox-grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n\n\nvar GUTTERS = [0, 8, 16, 24, 32, 40];\nvar GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  var styles = {};\n  GRID_SIZES.forEach(function (size) {\n    var key = \"grid-\".concat(breakpoint, \"-\").concat(size);\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Only keep 6 significant numbers.\n\n\n    var width = \"\".concat(Math.round(size / 12 * 10e6) / 10e4, \"%\"); // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    (0, _extends2.default)(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction generateGutter(theme, breakpoint) {\n  var styles = {};\n  GUTTERS.forEach(function (spacing, index) {\n    if (index === 0) {\n      // Skip the default style.\n      return;\n    }\n\n    styles[\"spacing-\".concat(breakpoint, \"-\").concat(spacing)] = {\n      margin: -spacing / 2,\n      width: \"calc(100% + \".concat(spacing, \"px)\"),\n      '& > $item': {\n        padding: spacing / 2\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nvar styles = function styles(theme) {\n  return (0, _extends2.default)({\n    /* Styles applied to the root element if `container={true}`. */\n    container: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `item={true}`. */\n    item: {\n      boxSizing: 'border-box',\n      margin: '0' // For instance, it's useful when used with a `figure` element.\n\n    },\n\n    /* Styles applied to the root element if `zeroMinWidth={true}`. */\n    zeroMinWidth: {\n      minWidth: 0\n    },\n\n    /* Styles applied to the root element if `direction=\"column\"`. */\n    'direction-xs-column': {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n    'direction-xs-column-reverse': {\n      flexDirection: 'column-reverse'\n    },\n\n    /* Styles applied to the root element if `direction=\"rwo-reverse\"`. */\n    'direction-xs-row-reverse': {\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n    'wrap-xs-nowrap': {\n      flexWrap: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `wrap=\"reverse\"`. */\n    'wrap-xs-wrap-reverse': {\n      flexWrap: 'wrap-reverse'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"center\"`. */\n    'align-items-xs-center': {\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n    'align-items-xs-flex-start': {\n      alignItems: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n    'align-items-xs-flex-end': {\n      alignItems: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n    'align-items-xs-baseline': {\n      alignItems: 'baseline'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"center\"`. */\n    'align-content-xs-center': {\n      alignContent: 'center'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n    'align-content-xs-flex-start': {\n      alignContent: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n    'align-content-xs-flex-end': {\n      alignContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n    'align-content-xs-space-between': {\n      alignContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n    'align-content-xs-space-around': {\n      alignContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"center\"`. */\n    'justify-xs-center': {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the root element if `justify=\"flex-end\"`. */\n    'justify-xs-flex-end': {\n      justifyContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-between\"`. */\n    'justify-xs-space-between': {\n      justifyContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-around\"`. */\n    'justify-xs-space-around': {\n      justifyContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-evenly\"`. */\n    'justify-xs-space-evenly': {\n      justifyContent: 'space-evenly'\n    }\n  }, generateGutter(theme, 'xs'), _createBreakpoints.keys.reduce(function (accumulator, key) {\n    // Use side effect over immutability for better performance.\n    generateGrid(accumulator, theme, key);\n    return accumulator;\n  }, {}));\n};\n\nexports.styles = styles;\n\nfunction Grid(props) {\n  var _classNames;\n\n  var alignContent = props.alignContent,\n      alignItems = props.alignItems,\n      classes = props.classes,\n      classNameProp = props.className,\n      Component = props.component,\n      container = props.container,\n      direction = props.direction,\n      item = props.item,\n      justify = props.justify,\n      lg = props.lg,\n      md = props.md,\n      sm = props.sm,\n      spacing = props.spacing,\n      wrap = props.wrap,\n      xl = props.xl,\n      xs = props.xs,\n      zeroMinWidth = props.zeroMinWidth,\n      other = (0, _objectWithoutProperties2.default)(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justify\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n  var className = (0, _classnames.default)((_classNames = {}, (0, _defineProperty2.default)(_classNames, classes.container, container), (0, _defineProperty2.default)(_classNames, classes.item, item), (0, _defineProperty2.default)(_classNames, classes.zeroMinWidth, zeroMinWidth), (0, _defineProperty2.default)(_classNames, classes[\"spacing-xs-\".concat(String(spacing))], container && spacing !== 0), (0, _defineProperty2.default)(_classNames, classes[\"direction-xs-\".concat(String(direction))], direction !== Grid.defaultProps.direction), (0, _defineProperty2.default)(_classNames, classes[\"wrap-xs-\".concat(String(wrap))], wrap !== Grid.defaultProps.wrap), (0, _defineProperty2.default)(_classNames, classes[\"align-items-xs-\".concat(String(alignItems))], alignItems !== Grid.defaultProps.alignItems), (0, _defineProperty2.default)(_classNames, classes[\"align-content-xs-\".concat(String(alignContent))], alignContent !== Grid.defaultProps.alignContent), (0, _defineProperty2.default)(_classNames, classes[\"justify-xs-\".concat(String(justify))], justify !== Grid.defaultProps.justify), (0, _defineProperty2.default)(_classNames, classes[\"grid-xs-\".concat(String(xs))], xs !== false), (0, _defineProperty2.default)(_classNames, classes[\"grid-sm-\".concat(String(sm))], sm !== false), (0, _defineProperty2.default)(_classNames, classes[\"grid-md-\".concat(String(md))], md !== false), (0, _defineProperty2.default)(_classNames, classes[\"grid-lg-\".concat(String(lg))], lg !== false), (0, _defineProperty2.default)(_classNames, classes[\"grid-xl-\".concat(String(xl))], xl !== false), _classNames), classNameProp);\n  return _react.default.createElement(Component, (0, _extends2.default)({\n    className: className\n  }, other));\n}\n\nGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Defines the `align-content` style property.\n   * It's applied for all screen sizes.\n   */\n  alignContent: _propTypes.default.oneOf(['stretch', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around']),\n\n  /**\n   * Defines the `align-items` style property.\n   * It's applied for all screen sizes.\n   */\n  alignItems: _propTypes.default.oneOf(['flex-start', 'center', 'flex-end', 'stretch', 'baseline']),\n\n  /**\n   * The content of the component.\n   */\n  children: _propTypes.default.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css-api) below for more details.\n   */\n  classes: _propTypes.default.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: _propTypes.default.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object]),\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  container: _propTypes.default.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   */\n  direction: _propTypes.default.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  item: _propTypes.default.bool,\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   */\n  justify: _propTypes.default.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   */\n  lg: _propTypes.default.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   */\n  md: _propTypes.default.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   */\n  sm: _propTypes.default.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   */\n  spacing: _propTypes.default.oneOf(GUTTERS),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   */\n  wrap: _propTypes.default.oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   */\n  xl: _propTypes.default.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   */\n  xs: _propTypes.default.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   */\n  zeroMinWidth: _propTypes.default.bool\n} : {};\nGrid.defaultProps = {\n  alignContent: 'stretch',\n  alignItems: 'stretch',\n  component: 'div',\n  container: false,\n  direction: 'row',\n  item: false,\n  justify: 'flex-start',\n  lg: false,\n  md: false,\n  sm: false,\n  spacing: 0,\n  wrap: 'wrap',\n  xl: false,\n  xs: false,\n  zeroMinWidth: false\n};\nvar StyledGrid = (0, _withStyles.default)(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = (0, _requirePropFactory.default)('Grid');\n  StyledGrid.propTypes = (0, _extends2.default)({}, StyledGrid.propTypes, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justify: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('zeroMinWidth')\n  });\n}\n\nvar _default = StyledGrid;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction requirePropFactory(componentNameInError) {\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV === 'production') {\n    return function () {\n      return null;\n    };\n  }\n\n  var requireProp = function requireProp(requiredProp) {\n    return function (props, propName, componentName, location, propFullName) {\n      var propFullNameSafe = propFullName || propName;\n\n      if (typeof props[propName] !== 'undefined' && !props[requiredProp]) {\n        return new Error(\"The property `\".concat(propFullNameSafe, \"` of \") + \"`\".concat(componentNameInError, \"` must be used on `\").concat(requiredProp, \"`.\"));\n      }\n\n      return null;\n    };\n  };\n\n  return requireProp;\n}\n\nvar _default = requirePropFactory;\nexports.default = _default;","import React, { Suspense } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst PerformanceStats = React.lazy(() => import('./PerformanceStats'));\nconst AveragePerformanceChart = React.lazy(() => import('./AveragePerformanceChart'));\nconst OverallPerformanceChart = React.lazy(() => import('./OverallPerformanceChart'));\n\nconst HeaderTableCell = withStyles(theme => ({\n  root: {\n    backgroundColor: '#7A27A0',\n    color: theme.palette.common.white,\n  },\n}))(TableCell);\n\nconst styles = theme => ({\n  root: {\n    width: '98%',\n    marginLeft: '5px',\n    marginRight: '5px',\n    marginTop: theme.spacing.unit * 3,\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: 700,\n  },\n  expansionPanel: {\n    marginTop: '5px',\n    marginBottom: '15px',\n  },\n  progress: {\n    margin: theme.spacing.unit * 2,\n  },\n});\n\nconst staticListOfMonths = () => {\n  let listOfMonths = [];\n\n  listOfMonths.push('January');\n  listOfMonths.push('February');\n  listOfMonths.push('March');\n  listOfMonths.push('April');\n  listOfMonths.push('May');\n  listOfMonths.push('June');\n  listOfMonths.push('July');\n  listOfMonths.push('August');\n  listOfMonths.push('September');\n  listOfMonths.push('October');\n  listOfMonths.push('November');\n  listOfMonths.push('December');\n\n  return listOfMonths;\n};\n\nconst staticListOfTableCells = () => {\n  let listOfMonths = [];\n\n  for (let i = 0; i < 12; i++) {\n    listOfMonths.push(\n      <TableCell key={i} numeric>\n        0\n      </TableCell>,\n    );\n  }\n\n  return listOfMonths;\n};\n\nconst buildMonthRows = racesByYear => {\n  let listOfYears = [];\n  let index = 0;\n\n  racesByYear.map(eachYear => {\n    const listOfMonths = staticListOfMonths();\n    const listOfTableCells = staticListOfTableCells();\n    const yearKey = 'year-' + eachYear.year.toString() + '-' + index.toString();\n    const yearCell = (\n      <TableCell key={yearKey} numeric>\n        {eachYear.year}\n      </TableCell>\n    );\n    let totalForYear = 0;\n\n    if (eachYear.months && eachYear.months.length > 0) {\n      for (let i = 0; i < eachYear.months.length; i++) {\n        const eachMonth = eachYear.months[i];\n        const monthName = Object.keys(eachMonth)[0];\n        const monthIndex = listOfMonths.indexOf(monthName);\n\n        if (monthIndex > -1) {\n          const yearMonthKey =\n            'year-' + eachYear.year.toString() + '-month' + monthName;\n          const monthValue = `${eachMonth[monthName]}`;\n\n          totalForYear = totalForYear + parseInt(monthValue, 10);\n          listOfTableCells[monthIndex] = (\n            <TableCell key={yearMonthKey} numeric>\n              {monthValue}\n            </TableCell>\n          );\n        }\n      }\n    }\n\n    const totalCell = (\n      <TableCell key={`total-${yearKey}`} numeric>\n        {totalForYear}\n      </TableCell>\n    );\n    const rowKey = eachYear.year.toString() + '-' + index.toString();\n\n    listOfTableCells.unshift(totalCell);\n    listOfTableCells.unshift(yearCell);\n    listOfYears.push(<TableRow key={rowKey}>{listOfTableCells}</TableRow>);\n  });\n\n  return listOfYears;\n};\n\nfunction OverallStats(props) {\n  const { overallStats, classes } = props;\n  const yearsAndMonths = buildMonthRows(overallStats.racesByYear);\n\n  return (\n    <React.Fragment>\n      <ExpansionPanel className={classes.expansionPanel}>\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n          <Typography className={classes.heading}>\n            Show number of races by year and month\n          </Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <Grid container>\n            <Grid item xs={12}>\n              <Suspense fallback={<CircularProgress className={styles.progress} />}>\n                <PerformanceStats overallStats={overallStats} />\n              </Suspense>\n            </Grid>\n            <Grid item xs={12}>\n              <Paper className={classes.root}>\n                <Table className={classes.table}>\n                  <TableHead>\n                    <TableRow key={'header'}>\n                      <HeaderTableCell key={'year'} />\n                      <HeaderTableCell key={'total'} numeric>\n                        Total\n                      </HeaderTableCell>\n                      <HeaderTableCell key={'jan'} numeric>\n                        Jan\n                      </HeaderTableCell>\n                      <HeaderTableCell key={'feb'} numeric>\n                        Feb\n                      </HeaderTableCell>\n                      <HeaderTableCell key={'mar'} numeric>\n                        Mar\n                      </HeaderTableCell>\n                      <HeaderTableCell key={'apr'} numeric>\n                        Apr\n                      </HeaderTableCell>\n                      <HeaderTableCell key={'may'} numeric>\n                        May\n                      </HeaderTableCell>\n                      <HeaderTableCell key={'jun'} numeric>\n                        Jun\n                      </HeaderTableCell>\n                      <HeaderTableCell key={'jul'} numeric>\n                        Jul\n                      </HeaderTableCell>\n                      <HeaderTableCell key={'aug'} numeric>\n                        Aug\n                      </HeaderTableCell>\n                      <HeaderTableCell key={'sep'} numeric>\n                        Sep\n                      </HeaderTableCell>\n                      <HeaderTableCell key={'oct'} numeric>\n                        Oct\n                      </HeaderTableCell>\n                      <HeaderTableCell key={'nov'} numeric>\n                        Nov\n                      </HeaderTableCell>\n                      <HeaderTableCell key={'dec'} numeric>\n                        Dec\n                      </HeaderTableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>{yearsAndMonths}</TableBody>\n                </Table>\n              </Paper>\n            </Grid>\n          </Grid>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n      <ExpansionPanel className={classes.expansionPanel}>\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n          <Typography className={classes.heading}>\n            Show performance graphs\n          </Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <Grid container>\n            <Grid item xs={12}>\n              <Suspense fallback={<CircularProgress className={styles.progress} />}>\n                <OverallPerformanceChart\n                    overallRaceData={overallStats.overallRaceData}\n                  />\n              </Suspense>\n            </Grid>\n            <Grid item xs={12}>\n              <Suspense fallback={<CircularProgress className={styles.progress} />}>\n                <AveragePerformanceChart\n                  performanceData={overallStats.performanceByMonthData}\n                  title={'Average Performance By Month'}\n                  xTitle={'Year/Month'}\n                />\n              </Suspense>\n            </Grid>\n            <Grid item xs={12}>\n            <Suspense fallback={<CircularProgress className={styles.progress} />}>\n                <AveragePerformanceChart\n                    performanceData={overallStats.performanceByYearData}\n                    title={'Average Performance By Year'}\n                    xTitle={'Year'}\n                  />\n              </Suspense>\n            </Grid>\n          </Grid>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    </React.Fragment>\n  );\n}\n\nexport default withStyles(styles)(React.memo(OverallStats));\n"],"sourceRoot":""}