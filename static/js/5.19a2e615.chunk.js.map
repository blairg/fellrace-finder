{"version":3,"sources":["components/LoadingProgress.js","components/NoResults.js","service/storageService.js","service/searchService.js","utils/stringUtils.js","containers/Main.js","actions/search.js","actions/runner.js","actions/scroll.js"],"names":["withStyles","theme","react_default","a","createElement","LinearProgress_default","color","variant","noRaces","marginRight","marginLeft","marginTop","marginBottom","props","classes","Paper_default","className","Typography_default","setSession","_ref","key","value","sessionStorage","setItem","JSON","stringify","getSession","getItem","parse","removeSession","removeItem","setLocal","_ref2","localStorage","entities","AllHtmlEntities","search","_x","_x2","_x3","_search","apply","this","arguments","_callee","runnerNames","startIndex","endIndex","runnersNamedJoined","races","regenerator_default","wrap","_context","prev","next","join","axios","get","concat","process","then","response","data","catch","error","console","log","abrupt","stop","searchByRace","_x4","_x5","_searchByRace","_callee2","raceNames","encodedRaceNames","_context2","replace","encode","partialSearch","partialName","cacheKey","runnersInSessionStorage","options","url","toLowerCase","fetch","json","runnersList","items","map","runner","found","runnerAdded","display","push","upperCaseWords","sentence","sentenceParts","split","word","charAt","toUpperCase","slice","sentenceToReturn","part","ArrowUpwardButton","React","lazy","Promise","all","__webpack_require__","e","bind","ArrowDownwardButton","ClearButton","RaceDetails","RunnerDetails","RaceInfo","RaceDropDown","OverallStats","LoadMoreButton","styles","searchField","paddingBottom","paddingLeft","paddingRight","zIndex","position","backgroundColor","borderBottom","top","paddingTop","borderTop","progress","margin","spacing","unit","chosenRunnersKey","Main","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","window","addEventListener","onScroll","namesSet","getLocal","dispatchChosenRunners","onChange","componentWillUnmount","removeEventListener","buildClearButton","react","fallback","CircularProgress_default","prototypeprogress","onClick","clearClick","scrollY","scrollReducer","sticky","dispatchSticky","scrollToTop","scroll","scrollTo","performSearch","asyncToGenerator","mark","runnerName","runnerInStorage","result","dispatchLoadingProgress","dispatchRunnerDetails","dispatchChosenRace","searchReducer","sent","searchForRunners","runners","newEndIndex","names","runnersInStorage","runnersDetails","length","eachRunner","searchForRunnersByRace","_ref3","_callee3","race","_context3","handleClick","_ref4","_callee4","event","searchValue","_context4","preventDefault","searchRunnerRef","trim","state","_x6","dispatchEndIndex","clear","scrollToTopClick","scrollToBottomClick","scrollToBottom","loadingProgress","components_LoadingProgress","noResultsFound","components_NoResults","buildRaceResult","raceInfo","raceResult","id","loadMoreOnClick","_ref5","_callee5","chosenRunners","_context5","dispatchLoadMoreProgress","_x7","calculateNextEndIndex","runnerDetails","runnerReducer","_this$props$searchRed","overallStats","noOfRaces","_ref6","_callee6","_this$props$searchRed2","chosenRace","runnersDetailsResult","_context6","_","isEqual","_x8","fetchRunnerByRace","_ref7","_callee7","chosenRaceParam","_this$props$searchRed3","_context7","_x9","_x10","fetchRunners","_ref8","_callee8","callback","_context8","t0","t1","_x11","_x12","debouncedFetchRunners","debounce","getRunners","handleChooseRaceChange","_ref9","_callee9","_this$props$searchRed4","_context9","target","_x13","populateOverallStats","buildChosenRaceList","filteredRaces","listOfChosenRaces","eachChosenRace","i","name","sort","b","Date","dateTime","createRef","clearButton","raceResults","loadingResults","scrollToTopButton","racesSelect","loadMoreButton","loadMoreLoadingProgress","downwardArrowButtonShow","_this2","_this$props$classes","_this$props$searchRed5","loadMoreLoading","searchClass","racesForRunner","scrollMore","Fragment","react_select_es","cacheOptions","defaultOptions","valueKey","labelKey","matchProp","loadOptions","placeholder","noResultsText","multi","ignoreAccents","PureComponent","connect","objectSpread","dispatch","undefined","type","LOADING_PROGRESS_ACTION","payload","loadingProgressAction","details","RUNNER_DETAILS_ACTION","runnerDetailsAction","STICKY_ACTION","stickyAction","CHOSEN_RUNNERS_ACTION","chosenRunnersAction","CHOSEN_RACE_ACTION","chosenRaceAction","END_INDEX_ACTION","endIndexAction","loadMoreProgress","LOAD_MORE_PROGRESS_ACTION","loadMoreProgressAction"],"mappings":"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","file":"static/js/5.19a2e615.chunk.js","sourcesContent":["import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst styles = theme => ({});\n\nfunction LoadingProgress() {\n  return (\n    <span>\n      <br />\n      <LinearProgress />\n      <br />\n      <LinearProgress color=\"secondary\" variant=\"query\" />\n      <br />\n      <LinearProgress />\n    </span>\n  );\n}\n\nexport default withStyles(styles)(LoadingProgress);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n  noRaces: {\n    marginRight: '10px',\n    marginLeft: '10px',\n    marginTop: '5px',\n    marginBottom: '5px',\n  },\n});\n\nfunction NoResults(props) {\n  const { classes } = props;\n\n  return (\n    <Paper className={classes.noRaces}>\n      <Typography variant=\"subheading\">\n        No race results found for this runner!\n      </Typography>\n    </Paper>\n  );\n}\n\nexport default withStyles(styles)(NoResults);\n","export function setSession({ key, value }) {\n  if (value !== 'null') {\n    sessionStorage.setItem(key, JSON.stringify(value));\n  }\n}\n\nexport function getSession(key) {\n  const value = sessionStorage.getItem(key);\n\n  if (value) {\n    return JSON.parse(value);\n  }\n\n  return value;\n}\n\nexport function removeSession(key) {\n  if (key) {\n    sessionStorage.removeItem(key);\n  }\n}\n\nexport function removeAllSession() {\n  sessionStorage.clear();\n}\n\nexport function setLocal({ key, value }) {\n  if (value !== 'null') {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n}\n\nexport function getLocal(key) {\n  const value = localStorage.getItem(key);\n\n  if (value) {\n    return JSON.parse(value);\n  }\n\n  return value;\n}\n\nexport function removeLocal(key) {\n  if (key) {\n    localStorage.removeItem(key);\n  }\n}\n\nexport function removeAllLocal() {\n  localStorage.clear();\n}\n","import axios from 'axios';\nimport { AllHtmlEntities } from 'html-entities';\n\nimport { getSession, setSession } from './storageService';\n\nconst entities = new AllHtmlEntities();\n\nexport async function search(runnerNames, startIndex, endIndex) {\n  const runnersNamedJoined = runnerNames.join('$$');\n  let races = null;\n\n  await axios\n    .get(\n      `${\n        process.env.REACT_APP_API_SERVER\n      }/runner/${runnersNamedJoined}/${startIndex}/${endIndex}`,\n    )\n    .then(function(response) {\n      races = response.data;\n      return races;\n    })\n    .catch(function(error) {\n      console.log(error);\n    });\n\n  return races;\n}\n\nexport async function searchByRace(runnerNames, raceNames) {\n  const runnersNamedJoined = runnerNames.join('$$');\n  let encodedRaceNames = raceNames.replace('/', '**');\n  encodedRaceNames = entities.encode(encodedRaceNames);\n  let races = null;\n\n  await axios\n    .get(\n      `${\n        process.env.REACT_APP_API_SERVER\n      }/runnerByRace/${runnersNamedJoined}/${encodedRaceNames}`,\n    )\n    .then(function(response) {\n      races = response.data;\n      return races;\n    })\n    .catch(function(error) {\n      console.log(error);\n    });\n\n  return races;\n}\n\nexport function partialSearch(partialName) {\n  const cacheKey = `runnersList${partialName}`;\n  const runnersInSessionStorage = getSession(cacheKey);\n\n  if (runnersInSessionStorage) {\n    return {\n      options: runnersInSessionStorage,\n    };\n  }\n\n  const url = `${\n    process.env.REACT_APP_API_SERVER\n  }/autocomplete/runner/${partialName.toLowerCase()}`;\n\n  return fetch(url)\n    .then(response => {\n      return response.json();\n    })\n    .then(json => {\n      const runnersList = [];\n\n      json.items.map(runner => {\n        let found = false;\n\n        runnersList.map(runnerAdded => {\n          if (runner.display === runnerAdded.display) {\n            found = true;\n\n            return true;\n          }\n\n          return false;\n        });\n\n        if (!found) {\n          runnersList.push(runner);\n        }\n\n        return found;\n      });\n\n      setSession({\n        key: cacheKey,\n        value: runnersList,\n      });\n\n      return {\n        options: runnersList,\n      };\n    });\n}\n","// @TODO: Test Me\nexport function upperCaseWords(sentence) {\n  const sentenceParts = sentence\n    .split(' ')\n    .map(word => `${word.charAt(0).toUpperCase()}${word.slice(1)} `);\n  let sentenceToReturn = '';\n\n  sentenceParts.map(part => {\n    sentenceToReturn = `${sentenceToReturn}${part}`;\n\n    return sentenceToReturn;\n  });\n\n  return sentenceToReturn;\n}\n","import React, { PureComponent, Suspense } from 'react';\nimport { connect } from 'react-redux';\nimport { animateScroll as scroll } from 'react-scroll';\nimport { Async } from 'react-select';\nimport _ from 'lodash';\nimport 'react-select/dist/react-select.css';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { loadingProgressAction, chosenRunnersAction, chosenRaceAction, endIndexAction, loadMoreProgressAction } from './../actions/search';\nimport { runnerDetailsAction } from './../actions/runner';\nimport { stickyAction } from './../actions/scroll';\nimport LoadingProgress from './../components/LoadingProgress';\nimport NoResults from './../components/NoResults';\n\nimport {\n  search,\n  partialSearch,\n  searchByRace,\n} from './../service/searchService';\nimport {\n  getSession,\n  setSession,\n  removeSession,\n  getLocal,\n  setLocal,\n  removeLocal,\n  removeAllSession,\n} from './../service/storageService';\nimport { upperCaseWords } from './../utils/stringUtils';\n\nconst ArrowUpwardButton = React.lazy(() => import('./../components/ArrowUpwardButton'));\nconst ArrowDownwardButton = React.lazy(() => import('./../components/ArrowDownwardButton'));\nconst ClearButton = React.lazy(() => import('./../components/ClearButton'));\nconst RaceDetails = React.lazy(() => import('./../components/RaceDetails'));\nconst RunnerDetails = React.lazy(() => import('./../components/RunnerDetails'));\nconst RaceInfo = React.lazy(() => import('./../components/RaceInfo'));\nconst RaceDropDown = React.lazy(() => import('./../components/RaceDropDown'));\nconst OverallStats = React.lazy(() => import('./../components/OverallStats'));\nconst LoadMoreButton = React.lazy(() => import('./../components/LoadMoreButton'));\n\nconst styles = theme => ({\n  searchField: {\n    paddingBottom: '5px',\n    paddingLeft: '5px',\n    paddingRight: '5px',\n    marginTop: '-15px',\n    zIndex: '2',\n  },\n  search: {\n    position: 'sticky',\n    backgroundColor: 'white',\n    zIndex: '2 !important',\n    borderBottom: '1px solid #CCCCCC',\n    top: '20px',\n    paddingTop: '20px',\n    borderTop: '1px solid #CCCCCC',\n    paddingBottom: '2px',\n  },\n  progress: {\n    margin: theme.spacing.unit * 2,\n  },\n});\n\nconst chosenRunnersKey = 'chosenRunners';\nconst startIndex = 0;\n\nclass Main extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.searchRunnerRef = React.createRef();\n  }\n\n  componentDidMount = () => {\n    window.addEventListener('scroll', this.onScroll, false);\n\n    const namesSet = getLocal(chosenRunnersKey);\n\n    if (namesSet) {\n      this.props.dispatchChosenRunners(namesSet);\n      this.onChange(namesSet);\n    }\n  };\n\n  componentWillUnmount = () => {\n    window.removeEventListener('scroll', this.onScroll, false);\n  };\n\n  buildClearButton = () => {\n    return <Suspense fallback={<CircularProgress className={styles.prototypeprogress} />}>\n            <ClearButton onClick={this.clearClick} />\n          </Suspense>;\n  };\n\n  onScroll = () => {\n    if (window.scrollY >= 165 && !this.props.scrollReducer.sticky) {\n      this.props.dispatchSticky(true);\n    } else if (window.scrollY < 165 && this.props.scrollReducer.sticky) {\n      this.props.dispatchSticky(false);\n    }\n  };\n\n  scrollToTop = () => {\n    scroll.scrollTo(170);\n  };\n\n  performSearch = async runnerName => {\n    if (runnerName) {\n      this.props.dispatchLoadingProgress(true);\n      this.props.dispatchRunnerDetails(null);\n      this.props.dispatchChosenRace('');\n\n      const { endIndex } = this.props.searchReducer;\n      const cacheKey = `getRunner${runnerName}`.replace(' ', '');\n      const runnerInStorage = getSession(cacheKey);\n      let result;\n\n      if (!runnerInStorage) {\n        result = await search(runnerName, startIndex, endIndex);\n        setSession({ key: cacheKey, value: JSON.stringify(result) });\n      } else {\n        result = JSON.parse(runnerInStorage);\n        removeSession(cacheKey);\n      }\n\n      this.props.dispatchRunnerDetails(result);\n      this.props.dispatchLoadingProgress(false);\n      this.scrollToTop();\n    }\n  };\n\n  searchForRunners = async (runners, newEndIndex) => {\n    if (runners && runners.length > 0) {\n      let names = [];\n\n      runners.map(eachRunner => {\n        names.push(eachRunner.display);\n      });\n\n      const cacheKey = `getRunners${names.join(\n        '',\n      )}${startIndex}${newEndIndex}`.replace(' ', '');\n      const runnersInStorage = getSession(cacheKey);\n      let runnersDetails;\n\n      if (!runnersInStorage) {\n        runnersDetails = await search(names, startIndex, newEndIndex);\n        setSession({ key: cacheKey, value: JSON.stringify(runnersDetails) });\n\n        return runnersDetails;\n      } else {\n        runnersDetails = JSON.parse(runnersInStorage);\n        removeSession(cacheKey);\n      }\n\n      return runnersDetails;\n    }\n\n    return null;\n  };\n\n  searchForRunnersByRace = async (runners, race) => {\n    if (runners && runners.length > 0) {\n      let names = [];\n\n      runners.map(eachRunner => {\n        names.push(eachRunner.display);\n      });\n\n      const cacheKey = `getRunnersByRace${names.join('')}${race}`.replace(\n        ' ',\n        '',\n      );\n      const runnersInStorage = getSession(cacheKey);\n      let runnersDetails;\n\n      if (!runnersInStorage) {\n        runnersDetails = await searchByRace(names, race);\n        setSession({ key: cacheKey, value: JSON.stringify(runnersDetails) });\n\n        return runnersDetails;\n      } else {\n        runnersDetails = JSON.parse(runnersInStorage);\n        removeSession(cacheKey);\n      }\n\n      return runnersDetails;\n    }\n\n    return null;\n  };\n\n  handleClick = async event => {\n    event.preventDefault();\n    const searchValue = this.searchRunnerRef.value.trim();\n\n    if (searchValue !== '') {\n      if (upperCaseWords(searchValue) !== this.state.runnerName) {\n        await this.performSearch(searchValue);\n      }\n    } else {\n      this.clearClick();\n    }\n  };\n\n  clearClick = () => {\n    this.props.dispatchLoadingProgress(true);\n    this.props.dispatchRunnerDetails(null);\n    this.props.dispatchSticky(false);\n    this.props.dispatchChosenRunners([]);\n    this.props.dispatchChosenRace('');\n    this.props.dispatchEndIndex(0);\n\n    removeLocal(chosenRunnersKey);\n    removeAllSession();\n\n    this.props.dispatchLoadingProgress(false);\n\n    scroll.scrollToTop();\n  };\n\n  scrollToTopClick = e => {\n    e.preventDefault();\n    scroll.scrollToTop();\n  };\n\n  scrollToBottomClick = e => {\n    e.preventDefault();\n    scroll.scrollToBottom();\n  };\n\n  loadingProgress = () => {\n    return <LoadingProgress />;\n  };\n\n  noResultsFound = () => {\n    return <NoResults />;\n  };\n\n  buildRaceResult = race => {\n    let raceResult = race;\n\n    if (raceResult && raceResult.length > 0) {\n      raceResult = raceResult[0];\n    }\n\n    let raceInfo;\n\n    if (raceResult.raceInfo) {\n      raceInfo = <Suspense fallback={<CircularProgress className={styles.progress} />}>\n                  <RaceInfo raceInfo={raceResult.raceInfo} />\n                </Suspense>;\n    }\n\n    return (\n      <div key={raceResult.id}>\n        <br />\n        <Suspense fallback={<CircularProgress className={styles.progress} />}>\n          <RaceDetails race={raceResult} />\n        </Suspense>\n        {raceInfo}\n        <Suspense fallback={<CircularProgress className={styles.progress} />}>\n          <RunnerDetails runner={raceResult.runner} />\n        </Suspense>\n      </div>\n    );\n  };\n\n  loadMoreOnClick = async event => {\n    event.preventDefault();\n    const { chosenRunners } = this.props.searchReducer;\n\n    this.props.dispatchLoadMoreProgress(true);\n\n    await this.onChange(chosenRunners);\n\n    this.props.dispatchLoadMoreProgress(false);\n  };\n\n  calculateNextEndIndex = runnerNames => {\n    const { runnerDetails } = this.props.runnerReducer;\n    const { endIndex, chosenRunners } = this.props.searchReducer;\n\n    if (endIndex === 0) {\n      return 10;\n    }\n\n    if (runnerNames.length === chosenRunners.length) {\n      if (endIndex + 10 > runnerDetails.overallStats.noOfRaces) {\n        return runnerDetails.overallStats.noOfRaces;\n      }\n\n      return endIndex + 10;\n    } else {\n      return 10;\n    }\n  };\n\n  onChange = async runnerNames => {\n    const { runnersDetails } = this.props.runnerReducer;\n    const { chosenRunners, chosenRace, endIndex } = this.props.searchReducer;\n\n    if (runnerNames.length > 0) {\n      this.props.dispatchLoadingProgress(true);\n\n      const newEndIndex = this.calculateNextEndIndex(runnerNames);\n      const runnersDetailsResult = await this.searchForRunners(\n        runnerNames,\n        newEndIndex,\n      );\n\n      if (!_.isEqual(chosenRunners, runnerNames)) {\n        this.props.dispatchChosenRunners(runnerNames);\n      }\n\n      if (!_.isEqual(runnersDetails, runnersDetailsResult)) {\n        this.props.dispatchRunnerDetails(runnersDetailsResult);\n      }\n\n      if (endIndex !== newEndIndex) {\n        this.props.dispatchEndIndex(newEndIndex);\n      }\n\n      if (chosenRace !== '') {\n        this.props.dispatchChosenRace('');\n      }\n\n      setLocal({ key: chosenRunnersKey, value: runnerNames });\n\n      this.props.dispatchLoadingProgress(false);\n    } else {\n      this.clearClick();\n    }\n  };\n\n  fetchRunnerByRace = async (runnerNames, chosenRaceParam) => {\n    const { runnersDetails } = this.props.runnerReducer;\n    const { chosenRace, chosenRunners } = this.props.searchReducer;\n\n    if (runnerNames.length > 0) {\n      const runnersDetailsResult = await this.searchForRunnersByRace(\n        runnerNames,\n        chosenRaceParam,\n      );\n\n      if (chosenRaceParam !== chosenRace) {\n        this.props.dispatchChosenRace(chosenRaceParam);\n      }\n\n      if (!_.isEqual(runnerNames, chosenRunners)) {\n        this.props.dispatchChosenRunners(runnerNames);\n      }\n\n      if (!_.isEqual(runnersDetails, runnersDetailsResult)) {\n        this.props.dispatchRunnerDetails(runnersDetailsResult);\n      }\n\n      setLocal({ key: chosenRunnersKey, value: runnerNames });\n\n      this.props.dispatchLoadingProgress(false);\n    } else {\n      this.clearClick();\n    }\n  };\n\n  fetchRunners = async (searchValue, callback) => {\n    console.log('searching - ', searchValue);\n\n    if (!searchValue) {\n      callback(null, { options: [] });\n    }\n\n    if (searchValue.length > 2) {\n      callback(null, await partialSearch(searchValue));\n    } else {\n      callback(null, { options: [] });\n    }\n  };\n\n  debouncedFetchRunners = _.debounce(this.fetchRunners, 100);\n\n  getRunners = (searchValue, callback) => {\n    if (!searchValue || searchValue.length < 4) {\n      return callback(null, { options: [] });\n    }\n\n    this.debouncedFetchRunners(searchValue, callback);\n  };\n\n  handleChooseRaceChange = async event => {\n    const { chosenRunners, endIndex } = this.props.searchReducer;\n    const chosenRace = event.target.value;\n\n    this.props.dispatchLoadingProgress(true);\n\n    if (endIndex !== 0) {\n      this.props.dispatchEndIndex(0);\n    }\n\n    if (chosenRace === 'all') {\n      await this.onChange(chosenRunners);\n    } else {\n      await this.fetchRunnerByRace(chosenRunners, chosenRace);\n    }\n\n    this.scrollToTop();\n  };\n\n  populateOverallStats = () => {\n    const { runnerDetails } = this.props.runnerReducer;\n\n    if (runnerDetails.overallStats) {\n      return  <Suspense fallback={<CircularProgress className={styles.progress} />}>\n                <OverallStats overallStats={runnerDetails.overallStats} />\n              </Suspense>;\n    }\n\n    return null;\n  };\n\n  buildChosenRaceList = (chosenRace, races) => {\n    let filteredRaces = [];\n    if (!chosenRace) {\n      chosenRace = '';\n    }\n\n    const listOfChosenRaces = chosenRace.split('||');\n\n    if (listOfChosenRaces.length > 1) {\n      listOfChosenRaces.map(eachChosenRace => {\n        for (let i = 0; i < races.length; i++) {\n          if (races[i].name === eachChosenRace) {\n            filteredRaces.push(races[i]);\n          }\n        }\n      });\n    } else {\n      if (races) {\n        filteredRaces = races;\n      }\n    }\n\n    if (filteredRaces.length > 1) {\n      filteredRaces = filteredRaces.sort(function(a, b) {\n        return new Date(b.dateTime) - new Date(a.dateTime);\n      });\n    }\n\n    return filteredRaces.map(race => this.buildRaceResult(race));\n  };\n\n  render() {\n    // @TODO: Tidy this up getting very cluttered\n    const { progress, searchField, search } = this.props.classes;\n    const { loadingProgress, chosenRunners, chosenRace, loadMoreLoading } = this.props.searchReducer;\n    const { runnerDetails } = this.props.runnerReducer;\n    const { sticky } = this.props.scrollReducer;\n    const searchClass = sticky ? search : '';\n    let { endIndex } = this.props.searchReducer;\n    let clearButton;\n    let overallStats;\n    let raceResults;\n    let loadingResults;\n    let scrollToTopButton;\n    let racesSelect;\n    let loadMoreButton;\n    let loadMoreLoadingProgress;\n    let downwardArrowButtonShow;\n\n    // loading main race results\n    if (loadingProgress) {\n      loadingResults = this.loadingProgress();\n    }\n\n    if (runnerDetails != null && runnerDetails.races && runnerDetails.races.length > 0) {\n      // Display clear button\n      clearButton = this.buildClearButton();\n      overallStats = this.populateOverallStats();\n      const racesForRunner = runnerDetails.races;\n\n      if (endIndex === 0) { \n        endIndex = 10;\n      }\n\n      // @TODO : Pass off to a function\n      // Filtering races\n      if (chosenRace === '') {\n        raceResults = racesForRunner.map(race => this.buildRaceResult(race));\n\n        // Load more button\n        if (runnerDetails.overallStats.noOfRaces > endIndex) {\n          loadMoreButton = <Suspense fallback={<CircularProgress className={progress} />}>\n                            <LoadMoreButton onClick={this.loadMoreOnClick} />\n                          </Suspense>;\n        }\n      } else {\n        raceResults = this.buildChosenRaceList(chosenRace, runnerDetails.races);\n\n        // Load more button\n        if (raceResults.length > endIndex) {\n          loadMoreButton = <Suspense fallback={<CircularProgress className={progress} />}>\n                             <LoadMoreButton onClick={this.loadMoreOnClick} />\n                           </Suspense>;\n        }\n      }\n\n      // Populating races drop down\n      racesSelect = (\n        <Suspense fallback={<CircularProgress className={progress} />}>\n                             <RaceDropDown\n                                raceNames={runnerDetails.raceNames}\n                                chosenRace={chosenRace}\n                                onChange={this.handleChooseRaceChange}\n                              />\n        </Suspense>\n      );\n\n      // loading more results\n      if (loadMoreLoading) {\n        loadMoreLoadingProgress = this.loadingProgress();\n        loadMoreButton = null;\n        scroll.scrollMore(250);\n      } else {\n        downwardArrowButtonShow = (\n          <Suspense fallback={<CircularProgress className={progress} />}>\n                  <ArrowDownwardButton onClick={this.scrollToBottomClick} />\n                </Suspense>\n        );\n\n        if (sticky) {\n          scrollToTopButton = (\n            <Suspense fallback={<CircularProgress className={progress} />}>\n                  <ArrowUpwardButton onClick={this.scrollToTopClick} />\n                </Suspense>\n          );\n        }\n      }\n    } else if (runnerDetails != null && runnerDetails.races.length === 0) {\n      raceResults = this.noResultsFound();\n    }\n\n    return (\n      <React.Fragment>\n        <div className={searchClass}>\n          <Async\n            cacheOptions\n            defaultOptions\n            className={searchField}\n            valueKey=\"original\"\n            labelKey=\"display\"\n            matchProp=\"any\"\n            name=\"runner-search-field\"\n            onChange={this.onChange}\n            loadOptions={this.getRunners}\n            placeholder=\"Search Runner\"\n            noResultsText=\"No runners found\"\n            value={chosenRunners}\n            multi={true}\n            ignoreAccents={false}\n          />\n          {racesSelect}\n          {clearButton}\n        </div>\n        {downwardArrowButtonShow}\n        {loadingResults}\n        {overallStats}\n        {raceResults}\n        {loadMoreLoadingProgress}\n        {loadMoreButton}\n        {scrollToTopButton}\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  ...state\n });\n\n const mapDispatchToProps = dispatch => ({\n  dispatchLoadingProgress: (loadingProgress) => dispatch(loadingProgressAction(loadingProgress)),\n  dispatchRunnerDetails: (runnerDetails) => dispatch(runnerDetailsAction(runnerDetails)),\n  dispatchSticky: (sticky) => dispatch(stickyAction(sticky)),\n  dispatchChosenRunners: (chosenRunners) => dispatch(chosenRunnersAction(chosenRunners)),\n  dispatchChosenRace: (chosenRace) => dispatch(chosenRaceAction(chosenRace)),\n  dispatchEndIndex: (endIndex) => dispatch(endIndexAction(endIndex)),\n  dispatchLoadMoreProgress: (loadMoreProgress) => dispatch(loadMoreProgressAction(loadMoreProgress)),\n });\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Main));\n","import {\n    LOADING_PROGRESS_ACTION,\n    CHOSEN_RUNNERS_ACTION,\n    CHOSEN_RACE_ACTION,\n    END_INDEX_ACTION,\n    LOAD_MORE_PROGRESS_ACTION,\n} from './../actionTypes/search';\n\nexport const loadingProgressAction = (loadingProgress = true) => dispatch => {\n    dispatch({\n        type: LOADING_PROGRESS_ACTION,\n        payload: loadingProgress,\n    });\n};\n\nexport const chosenRunnersAction = (chosenRunners = []) => dispatch => {\n    dispatch({\n        type: CHOSEN_RUNNERS_ACTION,\n        payload: chosenRunners,\n    });\n};\n\nexport const chosenRaceAction = (chosenRace = '') => dispatch => {\n    dispatch({\n        type: CHOSEN_RACE_ACTION,\n        payload: chosenRace,\n    });\n};\n\nexport const endIndexAction = (endIndex = 0) => dispatch => {\n    dispatch({\n        type: END_INDEX_ACTION,\n        payload: endIndex,\n    });\n};\n\nexport const loadMoreProgressAction = (loadMoreProgress = false) => dispatch => {\n    dispatch({\n        type: LOAD_MORE_PROGRESS_ACTION,\n        payload: loadMoreProgress,\n    });\n};","import {\n    RUNNER_DETAILS_ACTION,\n} from './../actionTypes/runner';\n\nexport const runnerDetailsAction = (details = null) => dispatch => {\n    dispatch({\n        type: RUNNER_DETAILS_ACTION,\n        payload: details,\n    });\n};","import {\n    STICKY_ACTION,\n} from './../actionTypes/scroll';\n\nexport const stickyAction = (sticky = false) => dispatch => {\n    dispatch({\n        type: STICKY_ACTION,\n        payload: sticky,\n    });\n};"],"sourceRoot":""}