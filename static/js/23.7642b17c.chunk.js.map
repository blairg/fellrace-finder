{"version":3,"sources":["actions/menu.js","components/MenuBar.js","actions/scroll.js","components/LoadingProgress.js","components/NoResults.js","service/storageService.js","service/searchService.js","utils/stringUtils.js","containers/Runner.js","actions/search.js","actions/runner.js","containers/Race.js","actions/race.js","containers/Main.js"],"names":["menuToggleAction","details","arguments","length","undefined","dispatch","type","MENU_TOGGLE_ACTION","payload","MenuBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleDrawerOpen","dispatchMenuToggleAction","handleDrawerClose","_this$props","classes","theme","runnerOnClick","raceOnClick","menuOpen","menuReducer","react_default","a","createElement","className","root","CssBaseline_default","AppBar_default","position","classNames","appBar","defineProperty","appBarShift","Toolbar_default","disableGutters","IconButton_default","color","aria-label","onClick","menuButton","hide","Menu_default","Drawer_default","drawer","variant","anchor","open","paper","drawerPaper","drawerHeader","direction","ChevronLeft_default","ChevronRight_default","Divider_default","List_default","ListItem_default","button","key","ListItemIcon_default","DirectionsRun_default","ListItemText_default","primary","EventNote_default","React","Component","connect","state","objectSpread","withStyles","display","transition","transitions","create","easing","sharp","duration","leavingScreen","width","concat","marginLeft","easeOut","enteringScreen","marginRight","flexShrink","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","spacing","unit","contentShift","withTheme","memo","stickyAction","sticky","STICKY_ACTION","LinearProgress_default","noRaces","marginTop","marginBottom","Paper_default","Typography_default","setSession","_ref","value","sessionStorage","setItem","JSON","stringify","getSession","getItem","parse","removeSession","removeItem","setLocal","_ref2","localStorage","getLocal","removeLocal","entities","AllHtmlEntities","search","_x","_x2","_x3","_search","apply","_callee","runnerNames","startIndex","endIndex","runnersNamedJoined","races","regenerator_default","wrap","_context","prev","next","join","axios","get","process","then","response","data","catch","error","console","log","abrupt","stop","searchByRace","_x4","_x5","_searchByRace","_callee2","raceNames","encodedRaceNames","_context2","replace","encode","partialSearch","partialName","cacheKey","runnersInSessionStorage","options","url","toLowerCase","fetch","json","runnersList","items","map","runner","found","runnerAdded","push","partialRaceSearch","racesInSessionStorage","raceList","race","raceAdded","getRaceInfoByNames","_x6","_getRaceInfoByNames","_callee3","_context3","upperCaseWords","sentence","sentenceParts","split","word","charAt","toUpperCase","slice","sentenceToReturn","part","ArrowUpwardButton","lazy","__webpack_require__","e","bind","ArrowDownwardButton","ClearButton","RaceDetails","RunnerDetails","Promise","all","RaceInfo","RaceDropDown","OverallStats","LoadMoreButton","styles","searchField","paddingBottom","paddingLeft","paddingRight","zIndex","backgroundColor","borderBottom","top","paddingTop","borderTop","progress","margin","chosenRunnersKey","Runner","componentDidMount","window","addEventListener","onScroll","namesSet","dispatchChosenRunners","onChange","scroll","scrollTo","componentWillUnmount","removeEventListener","buildClearButton","react","fallback","CircularProgress_default","prototypeprogress","clearClick","scrollY","scrollReducer","dispatchSticky","scrollToTop","performSearch","asyncToGenerator","mark","runnerName","runnerInStorage","result","dispatchLoadingProgress","dispatchRunnerDetails","dispatchChosenRace","searchReducer","sent","searchForRunners","runners","newEndIndex","names","runnersInStorage","runnersDetails","eachRunner","searchForRunnersByRace","_ref3","handleClick","_ref4","_callee4","event","searchValue","_context4","preventDefault","searchRunnerRef","trim","dispatchEndIndex","clear","scrollToTopClick","scrollToBottomClick","scrollToBottom","loadingProgress","components_LoadingProgress","noResultsFound","components_NoResults","buildRaceResult","raceInfo","raceResult","id","loadMoreOnClick","_ref5","_callee5","chosenRunners","_context5","dispatchLoadMoreProgress","_x7","calculateNextEndIndex","runnerDetails","runnerReducer","_this$props$searchRed","overallStats","noOfRaces","_ref6","_callee6","_this$props$searchRed2","chosenRace","runnersDetailsResult","_context6","_","isEqual","_x8","fetchRunnerByRace","_ref7","_callee7","chosenRaceParam","_this$props$searchRed3","_context7","_x9","_x10","fetchRunners","_ref8","_callee8","callback","_context8","t0","t1","_x11","_x12","debouncedFetchRunners","debounce","getRunners","handleChooseRaceChange","_ref9","_callee9","_this$props$searchRed4","_context9","target","_x13","populateOverallStats","buildChosenRaceList","filteredRaces","listOfChosenRaces","eachChosenRace","i","name","sort","b","Date","dateTime","createRef","clearButton","raceResults","loadingResults","scrollToTopButton","racesSelect","loadMoreButton","loadMoreLoadingProgress","downwardArrowButtonShow","_this2","_this$props$classes","_this$props$searchRed5","loadMoreLoading","searchClass","racesForRunner","scrollMore","Fragment","react_select_es","cacheOptions","defaultOptions","valueKey","labelKey","matchProp","loadOptions","placeholder","noResultsText","multi","ignoreAccents","PureComponent","LOADING_PROGRESS_ACTION","loadingProgressAction","RUNNER_DETAILS_ACTION","runnerDetailsAction","CHOSEN_RUNNERS_ACTION","chosenRunnersAction","CHOSEN_RACE_ACTION","chosenRaceAction","END_INDEX_ACTION","endIndexAction","loadMoreProgress","LOAD_MORE_PROGRESS_ACTION","loadMoreProgressAction","ResultCategory","YearResultCategory","expansionPanel","chosenRacesKey","Race","racesSet","Race_ClearButton","raceDetails","chosenRaces","raceDetailsResult","raceReducer","searchForRaces","dispatchRaceDetails","fetchRaces","debouncedFetchRaces","getRaces","raceInStorage","original","buildRaceInfo","raceInfoComponent","Race_RaceInfo","buildResultCategories","categoryRecords","resultCategoryComponent","ExpansionPanel_default","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","heading","ExpansionPanelDetails_default","buildYearResultCategories","yearResultsComponent","searchRaceRef","loadingRaceProgress","Race_ArrowDownwardButton","Race_ArrowUpwardButton","LOADING_PROGRESS_RACE_ACTION","loadingProgressRaceAction","CHOSEN_RACES_ACTION","chosenRacesAction","RACE_DETAILS_ACTION","raceDetailsAction","Main","dispatchMenuAction","cachedValue","runnerOrRaceSearch","_this$props$menuReduc","hasUserSelectedMenuOption","containers_Race","containers_Runner","components_MenuBar","closeMenu","menu","MENU_ACTION","menuAction"],"mappings":"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","file":"static/js/23.7642b17c.chunk.js","sourcesContent":["import {\n    MENU_ACTION,\n    MENU_TOGGLE_ACTION,\n} from './../actionTypes/menu';\n\nexport const menuAction = (details = null) => dispatch => {\n    dispatch({\n        type: MENU_ACTION,\n        payload: details,\n    });\n};\n\nexport const menuToggleAction = (details = null) => dispatch => {\n    dispatch({\n        type: MENU_TOGGLE_ACTION,\n        payload: details,\n    });\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DirectionsRunIcon from '@material-ui/icons/DirectionsRun';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\n\nimport { menuToggleAction } from './../actions/menu';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 20,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n});\n\nclass MenuBar extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  handleDrawerOpen = () => {\n    this.props.dispatchMenuToggleAction(true);\n  };\n\n  handleDrawerClose = () => {\n    this.props.dispatchMenuToggleAction(false);\n  };\n\n  render() {\n    const { classes, theme, runnerOnClick, raceOnClick, menuReducer } = this.props;\n    const { menuOpen } = menuReducer;\n\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar\n          position=\"fixed\"\n          className={classNames(classes.appBar, {\n            [classes.appBarShift]: menuOpen,\n          })}\n        >\n          <Toolbar disableGutters={menuOpen}>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"Open drawer\"\n              onClick={this.handleDrawerOpen}\n              className={classNames(classes.menuButton, menuOpen && classes.hide)}\n            >\n              <MenuIcon />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          className={classes.drawer}\n          variant=\"persistent\"\n          anchor=\"left\"\n          open={menuOpen}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n        >\n          <div className={classes.drawerHeader}>\n            <IconButton onClick={this.handleDrawerClose}>\n              {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n            </IconButton>\n          </div>\n          <Divider />\n          <List>\n            <ListItem button key='Runner' onClick={runnerOnClick}>\n                <ListItemIcon><DirectionsRunIcon /></ListItemIcon>\n                <ListItemText primary='Runner' />\n            </ListItem>\n            <ListItem button key='Race' onClick={raceOnClick}>\n                <ListItemIcon><EventNoteIcon /></ListItemIcon>\n                <ListItemText primary='Race' />\n            </ListItem>\n            {/* <ListItem button key='Club'>\n                <ListItemIcon><MapIcon /></ListItemIcon>\n                <ListItemText primary='Club' />\n            </ListItem>\n            <ListItem button key='Calendar'>\n                <ListItemIcon><MapIcon /></ListItemIcon>\n                <ListItemText primary='Calendar' />\n            </ListItem> */}\n          </List>\n        </Drawer>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  ...state\n });\n\n const mapDispatchToProps = dispatch => ({\n\t dispatchMenuToggleAction: (menuOpen) => dispatch(menuToggleAction(menuOpen)),\n });\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, { withTheme: true })(React.memo(MenuBar)));\n","import {\n    STICKY_ACTION,\n} from './../actionTypes/scroll';\n\nexport const stickyAction = (sticky = false) => dispatch => {\n    dispatch({\n        type: STICKY_ACTION,\n        payload: sticky,\n    });\n};","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst styles = theme => ({});\n\nfunction LoadingProgress() {\n  return (\n    <span>\n      <br />\n      <LinearProgress />\n      <br />\n      <LinearProgress color=\"secondary\" variant=\"query\" />\n      <br />\n      <LinearProgress />\n    </span>\n  );\n}\n\nexport default withStyles(styles)(LoadingProgress);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n  noRaces: {\n    marginRight: '10px',\n    marginLeft: '10px',\n    marginTop: '5px',\n    marginBottom: '5px',\n  },\n});\n\nfunction NoResults(props) {\n  const { classes } = props;\n\n  return (\n    <Paper className={classes.noRaces}>\n      <Typography variant=\"subheading\">\n        No race results found for this runner!\n      </Typography>\n    </Paper>\n  );\n}\n\nexport default withStyles(styles)(NoResults);\n","export function setSession({ key, value }) {\n  if (value !== 'null') {\n    sessionStorage.setItem(key, JSON.stringify(value));\n  }\n}\n\nexport function getSession(key) {\n  const value = sessionStorage.getItem(key);\n\n  if (value) {\n    return JSON.parse(value);\n  }\n\n  return value;\n}\n\nexport function removeSession(key) {\n  if (key) {\n    sessionStorage.removeItem(key);\n  }\n}\n\nexport function removeAllSession() {\n  sessionStorage.clear();\n}\n\nexport function setLocal({ key, value }) {\n  if (value !== 'null') {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n}\n\nexport function getLocal(key) {\n  const value = localStorage.getItem(key);\n\n  if (value) {\n    return JSON.parse(value);\n  }\n\n  return value;\n}\n\nexport function removeLocal(key) {\n  if (key) {\n    localStorage.removeItem(key);\n  }\n}\n\nexport function removeAllLocal() {\n  localStorage.clear();\n}\n","import axios from 'axios';\nimport { AllHtmlEntities } from 'html-entities';\n\nimport { getSession, setSession } from './storageService';\n\nconst entities = new AllHtmlEntities();\n\nexport async function search(runnerNames, startIndex, endIndex) {\n  const runnersNamedJoined = runnerNames.join('$$');\n  let races = null;\n\n  await axios\n    .get(\n      `${\n        process.env.REACT_APP_API_SERVER\n      }/runner/${runnersNamedJoined}/${startIndex}/${endIndex}`,\n    )\n    .then(function(response) {\n      races = response.data;\n      return races;\n    })\n    .catch(function(error) {\n      console.log(error);\n    });\n\n  return races;\n}\n\nexport async function searchByRace(runnerNames, raceNames) {\n  const runnersNamedJoined = runnerNames.join('$$');\n  let encodedRaceNames = raceNames.replace('/', '**');\n  encodedRaceNames = entities.encode(encodedRaceNames);\n  let races = null;\n\n  await axios\n    .get(\n      `${\n        process.env.REACT_APP_API_SERVER\n      }/runnerByRace/${runnersNamedJoined}/${encodedRaceNames}`,\n    )\n    .then(function(response) {\n      races = response.data;\n      return races;\n    })\n    .catch(function(error) {\n      console.log(error);\n    });\n\n  return races;\n}\n\nexport function partialSearch(partialName) {\n  const cacheKey = `runnersList${partialName}`;\n  const runnersInSessionStorage = getSession(cacheKey);\n\n  if (runnersInSessionStorage) {\n    return {\n      options: runnersInSessionStorage,\n    };\n  }\n\n  const url = `${\n    process.env.REACT_APP_API_SERVER\n  }/autocomplete/runner/${partialName.toLowerCase()}`;\n\n  return fetch(url)\n    .then(response => {\n      return response.json();\n    })\n    .then(json => {\n      const runnersList = [];\n\n      json.items.map(runner => {\n        let found = false;\n\n        runnersList.map(runnerAdded => {\n          if (runner.display === runnerAdded.display) {\n            found = true;\n\n            return true;\n          }\n\n          return false;\n        });\n\n        if (!found) {\n          runnersList.push(runner);\n        }\n\n        return found;\n      });\n\n      setSession({\n        key: cacheKey,\n        value: runnersList,\n      });\n\n      return {\n        options: runnersList,\n      };\n    });\n}\n\nexport function partialRaceSearch(partialName) {\n  const cacheKey = `raceSearch${partialName}`;\n  const racesInSessionStorage = getSession(cacheKey);\n\n  if (racesInSessionStorage) {\n    return {\n      options: racesInSessionStorage,\n    };\n  }\n\n  const url = `${\n    process.env.REACT_APP_API_SERVER\n  }/autocomplete/race/${partialName.toLowerCase()}`;\n\n  return fetch(url)\n    .then(response => {\n      return response.json();\n    })\n    .then(json => {\n      const raceList = [];\n\n      console.log(json);\n\n      json.map(race => {\n        let found = false;\n\n        raceList.map(raceAdded => {\n          if (race.display === raceAdded.display) {\n            found = true;\n\n            return true;\n          }\n\n          return false;\n        });\n\n        if (!found) {\n          raceList.push(race);\n        }\n\n        return found;\n      });\n\n      setSession({\n        key: cacheKey,\n        value: raceList,\n      });\n\n      return {\n        options: raceList,\n      };\n    });\n}\n\nexport async function getRaceInfoByNames(raceNames) {\n  const url = `${process.env.REACT_APP_API_SERVER}/race/byNames/${raceNames}`;\n  let races = null;\n\n  await axios\n    .get(url)\n    .then(function(response) {\n      races = response.data;\n      return races;\n    })\n    .catch(function(error) {\n      console.log(error);\n    });\n\n  return races;\n}\n","// @TODO: Test Me\nexport function upperCaseWords(sentence) {\n  const sentenceParts = sentence\n    .split(' ')\n    .map(word => `${word.charAt(0).toUpperCase()}${word.slice(1)} `);\n  let sentenceToReturn = '';\n\n  sentenceParts.map(part => {\n    sentenceToReturn = `${sentenceToReturn}${part}`;\n\n    return sentenceToReturn;\n  });\n\n  return sentenceToReturn;\n}\n","import React, { PureComponent, Suspense } from 'react';\nimport { connect } from 'react-redux';\nimport { animateScroll as scroll } from 'react-scroll';\nimport { Async } from 'react-select';\nimport _ from 'lodash';\nimport 'react-select/dist/react-select.css';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { loadingProgressAction, chosenRunnersAction, chosenRaceAction, endIndexAction, loadMoreProgressAction } from './../actions/search';\nimport { runnerDetailsAction } from './../actions/runner';\nimport { stickyAction } from './../actions/scroll';\nimport LoadingProgress from './../components/LoadingProgress';\nimport NoResults from './../components/NoResults';\n\nimport {\n  search,\n  partialSearch,\n  searchByRace,\n} from './../service/searchService';\nimport {\n  getSession,\n  setSession,\n  removeSession,\n  getLocal,\n  setLocal,\n  removeLocal,\n  removeAllSession,\n} from './../service/storageService';\nimport { upperCaseWords } from './../utils/stringUtils';\n\nconst ArrowUpwardButton = React.lazy(() => import('./../components/ArrowUpwardButton'));\nconst ArrowDownwardButton = React.lazy(() => import('./../components/ArrowDownwardButton'));\nconst ClearButton = React.lazy(() => import('./../components/ClearButton'));\nconst RaceDetails = React.lazy(() => import('./../components/RaceDetails'));\nconst RunnerDetails = React.lazy(() => import('./../components/RunnerDetails'));\nconst RaceInfo = React.lazy(() => import('./../components/RaceInfo'));\nconst RaceDropDown = React.lazy(() => import('./../components/RaceDropDown'));\nconst OverallStats = React.lazy(() => import('./../components/OverallStats'));\nconst LoadMoreButton = React.lazy(() => import('./../components/LoadMoreButton'));\n\nconst styles = theme => ({\n  searchField: {\n    paddingBottom: '5px',\n    paddingLeft: '5px',\n    paddingRight: '5px',\n    marginTop: '-5px',\n    zIndex: '2',\n  },\n  search: {\n    position: 'sticky',\n    backgroundColor: 'white',\n    zIndex: '2 !important',\n    borderBottom: '1px solid #CCCCCC',\n    top: '40px',\n    paddingTop: '40px',\n    borderTop: '1px solid #CCCCCC',\n    paddingBottom: '2px',\n  },\n  progress: {\n    margin: theme.spacing.unit * 2,\n  },\n});\n\nconst chosenRunnersKey = 'chosenRunners';\nconst startIndex = 0;\n\nclass Runner extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.searchRunnerRef = React.createRef();\n  }\n\n  componentDidMount = () => {\n    window.addEventListener('scroll', this.onScroll, false);\n\n    const namesSet = getLocal(chosenRunnersKey);\n\n    if (namesSet) {\n      this.props.dispatchChosenRunners(namesSet);\n      this.onChange(namesSet);\n    }\n\n    scroll.scrollTo(0);\n  };\n\n  componentWillUnmount = () => {\n    window.removeEventListener('scroll', this.onScroll, false);\n  };\n\n  buildClearButton = () => {\n    return <Suspense fallback={<CircularProgress className={styles.prototypeprogress} />}>\n            <ClearButton onClick={this.clearClick} />\n          </Suspense>;\n  };\n\n  onScroll = () => {\n    if (window.scrollY >= 165 && !this.props.scrollReducer.sticky) {\n      this.props.dispatchSticky(true);\n    } else if (window.scrollY < 165 && this.props.scrollReducer.sticky) {\n      this.props.dispatchSticky(false);\n    }\n  };\n\n  scrollToTop = () => {\n    scroll.scrollTo(170);\n  };\n\n  performSearch = async runnerName => {\n    if (runnerName) {\n      this.props.dispatchLoadingProgress(true);\n      this.props.dispatchRunnerDetails(null);\n      this.props.dispatchChosenRace('');\n\n      const { endIndex } = this.props.searchReducer;\n      const cacheKey = `getRunner${runnerName}`.replace(' ', '');\n      const runnerInStorage = getSession(cacheKey);\n      let result;\n\n      if (!runnerInStorage) {\n        result = await search(runnerName, startIndex, endIndex);\n        setSession({ key: cacheKey, value: JSON.stringify(result) });\n      } else {\n        result = JSON.parse(runnerInStorage);\n        removeSession(cacheKey);\n      }\n\n      this.props.dispatchRunnerDetails(result);\n      this.props.dispatchLoadingProgress(false);\n      this.scrollToTop();\n    }\n  };\n\n  searchForRunners = async (runners, newEndIndex) => {\n    if (runners && runners.length > 0) {\n      let names = [];\n\n      runners.map(eachRunner => {\n        names.push(eachRunner.display);\n      });\n\n      const cacheKey = `getRunners${names.join(\n        '',\n      )}${startIndex}${newEndIndex}`.replace(' ', '');\n      const runnersInStorage = getSession(cacheKey);\n      let runnersDetails;\n\n      if (!runnersInStorage) {\n        runnersDetails = await search(names, startIndex, newEndIndex);\n        setSession({ key: cacheKey, value: JSON.stringify(runnersDetails) });\n\n        return runnersDetails;\n      } else {\n        runnersDetails = JSON.parse(runnersInStorage);\n        removeSession(cacheKey);\n      }\n\n      return runnersDetails;\n    }\n\n    return null;\n  };\n\n  searchForRunnersByRace = async (runners, race) => {\n    if (runners && runners.length > 0) {\n      let names = [];\n\n      runners.map(eachRunner => {\n        names.push(eachRunner.display);\n      });\n\n      const cacheKey = `getRunnersByRace${names.join('')}${race}`.replace(\n        ' ',\n        '',\n      );\n      const runnersInStorage = getSession(cacheKey);\n      let runnersDetails;\n\n      if (!runnersInStorage) {\n        runnersDetails = await searchByRace(names, race);\n        setSession({ key: cacheKey, value: JSON.stringify(runnersDetails) });\n\n        return runnersDetails;\n      } else {\n        runnersDetails = JSON.parse(runnersInStorage);\n        removeSession(cacheKey);\n      }\n\n      return runnersDetails;\n    }\n\n    return null;\n  };\n\n  handleClick = async event => {\n    event.preventDefault();\n    const searchValue = this.searchRunnerRef.value.trim();\n\n    if (searchValue !== '') {\n      if (upperCaseWords(searchValue) !== this.state.runnerName) {\n        await this.performSearch(searchValue);\n      }\n    } else {\n      this.clearClick();\n    }\n  };\n\n  clearClick = () => {\n    this.props.dispatchLoadingProgress(true);\n    this.props.dispatchRunnerDetails(null);\n    this.props.dispatchSticky(false);\n    this.props.dispatchChosenRunners([]);\n    this.props.dispatchChosenRace('');\n    this.props.dispatchEndIndex(0);\n\n    removeLocal(chosenRunnersKey);\n    removeAllSession();\n\n    this.props.dispatchLoadingProgress(false);\n\n    scroll.scrollToTop();\n  };\n\n  scrollToTopClick = e => {\n    e.preventDefault();\n    scroll.scrollToTop();\n  };\n\n  scrollToBottomClick = e => {\n    e.preventDefault();\n    scroll.scrollToBottom();\n  };\n\n  loadingProgress = () => {\n    return <LoadingProgress />;\n  };\n\n  noResultsFound = () => {\n    return <NoResults />;\n  };\n\n  buildRaceResult = race => {\n    let raceResult = race;\n\n    if (raceResult && raceResult.length > 0) {\n      raceResult = raceResult[0];\n    }\n\n    let raceInfo;\n\n    if (raceResult.raceInfo) {\n      raceInfo = <Suspense fallback={<CircularProgress className={styles.progress} />}>\n                  <RaceInfo raceInfo={raceResult.raceInfo} />\n                </Suspense>;\n    }\n\n    return (\n      <div key={raceResult.id}>\n        <br />\n        <Suspense fallback={<CircularProgress className={styles.progress} />}>\n          <RaceDetails race={raceResult} />\n        </Suspense>\n        {raceInfo}\n        <Suspense fallback={<CircularProgress className={styles.progress} />}>\n          <RunnerDetails runner={raceResult.runner} />\n        </Suspense>\n      </div>\n    );\n  };\n\n  loadMoreOnClick = async event => {\n    event.preventDefault();\n    const { chosenRunners } = this.props.searchReducer;\n\n    this.props.dispatchLoadMoreProgress(true);\n\n    await this.onChange(chosenRunners);\n\n    this.props.dispatchLoadMoreProgress(false);\n  };\n\n  calculateNextEndIndex = runnerNames => {\n    const { runnerDetails } = this.props.runnerReducer;\n    const { endIndex, chosenRunners } = this.props.searchReducer;\n\n    if (endIndex === 0) {\n      return 10;\n    }\n\n    if (runnerNames.length === chosenRunners.length) {\n      if (endIndex + 10 > runnerDetails.overallStats.noOfRaces) {\n        return runnerDetails.overallStats.noOfRaces;\n      }\n\n      return endIndex + 10;\n    } else {\n      return 10;\n    }\n  };\n\n  onChange = async runnerNames => {\n    const { runnersDetails } = this.props.runnerReducer;\n    const { chosenRunners, chosenRace, endIndex } = this.props.searchReducer;\n\n    if (runnerNames.length > 0) {\n      this.props.dispatchLoadingProgress(true);\n\n      const newEndIndex = this.calculateNextEndIndex(runnerNames);\n      const runnersDetailsResult = await this.searchForRunners(\n        runnerNames,\n        newEndIndex,\n      );\n\n      if (!_.isEqual(chosenRunners, runnerNames)) {\n        this.props.dispatchChosenRunners(runnerNames);\n      }\n\n      if (!_.isEqual(runnersDetails, runnersDetailsResult)) {\n        this.props.dispatchRunnerDetails(runnersDetailsResult);\n      }\n\n      if (endIndex !== newEndIndex) {\n        this.props.dispatchEndIndex(newEndIndex);\n      }\n\n      if (chosenRace !== '') {\n        this.props.dispatchChosenRace('');\n      }\n\n      setLocal({ key: chosenRunnersKey, value: runnerNames });\n\n      this.props.dispatchLoadingProgress(false);\n    } else {\n      this.clearClick();\n    }\n  };\n\n  fetchRunnerByRace = async (runnerNames, chosenRaceParam) => {\n    const { runnersDetails } = this.props.runnerReducer;\n    const { chosenRace, chosenRunners } = this.props.searchReducer;\n\n    if (runnerNames.length > 0) {\n      const runnersDetailsResult = await this.searchForRunnersByRace(\n        runnerNames,\n        chosenRaceParam,\n      );\n\n      if (chosenRaceParam !== chosenRace) {\n        this.props.dispatchChosenRace(chosenRaceParam);\n      }\n\n      if (!_.isEqual(runnerNames, chosenRunners)) {\n        this.props.dispatchChosenRunners(runnerNames);\n      }\n\n      if (!_.isEqual(runnersDetails, runnersDetailsResult)) {\n        this.props.dispatchRunnerDetails(runnersDetailsResult);\n      }\n\n      setLocal({ key: chosenRunnersKey, value: runnerNames });\n\n      this.props.dispatchLoadingProgress(false);\n    } else {\n      this.clearClick();\n    }\n  };\n\n  fetchRunners = async (searchValue, callback) => {\n    console.log('searching - ', searchValue);\n    this.props.dispatchLoadingProgress(true);\n\n    if (!searchValue) {\n      callback(null, { options: [] });\n    }\n\n    if (searchValue.length > 2) {\n      callback(null, await partialSearch(searchValue));\n    } else {\n      callback(null, { options: [] });\n    }\n\n    this.props.dispatchLoadingProgress(false);\n  };\n\n  debouncedFetchRunners = _.debounce(this.fetchRunners, 100);\n\n  getRunners = (searchValue, callback) => {\n    if (!searchValue || searchValue.length < 4) {\n      return callback(null, { options: [] });\n    }\n\n    this.debouncedFetchRunners(searchValue, callback);\n  };\n\n  handleChooseRaceChange = async event => {\n    const { chosenRunners, endIndex } = this.props.searchReducer;\n    const chosenRace = event.target.value;\n\n    this.props.dispatchLoadingProgress(true);\n\n    if (endIndex !== 0) {\n      this.props.dispatchEndIndex(0);\n    }\n\n    if (chosenRace === 'all') {\n      await this.onChange(chosenRunners);\n    } else {\n      await this.fetchRunnerByRace(chosenRunners, chosenRace);\n    }\n\n    this.scrollToTop();\n  };\n\n  populateOverallStats = () => {\n    const { runnerDetails } = this.props.runnerReducer;\n\n    if (runnerDetails.overallStats) {\n      return  <Suspense fallback={<CircularProgress className={styles.progress} />}>\n                <OverallStats overallStats={runnerDetails.overallStats} />\n              </Suspense>;\n    }\n\n    return null;\n  };\n\n  buildChosenRaceList = (chosenRace, races) => {\n    let filteredRaces = [];\n    if (!chosenRace) {\n      chosenRace = '';\n    }\n\n    const listOfChosenRaces = chosenRace.split('||');\n\n    if (listOfChosenRaces.length > 1) {\n      listOfChosenRaces.map(eachChosenRace => {\n        for (let i = 0; i < races.length; i++) {\n          if (races[i].name === eachChosenRace) {\n            filteredRaces.push(races[i]);\n          }\n        }\n      });\n    } else {\n      if (races) {\n        filteredRaces = races;\n      }\n    }\n\n    if (filteredRaces.length > 1) {\n      filteredRaces = filteredRaces.sort(function(a, b) {\n        return new Date(b.dateTime) - new Date(a.dateTime);\n      });\n    }\n\n    return filteredRaces.map(race => this.buildRaceResult(race));\n  };\n\n  render() {\n    // @TODO: Tidy this up getting very cluttered\n    const { progress, searchField, search } = this.props.classes;\n    const { loadingProgress, chosenRunners, chosenRace, loadMoreLoading } = this.props.searchReducer;\n    const { runnerDetails } = this.props.runnerReducer;\n    const { sticky } = this.props.scrollReducer;\n    const searchClass = sticky ? search : '';\n    let { endIndex } = this.props.searchReducer;\n    let clearButton;\n    let overallStats;\n    let raceResults;\n    let loadingResults;\n    let scrollToTopButton;\n    let racesSelect;\n    let loadMoreButton;\n    let loadMoreLoadingProgress;\n    let downwardArrowButtonShow;\n\n    // loading main race results\n    if (loadingProgress) {\n      loadingResults = this.loadingProgress();\n    }\n\n    if (runnerDetails != null && runnerDetails.races && runnerDetails.races.length > 0) {\n      // Display clear button\n      clearButton = this.buildClearButton();\n      overallStats = this.populateOverallStats();\n      const racesForRunner = runnerDetails.races;\n\n      if (endIndex === 0) { \n        endIndex = 10;\n      }\n\n      // @TODO : Pass off to a function\n      // Filtering races\n      if (chosenRace === '') {\n        raceResults = racesForRunner.map(race => this.buildRaceResult(race));\n\n        // Load more button\n        if (runnerDetails.overallStats.noOfRaces > endIndex) {\n          loadMoreButton = <Suspense fallback={<CircularProgress className={progress} />}>\n                            <LoadMoreButton onClick={this.loadMoreOnClick} />\n                          </Suspense>;\n        }\n      } else {\n        raceResults = this.buildChosenRaceList(chosenRace, runnerDetails.races);\n\n        // Load more button\n        if (raceResults.length > endIndex) {\n          loadMoreButton = <Suspense fallback={<CircularProgress className={progress} />}>\n                             <LoadMoreButton onClick={this.loadMoreOnClick} />\n                           </Suspense>;\n        }\n      }\n\n      // Populating races drop down\n      racesSelect = (\n        <Suspense fallback={<CircularProgress className={progress} />}>\n                             <RaceDropDown\n                                raceNames={runnerDetails.raceNames}\n                                chosenRace={chosenRace}\n                                onChange={this.handleChooseRaceChange}\n                              />\n        </Suspense>\n      );\n\n      // loading more results\n      if (loadMoreLoading) {\n        loadMoreLoadingProgress = this.loadingProgress();\n        loadMoreButton = null;\n        scroll.scrollMore(250);\n      } else {\n        downwardArrowButtonShow = (\n          <Suspense fallback={<CircularProgress className={progress} />}>\n                  <ArrowDownwardButton onClick={this.scrollToBottomClick} />\n                </Suspense>\n        );\n\n        if (sticky) {\n          scrollToTopButton = (\n            <Suspense fallback={<CircularProgress className={progress} />}>\n                  <ArrowUpwardButton onClick={this.scrollToTopClick} />\n                </Suspense>\n          );\n        }\n      }\n    } else if (runnerDetails != null && runnerDetails.races.length === 0) {\n      raceResults = this.noResultsFound();\n    }\n\n    return (\n      <React.Fragment>\n        <div className={searchClass}>\n          <Async\n            cacheOptions\n            defaultOptions\n            className={searchField}\n            valueKey=\"original\"\n            labelKey=\"display\"\n            matchProp=\"any\"\n            name=\"runner-search-field\"\n            onChange={this.onChange}\n            loadOptions={this.getRunners}\n            placeholder=\"Search Runner\"\n            noResultsText=\"No runners found\"\n            value={chosenRunners}\n            multi={true}\n            ignoreAccents={false}\n          />\n          {racesSelect}\n          {clearButton}\n        </div>\n        {downwardArrowButtonShow}\n        {loadingResults}\n        {overallStats}\n        {raceResults}\n        {loadMoreLoadingProgress}\n        {loadMoreButton}\n        {scrollToTopButton}\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  ...state\n });\n\n const mapDispatchToProps = dispatch => ({\n  dispatchLoadingProgress: (loadingProgress) => dispatch(loadingProgressAction(loadingProgress)),\n  dispatchRunnerDetails: (runnerDetails) => dispatch(runnerDetailsAction(runnerDetails)),\n  dispatchSticky: (sticky) => dispatch(stickyAction(sticky)),\n  dispatchChosenRunners: (chosenRunners) => dispatch(chosenRunnersAction(chosenRunners)),\n  dispatchChosenRace: (chosenRace) => dispatch(chosenRaceAction(chosenRace)),\n  dispatchEndIndex: (endIndex) => dispatch(endIndexAction(endIndex)),\n  dispatchLoadMoreProgress: (loadMoreProgress) => dispatch(loadMoreProgressAction(loadMoreProgress)),\n });\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Runner));\n","import {\n    LOADING_PROGRESS_ACTION,\n    LOADING_PROGRESS_RACE_ACTION,\n    CHOSEN_RUNNERS_ACTION,\n    CHOSEN_RACES_ACTION,\n    CHOSEN_RACE_ACTION,\n    END_INDEX_ACTION,\n    LOAD_MORE_PROGRESS_ACTION,\n} from './../actionTypes/search';\n\nexport const loadingProgressAction = (loadingProgress = true) => dispatch => {\n    dispatch({\n        type: LOADING_PROGRESS_ACTION,\n        payload: loadingProgress,\n    });\n};\n\nexport const loadingProgressRaceAction = (loadingProgress = true) => dispatch => {\n    dispatch({\n        type: LOADING_PROGRESS_RACE_ACTION,\n        payload: loadingProgress,\n    });\n};\n\nexport const chosenRunnersAction = (chosenRunners = []) => dispatch => {\n    dispatch({\n        type: CHOSEN_RUNNERS_ACTION,\n        payload: chosenRunners,\n    });\n};\n\nexport const chosenRacesAction = (chosenRace = []) => dispatch => {\n    dispatch({\n        type: CHOSEN_RACES_ACTION,\n        payload: chosenRace,\n    });\n};\n\nexport const chosenRaceAction = (chosenRace = '') => dispatch => {\n    dispatch({\n        type: CHOSEN_RACE_ACTION,\n        payload: chosenRace,\n    });\n};\n\nexport const endIndexAction = (endIndex = 0) => dispatch => {\n    dispatch({\n        type: END_INDEX_ACTION,\n        payload: endIndex,\n    });\n};\n\nexport const loadMoreProgressAction = (loadMoreProgress = false) => dispatch => {\n    dispatch({\n        type: LOAD_MORE_PROGRESS_ACTION,\n        payload: loadMoreProgress,\n    });\n};","import {\n    RUNNER_DETAILS_ACTION,\n} from './../actionTypes/runner';\n\nexport const runnerDetailsAction = (details = null) => dispatch => {\n    dispatch({\n        type: RUNNER_DETAILS_ACTION,\n        payload: details,\n    });\n};","import React, { PureComponent, Suspense } from 'react';\nimport { connect } from 'react-redux';\nimport { animateScroll as scroll } from 'react-scroll';\nimport { Async } from 'react-select';\nimport _ from 'lodash';\nimport 'react-select/dist/react-select.css';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { partialRaceSearch, getRaceInfoByNames } from './../service/searchService';\nimport { loadingProgressRaceAction, chosenRacesAction, } from './../actions/search';\nimport { raceDetailsAction, } from './../actions/race';\nimport { stickyAction } from './../actions/scroll';\nimport { getSession,\n  setSession,\n  removeSession, getLocal, setLocal, removeLocal, } from './../service/storageService';\n\nimport LoadingProgress from './../components/LoadingProgress';\nimport NoResults from './../components/NoResults';\n\nconst ArrowUpwardButton = React.lazy(() => import('./../components/ArrowUpwardButton'));\nconst ArrowDownwardButton = React.lazy(() => import('./../components/ArrowDownwardButton'));\nconst RaceInfo = React.lazy(() => import('./../components/RaceInfo'));\nconst ClearButton = React.lazy(() => import('./../components/ClearButton'));\nconst ResultCategory = React.lazy(() => import('./../components/ResultCategory'));\nconst YearResultCategory = React.lazy(() => import('./../components/YearResultCategory'));\n\nconst styles = theme => ({\n  searchField: {\n    paddingBottom: '5px',\n    paddingLeft: '5px',\n    paddingRight: '5px',\n    marginTop: '-5px',\n    zIndex: '2',\n  },\n  search: {\n    position: 'sticky',\n    backgroundColor: 'white',\n    zIndex: '2 !important',\n    borderBottom: '1px solid #CCCCCC',\n    top: '40px',\n    paddingTop: '40px',\n    borderTop: '1px solid #CCCCCC',\n    paddingBottom: '2px',\n  },\n  progress: {\n    margin: theme.spacing.unit * 2,\n  },\n  expansionPanel: {\n    marginTop: '5px',\n    marginBottom: '15px',\n  },\n});\n\nconst chosenRacesKey = 'chosenRaces';\n\nclass Race extends PureComponent {\n  constructor(props) {\n    super(props);\n\n\t\tthis.searchRaceRef = React.createRef();\n  }\n\n  componentDidMount = () => {\n    window.addEventListener('scroll', this.onScroll, false);\n\n    const racesSet = getLocal(chosenRacesKey);\n\n    if (racesSet) {\n      this.props.dispatchLoadingProgress(true);\n      this.props.dispatchChosenRace(racesSet);\n      this.onChange(racesSet);\n      this.props.dispatchLoadingProgress(false);\n    }\n\n    scroll.scrollTo(0);\n  };\n\n  componentWillUnmount = () => {\n    window.removeEventListener('scroll', this.onScroll, false);\n  };\n\n  onScroll = () => {\n    if (window.scrollY >= 165 && !this.props.scrollReducer.sticky) {\n      this.props.dispatchSticky(true);\n    } else if (window.scrollY < 165 && this.props.scrollReducer.sticky) {\n      this.props.dispatchSticky(false);\n    }\n  };\n\n  buildClearButton = () => {\n    return <Suspense fallback={<CircularProgress className={styles.prototypeprogress} />}>\n            <ClearButton onClick={this.clearClick} />\n          </Suspense>;\n  };\n\n  onScroll = () => {\n    if (window.scrollY >= 165 && !this.props.scrollReducer.sticky) {\n      this.props.dispatchSticky(true);\n    } else if (window.scrollY < 165 && this.props.scrollReducer.sticky) {\n      this.props.dispatchSticky(false);\n    }\n  };\n\n  scrollToTop = () => {\n    scroll.scrollTo(170);\n  };\n\n  loadingProgress = () => {\n    return <LoadingProgress />;\n  };\n\n  noResultsFound = () => {\n    return <NoResults />;\n  };\n\n  scrollToTopClick = e => {\n    e.preventDefault();\n    scroll.scrollToTop();\n  };\n\n  scrollToBottomClick = e => {\n    e.preventDefault();\n    scroll.scrollToBottom();\n  };\n\n  onChange = async raceNames => {\n    const { raceDetails } = this.props.raceReducer;\n    const { chosenRaces } = this.props.searchReducer;\n\n    if (raceNames.length > 1) {\n      // @TODO: tidy up this hack so the user can only choose one race\n      this.props.dispatchChosenRace(chosenRaces);\n      this.props.dispatchLoadingProgress(false);\n\n      return;\n    }\n\n    if (raceNames.length === 1) {\n      this.props.dispatchLoadingProgress(true);\n\n      const raceDetailsResult = await this.searchForRaces(raceNames);\n\n      if (!_.isEqual(chosenRaces, raceNames)) {\n        this.props.dispatchChosenRace(raceNames);\n      }\n\n      if (!_.isEqual(raceDetails, raceDetailsResult)) {\n        this.props.dispatchRaceDetails(raceDetailsResult);\n      }\n\n      setLocal({ key: chosenRacesKey, value: raceNames });\n\n      this.props.dispatchLoadingProgress(false);\n    } else {\n      this.clearClick();\n    }\n  };\n\n  fetchRaces = async (searchValue, callback) => {\n    console.log('searching - ', searchValue);\n    this.props.dispatchLoadingProgress(true);\n\n    if (!searchValue) {\n      callback(null, { options: [] });\n    }\n\n    if (searchValue.length > 2) {\n      callback(null, await partialRaceSearch(searchValue));\n    } else {\n      callback(null, { options: [] });\n    }\n    this.props.dispatchLoadingProgress(false);\n  };\n\n\tdebouncedFetchRaces = _.debounce(this.fetchRaces, 200);\n\n  getRaces = (searchValue, callback) => {\n    if (!searchValue || searchValue.length < 3) {\n      return callback(null, { options: [] });\n    }\n\n    this.debouncedFetchRaces(searchValue, callback);\n  };\n\n  searchForRaces = async (race) => {\n    if (race) {\n      const cacheKey = `getRaces${race[0].display}`.replace(' ', '');\n      const raceInStorage = getSession(cacheKey);\n      let raceDetails;\n\n      if (!raceInStorage) {\n        raceDetails = await getRaceInfoByNames(race[0].original);\n        setSession({ key: cacheKey, value: JSON.stringify(raceDetails) });\n\n        return raceDetails;\n      } else {\n        raceDetails = JSON.parse(raceInStorage);\n        removeSession(cacheKey);\n      }\n\n      return raceDetails;\n    }\n\n    return null;\n  };\n\n  clearClick = () => {\n    this.props.dispatchLoadingProgress(true);\n    this.props.dispatchSticky(false);\n    this.props.dispatchRaceDetails(null);\n    this.props.dispatchChosenRace(null);\n\n    removeLocal(chosenRacesKey);\n\n    this.props.dispatchLoadingProgress(false);\n\n    scroll.scrollToTop();\n  };\n\n  buildRaceInfo = raceInfo => {\n    let raceInfoComponent;\n\n    if (raceInfo) {\n      raceInfoComponent = <Suspense fallback={<CircularProgress className={styles.progress} />}>\n                  <RaceInfo raceInfo={raceInfo} />\n                </Suspense>;\n    }\n\n    return (\n      <div key={raceInfo.id}>\n        {raceInfoComponent}\n      </div>\n    );\n  };\n\n  buildResultCategories = (categoryRecords, classes) => {\n    let resultCategoryComponent;\n\n    if (categoryRecords) {\n      resultCategoryComponent = <Suspense fallback={<CircularProgress className={classes.progress} />}>\n                  <ResultCategory categoryRecords={categoryRecords} />\n                </Suspense>;\n    }\n\n    return (\n      <React.Fragment>\n        <ExpansionPanel key={categoryRecords.length} className={classes.expansionPanel}>\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n              <Typography className={classes.heading}>\n                  Overall\n              </Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n              {resultCategoryComponent}\n            </ExpansionPanelDetails>\n        </ExpansionPanel>\n      </React.Fragment>\n    );\n  };\n\n  buildYearResultCategories = races => {\n    let yearResultsComponent;\n\n    if (races) {\n      yearResultsComponent = <Suspense fallback={<CircularProgress className={styles.progress} />}>\n        <YearResultCategory races={races} />\n        <br />\n        <br />\n        <br />\n        <br />\n      </Suspense>;\n    }\n\n    return yearResultsComponent;\n  };\n\n  render() {\n    const { progress, searchField, search } = this.props.classes;\n    const { loadingRaceProgress, chosenRaces } = this.props.searchReducer;\n    const { raceDetails } = this.props.raceReducer;\n    const { sticky } = this.props.scrollReducer;\n    const searchClass = sticky ? search : '';\n    let clearButton;\n    let loadingResults;\n    let raceInfoComponent;\n    let resultCategoryComponent;\n    let scrollToTopButton;\n    let downwardArrowButtonShow;\n    let yearResultsComponent;\n\n    // loading race details\n    if (loadingRaceProgress) {\n      loadingResults = this.loadingProgress();\n    }\n\n    if (chosenRaces && chosenRaces.length > 0) {\n      clearButton = this.buildClearButton();\n    }\n\n    if (raceDetails) {\n      raceInfoComponent = this.buildRaceInfo(raceDetails.raceInfo);\n      resultCategoryComponent = this.buildResultCategories(raceDetails.categoryRecords, this.props.classes);\n      yearResultsComponent = this.buildYearResultCategories(raceDetails.races);\n\n      downwardArrowButtonShow = (\n        <Suspense fallback={<CircularProgress className={progress} />}>\n                <ArrowDownwardButton onClick={this.scrollToBottomClick} />\n              </Suspense>\n      );\n      \n\n    }\n\n    if (sticky) {\n      scrollToTopButton = (\n        <Suspense fallback={<CircularProgress className={progress} />}>\n              <ArrowUpwardButton onClick={this.scrollToTopClick} />\n            </Suspense>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <div className={searchClass}>\n          <Async\n            cacheOptions\n            defaultOptions\n            className={searchField}\n            valueKey=\"original\"\n            labelKey=\"display\"\n            matchProp=\"any\"\n            name=\"race-search-field\"\n            onChange={this.onChange}\n            loadOptions={this.getRaces}\n            placeholder=\"Search Race\"\n            noResultsText=\"No race found\"\n            value={chosenRaces}\n            multi={true}\n            ignoreAccents={false}\n          />\n          {clearButton}\n        </div>\n        {loadingResults}\n        {raceInfoComponent}\n        {resultCategoryComponent}\n        {yearResultsComponent}\n        {downwardArrowButtonShow}\n        {scrollToTopButton}\n      </React.Fragment>\n  \t);\n \t}\n}\n\nconst mapStateToProps = state => ({\n  ...state\n });\n\n const mapDispatchToProps = dispatch => ({\n  dispatchLoadingProgress: (loadingProgress) => dispatch(loadingProgressRaceAction(loadingProgress)),\n  dispatchChosenRace: (chosenRace) => dispatch(chosenRacesAction(chosenRace)),\n  dispatchRaceDetails: (raceDetails) => dispatch(raceDetailsAction(raceDetails)),\n  dispatchSticky: (sticky) => dispatch(stickyAction(sticky)),\n });\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Race));","import {\n    RACE_DETAILS_ACTION,\n} from './../actionTypes/race';\n\nexport const raceDetailsAction = (details = null) => dispatch => {\n    dispatch({\n        type: RACE_DETAILS_ACTION,\n        payload: details,\n    });\n};","import React, { PureComponent, Suspense } from 'react';\nimport { connect } from 'react-redux';\n\nimport MenuBar from './../components/MenuBar';\nimport Runner from './Runner';\nimport Race from './Race';\n\nimport { menuAction, menuToggleAction } from './../actions/menu';\nimport { getLocal, setLocal,  } from './../service/storageService';\n\nconst cacheKey = 'Main-menuoption';\n\nclass Main extends PureComponent {\n  constructor(props) {\n    super(props);\n\t}\n\t\n\tcomponentWillMount() {\n\t\tconst cachedValue = getLocal(cacheKey);\n\n\t\tif (cachedValue) {\n\t\t\tif (cachedValue === 'race') {\n\t\t\t\tthis.props.dispatchMenuAction({race: true, runner: false});\n\t\t\t} else {\n\t\t\t\tthis.props.dispatchMenuAction({race: false, runner: true});\n\t\t\t}\n\n\t\t\tthis.props.dispatchMenuToggleAction(false);\n\t\t}\n\t}\n\n\traceOnClick = async event => {\n    event.preventDefault();\n\t\tsetLocal({key: cacheKey, value: 'race'});\n\n\t\tthis.props.dispatchMenuAction({race: true, runner: false});\n\t\tthis.props.dispatchMenuToggleAction(false);\n  };\n\n\trunnerOnClick = async event => {\n    event.preventDefault();\n\t\tsetLocal({key: cacheKey, value: 'runner'});\n\n\t\tthis.props.dispatchMenuAction({race: false, runner: true});\n\t\tthis.props.dispatchMenuToggleAction(false);\n  };\n\n  render() {\n\t\tconst { race, runner } = this.props.menuReducer;\n\t\tlet runnerOrRaceSearch;\n\t\tlet hasUserSelectedMenuOption = false;\n\n\t\tif (!race) {\n\t\t\trunnerOrRaceSearch = <Runner />;\n\t\t} else {\n\t\t\trunnerOrRaceSearch = <Race />;\n\t\t}\n\n\t\tif (race || runner) {\n\t\t\thasUserSelectedMenuOption = true;\n\t\t}\n\n    return (\n      <React.Fragment>\n\t\t\t\t<MenuBar raceOnClick={this.raceOnClick} runnerOnClick={this.runnerOnClick} \n\t\t\t\t\t\t\t\t closeMenu={hasUserSelectedMenuOption} />\n\t\t\t\t{runnerOrRaceSearch}\n      </React.Fragment>\n  \t);\n \t}\n}\n\nconst mapStateToProps = state => ({\n  ...state\n });\n\n const mapDispatchToProps = dispatch => ({\n\t dispatchMenuAction: (menu) => dispatch(menuAction(menu)),\n\t dispatchMenuToggleAction: (menuOpen) => dispatch(menuToggleAction(menuOpen)),\n });\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);"],"sourceRoot":""}