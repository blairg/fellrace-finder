{"version":3,"sources":["../node_modules/@material-ui/core/TableHead/TableHead.js","components/OverallStats.js","../node_modules/@material-ui/core/TableHead/index.js"],"names":["_interopRequireDefault","__webpack_require__","Object","defineProperty","exports","value","default","styles","_extends2","_objectWithoutProperties2","_classCallCheck2","_createClass2","_possibleConstructorReturn2","_getPrototypeOf2","_inherits2","_react","_propTypes","_classnames","_withStyles","root","display","TableHead","_React$Component","this","apply","arguments","key","tablelvl2","variant","_this$props","props","classes","className","Component","component","other","createElement","propTypes","defaultProps","childContextTypes","object","_default","name","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_Table__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_Table__WEBPACK_IMPORTED_MODULE_2___default","_material_ui_core_TableBody__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core_TableBody__WEBPACK_IMPORTED_MODULE_3___default","_material_ui_core_TableCell__WEBPACK_IMPORTED_MODULE_4__","_material_ui_core_TableCell__WEBPACK_IMPORTED_MODULE_4___default","_material_ui_core_TableHead__WEBPACK_IMPORTED_MODULE_5__","_material_ui_core_TableHead__WEBPACK_IMPORTED_MODULE_5___default","_material_ui_core_TableRow__WEBPACK_IMPORTED_MODULE_6__","_material_ui_core_TableRow__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_core_Paper__WEBPACK_IMPORTED_MODULE_7__","_material_ui_core_Paper__WEBPACK_IMPORTED_MODULE_7___default","_material_ui_core_ExpansionPanel__WEBPACK_IMPORTED_MODULE_8__","_material_ui_core_ExpansionPanel__WEBPACK_IMPORTED_MODULE_8___default","_material_ui_core_ExpansionPanelSummary__WEBPACK_IMPORTED_MODULE_9__","_material_ui_core_ExpansionPanelSummary__WEBPACK_IMPORTED_MODULE_9___default","_material_ui_core_ExpansionPanelDetails__WEBPACK_IMPORTED_MODULE_10__","_material_ui_core_ExpansionPanelDetails__WEBPACK_IMPORTED_MODULE_10___default","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_11__","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_11___default","_material_ui_icons_ExpandMore__WEBPACK_IMPORTED_MODULE_12__","_material_ui_icons_ExpandMore__WEBPACK_IMPORTED_MODULE_12___default","_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_13__","_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_13___default","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_14__","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_14___default","PerformanceStats","React","lazy","e","then","bind","AveragePerformanceChart","Promise","all","OverallPerformanceChart","HeaderTableCell","withStyles","theme","backgroundColor","color","palette","common","white","TableCell","width","marginLeft","marginRight","marginTop","spacing","unit","overflowX","table","minWidth","expansionPanel","marginBottom","progress","margin","buildMonthRows","racesByYear","listOfYears","map","eachYear","listOfMonths","push","staticListOfMonths","listOfTableCells","i","a","numeric","staticListOfTableCells","yearKey","year","toString","yearCell","totalForYear","months","length","eachMonth","monthName","keys","monthIndex","indexOf","yearMonthKey","monthValue","concat","parseInt","totalCell","rowKey","unshift","memo","overallStats","yearsAndMonths","Fragment","expandIcon","heading","container","item","xs","fallback","overallRaceData","performanceData","performanceByMonthData","title","xTitle","performanceByYearData","enumerable","get","_TableHead"],"mappings":"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","file":"static/js/19.389ff398.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.styles = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _withStyles = _interopRequireDefault(require(\"../styles/withStyles\"));\n\nvar styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-header-group'\n  }\n};\nexports.styles = styles;\n\nvar TableHead =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inherits2.default)(TableHead, _React$Component);\n\n  function TableHead() {\n    (0, _classCallCheck2.default)(this, TableHead);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TableHead).apply(this, arguments));\n  }\n\n  (0, _createClass2.default)(TableHead, [{\n    key: \"getChildContext\",\n    value: function getChildContext() {\n      // eslint-disable-line class-methods-use-this\n      return {\n        tablelvl2: {\n          variant: 'head'\n        }\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          className = _this$props.className,\n          Component = _this$props.component,\n          other = (0, _objectWithoutProperties2.default)(_this$props, [\"classes\", \"className\", \"component\"]);\n      return _react.default.createElement(Component, (0, _extends2.default)({\n        className: (0, _classnames.default)(classes.root, className)\n      }, other));\n    }\n  }]);\n  return TableHead;\n}(_react.default.Component);\n\nTableHead.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: _propTypes.default.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css-api) below for more details.\n   */\n  classes: _propTypes.default.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: _propTypes.default.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object])\n} : {};\nTableHead.defaultProps = {\n  component: 'thead'\n};\nTableHead.childContextTypes = {\n  tablelvl2: _propTypes.default.object\n};\n\nvar _default = (0, _withStyles.default)(styles, {\n  name: 'MuiTableHead'\n})(TableHead);\n\nexports.default = _default;","import React, { Suspense } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst PerformanceStats = React.lazy(() => import('./PerformanceStats'));\nconst AveragePerformanceChart = React.lazy(() => import('./AveragePerformanceChart'));\nconst OverallPerformanceChart = React.lazy(() => import('./OverallPerformanceChart'));\n\nconst HeaderTableCell = withStyles(theme => ({\n  root: {\n    backgroundColor: '#7A27A0',\n    color: theme.palette.common.white,\n  },\n}))(TableCell);\n\nconst styles = theme => ({\n  root: {\n    width: '98%',\n    marginLeft: '5px',\n    marginRight: '5px',\n    marginTop: theme.spacing.unit * 3,\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: 700,\n  },\n  expansionPanel: {\n    marginTop: '5px',\n    marginBottom: '15px',\n  },\n  progress: {\n    margin: theme.spacing.unit * 2,\n  },\n});\n\nconst staticListOfMonths = () => {\n  let listOfMonths = [];\n\n  listOfMonths.push('January');\n  listOfMonths.push('February');\n  listOfMonths.push('March');\n  listOfMonths.push('April');\n  listOfMonths.push('May');\n  listOfMonths.push('June');\n  listOfMonths.push('July');\n  listOfMonths.push('August');\n  listOfMonths.push('September');\n  listOfMonths.push('October');\n  listOfMonths.push('November');\n  listOfMonths.push('December');\n\n  return listOfMonths;\n};\n\nconst staticListOfTableCells = () => {\n  let listOfMonths = [];\n\n  for (let i = 0; i < 12; i++) {\n    listOfMonths.push(\n      <TableCell key={i} numeric>\n        0\n      </TableCell>,\n    );\n  }\n\n  return listOfMonths;\n};\n\nconst buildMonthRows = racesByYear => {\n  let listOfYears = [];\n  let index = 0;\n\n  racesByYear.map(eachYear => {\n    const listOfMonths = staticListOfMonths();\n    const listOfTableCells = staticListOfTableCells();\n    const yearKey = 'year-' + eachYear.year.toString() + '-' + index.toString();\n    const yearCell = (\n      <TableCell key={yearKey} numeric>\n        {eachYear.year}\n      </TableCell>\n    );\n    let totalForYear = 0;\n\n    if (eachYear.months && eachYear.months.length > 0) {\n      for (let i = 0; i < eachYear.months.length; i++) {\n        const eachMonth = eachYear.months[i];\n        const monthName = Object.keys(eachMonth)[0];\n        const monthIndex = listOfMonths.indexOf(monthName);\n\n        if (monthIndex > -1) {\n          const yearMonthKey =\n            'year-' + eachYear.year.toString() + '-month' + monthName;\n          const monthValue = `${eachMonth[monthName]}`;\n\n          totalForYear = totalForYear + parseInt(monthValue, 10);\n          listOfTableCells[monthIndex] = (\n            <TableCell key={yearMonthKey} numeric>\n              {monthValue}\n            </TableCell>\n          );\n        }\n      }\n    }\n\n    const totalCell = (\n      <TableCell key={`total-${yearKey}`} numeric>\n        {totalForYear}\n      </TableCell>\n    );\n    const rowKey = eachYear.year.toString() + '-' + index.toString();\n\n    listOfTableCells.unshift(totalCell);\n    listOfTableCells.unshift(yearCell);\n    listOfYears.push(<TableRow key={rowKey}>{listOfTableCells}</TableRow>);\n  });\n\n  return listOfYears;\n};\n\nfunction OverallStats(props) {\n  const { overallStats, classes } = props;\n  const yearsAndMonths = buildMonthRows(overallStats.racesByYear);\n\n  return (\n    <React.Fragment>\n      <ExpansionPanel className={classes.expansionPanel}>\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n          <Typography className={classes.heading}>\n            Show number of races by year and month\n          </Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <Grid container>\n            <Grid item xs={12}>\n              <Suspense fallback={<CircularProgress className={styles.progress} />}>\n                <PerformanceStats overallStats={overallStats} />\n              </Suspense>\n            </Grid>\n            <Grid item xs={12}>\n              <Paper className={classes.root}>\n                <Table className={classes.table}>\n                  <TableHead>\n                    <TableRow key={'header'}>\n                      <HeaderTableCell key={'year'} />\n                      <HeaderTableCell key={'total'} numeric>\n                        Total\n                      </HeaderTableCell>\n                      <HeaderTableCell key={'jan'} numeric>\n                        Jan\n                      </HeaderTableCell>\n                      <HeaderTableCell key={'feb'} numeric>\n                        Feb\n                      </HeaderTableCell>\n                      <HeaderTableCell key={'mar'} numeric>\n                        Mar\n                      </HeaderTableCell>\n                      <HeaderTableCell key={'apr'} numeric>\n                        Apr\n                      </HeaderTableCell>\n                      <HeaderTableCell key={'may'} numeric>\n                        May\n                      </HeaderTableCell>\n                      <HeaderTableCell key={'jun'} numeric>\n                        Jun\n                      </HeaderTableCell>\n                      <HeaderTableCell key={'jul'} numeric>\n                        Jul\n                      </HeaderTableCell>\n                      <HeaderTableCell key={'aug'} numeric>\n                        Aug\n                      </HeaderTableCell>\n                      <HeaderTableCell key={'sep'} numeric>\n                        Sep\n                      </HeaderTableCell>\n                      <HeaderTableCell key={'oct'} numeric>\n                        Oct\n                      </HeaderTableCell>\n                      <HeaderTableCell key={'nov'} numeric>\n                        Nov\n                      </HeaderTableCell>\n                      <HeaderTableCell key={'dec'} numeric>\n                        Dec\n                      </HeaderTableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>{yearsAndMonths}</TableBody>\n                </Table>\n              </Paper>\n            </Grid>\n          </Grid>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n      <ExpansionPanel className={classes.expansionPanel}>\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n          <Typography className={classes.heading}>\n            Show performance graphs\n          </Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <Grid container>\n            <Grid item xs={12}>\n              <Suspense fallback={<CircularProgress className={styles.progress} />}>\n                <OverallPerformanceChart\n                    overallRaceData={overallStats.overallRaceData}\n                  />\n              </Suspense>\n            </Grid>\n            <Grid item xs={12}>\n              <Suspense fallback={<CircularProgress className={styles.progress} />}>\n                <AveragePerformanceChart\n                  performanceData={overallStats.performanceByMonthData}\n                  title={'Average Performance By Month'}\n                  xTitle={'Year/Month'}\n                />\n              </Suspense>\n            </Grid>\n            <Grid item xs={12}>\n            <Suspense fallback={<CircularProgress className={styles.progress} />}>\n                <AveragePerformanceChart\n                    performanceData={overallStats.performanceByYearData}\n                    title={'Average Performance By Year'}\n                    xTitle={'Year'}\n                  />\n              </Suspense>\n            </Grid>\n          </Grid>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    </React.Fragment>\n  );\n}\n\nexport default withStyles(styles)(React.memo(OverallStats));\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function get() {\n    return _TableHead.default;\n  }\n});\n\nvar _TableHead = _interopRequireDefault(require(\"./TableHead\"));"],"sourceRoot":""}