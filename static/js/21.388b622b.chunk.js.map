{"version":3,"sources":["service/storageService.js","actions/menu.js","components/MenuBar.js","actions/scroll.js","components/LoadingProgress.js","components/NoResults.js","service/searchService.js","utils/stringUtils.js","containers/Runner.js","actions/search.js","actions/runner.js","containers/Race.js","actions/race.js","containers/Main.js"],"names":["setSession","_ref","key","value","sessionStorage","setItem","JSON","stringify","getSession","getItem","parse","removeSession","removeItem","removeAllSession","clear","setLocal","_ref2","localStorage","getLocal","removeLocal","__webpack_require__","d","__webpack_exports__","menuToggleAction","details","arguments","length","undefined","dispatch","type","MENU_TOGGLE_ACTION","payload","MenuBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleDrawerOpen","dispatchMenuToggleAction","handleDrawerClose","_this$props","classes","theme","runnerOnClick","raceOnClick","menuOpen","menuReducer","react_default","a","createElement","className","root","CssBaseline_default","AppBar_default","position","classNames","appBar","defineProperty","appBarShift","Toolbar_default","disableGutters","IconButton_default","color","aria-label","onClick","menuButton","hide","Menu_default","Drawer_default","drawer","variant","anchor","open","paper","drawerPaper","drawerHeader","direction","ChevronLeft_default","ChevronRight_default","Divider_default","List_default","ListItem_default","button","ListItemIcon_default","DirectionsRun_default","ListItemText_default","primary","EventNote_default","React","Component","connect","state","objectSpread","withStyles","display","transition","transitions","create","easing","sharp","duration","leavingScreen","width","concat","marginLeft","easeOut","enteringScreen","marginRight","flexShrink","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","spacing","unit","contentShift","withTheme","memo","stickyAction","sticky","STICKY_ACTION","LinearProgress_default","noRaces","marginTop","marginBottom","Paper_default","Typography_default","entities","AllHtmlEntities","search","_x","_x2","_x3","_search","apply","_callee","runnerNames","startIndex","endIndex","runnersNamedJoined","races","regenerator_default","wrap","_context","prev","next","join","axios","get","process","then","response","data","catch","error","console","log","abrupt","stop","searchByRace","_x4","_x5","_searchByRace","_callee2","raceNames","encodedRaceNames","_context2","replace","encode","partialSearch","partialName","cacheKey","runnersInSessionStorage","options","url","toLowerCase","fetch","json","runnersList","items","map","runner","found","runnerAdded","push","partialRaceSearch","racesInSessionStorage","raceList","race","raceAdded","getRaceInfoByNames","_x6","_getRaceInfoByNames","_callee3","_context3","upperCaseWords","sentence","sentenceParts","split","word","charAt","toUpperCase","slice","sentenceToReturn","part","ArrowUpwardButton","lazy","e","bind","ArrowDownwardButton","ClearButton","RaceDetails","RunnerDetails","Promise","all","RaceInfo","RaceDropDown","OverallStats","LoadMoreButton","styles","searchField","paddingBottom","paddingLeft","paddingRight","zIndex","backgroundColor","borderBottom","top","paddingTop","borderTop","progress","margin","chosenRunnersKey","Runner","componentDidMount","window","addEventListener","onScroll","namesSet","dispatchChosenRunners","onChange","scroll","scrollTo","componentWillUnmount","removeEventListener","shouldComponentUpdate","nextProps","nextState","_","isEqual","dispatchChosenRace","dispatchEndIndex","dispatchLoadMoreProgress","dispatchLoadingProgress","dispatchRunnerDetails","dispatchSticky","raceReducer","runnerReducer","scrollReducer","searchReducer","buildClearButton","react","fallback","CircularProgress_default","prototypeprogress","clearClick","scrollY","scrollToTop","performSearch","asyncToGenerator","mark","runnerName","runnerInStorage","result","sent","searchForRunners","runners","newEndIndex","names","runnersInStorage","runnersDetails","eachRunner","searchForRunnersByRace","_ref3","handleClick","_ref4","_callee4","event","searchValue","_context4","preventDefault","searchRunnerRef","trim","scrollToTopClick","scrollToBottomClick","scrollToBottom","loadingProgress","components_LoadingProgress","noResultsFound","components_NoResults","buildRaceResult","raceInfo","raceResult","id","loadMoreOnClick","_ref5","_callee5","chosenRunners","_context5","_x7","calculateNextEndIndex","runnerDetails","_this$props$searchRed","overallStats","noOfRaces","_ref6","_callee6","_this$props$searchRed2","chosenRace","runnersDetailsResult","_context6","_x8","fetchRunnerByRace","_ref7","_callee7","chosenRaceParam","_this$props$searchRed3","_context7","_x9","_x10","fetchRunners","_ref8","_callee8","callback","_context8","t0","t1","_x11","_x12","debouncedFetchRunners","debounce","getRunners","handleChooseRaceChange","_ref9","_callee9","_this$props$searchRed4","_context9","target","_x13","populateOverallStats","buildChosenRaceList","filteredRaces","listOfChosenRaces","eachChosenRace","i","name","sort","b","Date","dateTime","createRef","clearButton","raceResults","loadingResults","scrollToTopButton","racesSelect","loadMoreButton","loadMoreLoadingProgress","downwardArrowButtonShow","_this2","_this$props$classes","_this$props$searchRed5","loadMoreLoading","searchClass","racesForRunner","scrollMore","Fragment","react_select_es","cacheOptions","defaultOptions","valueKey","labelKey","matchProp","loadOptions","placeholder","noResultsText","multi","ignoreAccents","LOADING_PROGRESS_ACTION","loadingProgressAction","RUNNER_DETAILS_ACTION","runnerDetailsAction","CHOSEN_RUNNERS_ACTION","chosenRunnersAction","CHOSEN_RACE_ACTION","chosenRaceAction","END_INDEX_ACTION","endIndexAction","loadMoreProgress","LOAD_MORE_PROGRESS_ACTION","loadMoreProgressAction","ResultCategory","YearResultCategory","RacePerformancePanel","MapComponent","SameDayRaces","expansionPanel","chosenRacesKey","directionsDestinationKey","originKey","Race","getOrigin","origin","cachedOrigin","navigator","geolocation","self","assertThisInitialized","getCurrentPosition","lat","coords","latitude","lng","longitude","dispatchOrigin","racesSet","dispatchRaceDetails","Race_ClearButton","raceDetails","chosenRaces","raceDetailsResult","searchForRaces","fetchRaces","debouncedFetchRaces","getRaces","raceInStorage","original","buildRaceInfo","raceInfoComponent","_latitude","Race_RaceInfo","buildResultCategories","categoryRecords","resultCategoryComponent","ExpansionPanel_default","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","heading","ExpansionPanelDetails_default","buildYearResultCategories","yearResultsComponent","buildYearPerformanceGraph","progressClass","performanceData","performance","year","filter","raceData","buildDownwardArrow","Race_ArrowDownwardButton","buildMapComponent","destination","buildSameDayRaces","sameDayRaces","parseInt","date","substring","getFullYear","searchRaceRef","racePerformancePanelComponent","mapDirectionComponent","sameDayRacesComponent","loadingRaceProgress","_this$props$raceReduc","racesSameDay","properties","Race_ArrowUpwardButton","LOADING_PROGRESS_RACE_ACTION","loadingProgressRaceAction","CHOSEN_RACES_ACTION","chosenRacesAction","RACE_DETAILS_ACTION","raceDetailsAction","USER_ORIGIN_ACTION","userOriginAction","Main","dispatchMenuAction","cachedValue","runnerOrRaceSearch","_this$props$menuReduc","hasUserSelectedMenuOption","containers_Race","containers_Runner","components_MenuBar","closeMenu","PureComponent","menu","MENU_ACTION","menuAction"],"mappings":"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","file":"static/js/21.388b622b.chunk.js","sourcesContent":["export function setSession({ key, value }) {\n  if (value !== 'null') {\n    sessionStorage.setItem(key, JSON.stringify(value));\n  }\n}\n\nexport function getSession(key) {\n  const value = sessionStorage.getItem(key);\n\n  if (value) {\n    return JSON.parse(value);\n  }\n\n  return value;\n}\n\nexport function removeSession(key) {\n  if (key) {\n    sessionStorage.removeItem(key);\n  }\n}\n\nexport function removeAllSession() {\n  sessionStorage.clear();\n}\n\nexport function setLocal({ key, value }) {\n  if (value !== 'null') {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n}\n\nexport function getLocal(key) {\n  const value = localStorage.getItem(key);\n\n  if (value) {\n    return JSON.parse(value);\n  }\n\n  return value;\n}\n\nexport function removeLocal(key) {\n  if (key) {\n    localStorage.removeItem(key);\n  }\n}\n\nexport function removeAllLocal() {\n  localStorage.clear();\n}\n","import {\n    MENU_ACTION,\n    MENU_TOGGLE_ACTION,\n} from './../actionTypes/menu';\n\nexport const menuAction = (details = null) => dispatch => {\n    dispatch({\n        type: MENU_ACTION,\n        payload: details,\n    });\n};\n\nexport const menuToggleAction = (details = null) => dispatch => {\n    dispatch({\n        type: MENU_TOGGLE_ACTION,\n        payload: details,\n    });\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DirectionsRunIcon from '@material-ui/icons/DirectionsRun';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\n\nimport { menuToggleAction } from './../actions/menu';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 20,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n});\n\nclass MenuBar extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  handleDrawerOpen = () => {\n    this.props.dispatchMenuToggleAction(true);\n  };\n\n  handleDrawerClose = () => {\n    this.props.dispatchMenuToggleAction(false);\n  };\n\n  render() {\n    const { classes, theme, runnerOnClick, raceOnClick, menuReducer } = this.props;\n    const { menuOpen } = menuReducer;\n\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar\n          position=\"fixed\"\n          className={classNames(classes.appBar, {\n            [classes.appBarShift]: menuOpen,\n          })}\n        >\n          <Toolbar disableGutters={menuOpen}>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"Open drawer\"\n              onClick={this.handleDrawerOpen}\n              className={classNames(classes.menuButton, menuOpen && classes.hide)}\n            >\n              <MenuIcon />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          className={classes.drawer}\n          variant=\"persistent\"\n          anchor=\"left\"\n          open={menuOpen}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n        >\n          <div className={classes.drawerHeader}>\n            <IconButton onClick={this.handleDrawerClose}>\n              {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n            </IconButton>\n          </div>\n          <Divider />\n          <List>\n            <ListItem button key='Runner' onClick={runnerOnClick}>\n                <ListItemIcon><DirectionsRunIcon /></ListItemIcon>\n                <ListItemText primary='Runner' />\n            </ListItem>\n            <ListItem button key='Race' onClick={raceOnClick}>\n                <ListItemIcon><EventNoteIcon /></ListItemIcon>\n                <ListItemText primary='Race' />\n            </ListItem>\n            {/* <ListItem button key='Club'>\n                <ListItemIcon><MapIcon /></ListItemIcon>\n                <ListItemText primary='Club' />\n            </ListItem>\n            <ListItem button key='Calendar'>\n                <ListItemIcon><MapIcon /></ListItemIcon>\n                <ListItemText primary='Calendar' />\n            </ListItem> */}\n          </List>\n        </Drawer>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  ...state\n });\n\n const mapDispatchToProps = dispatch => ({\n\t dispatchMenuToggleAction: (menuOpen) => dispatch(menuToggleAction(menuOpen)),\n });\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, { withTheme: true })(React.memo(MenuBar)));\n","import {\n    STICKY_ACTION,\n} from './../actionTypes/scroll';\n\nexport const stickyAction = (sticky = false) => dispatch => {\n    dispatch({\n        type: STICKY_ACTION,\n        payload: sticky,\n    });\n};","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst styles = theme => ({});\n\nfunction LoadingProgress() {\n  return (\n    <span>\n      <br />\n      <LinearProgress />\n      <br />\n      <LinearProgress color=\"secondary\" variant=\"query\" />\n      <br />\n      <LinearProgress />\n    </span>\n  );\n}\n\nexport default withStyles(styles)(LoadingProgress);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n  noRaces: {\n    marginRight: '10px',\n    marginLeft: '10px',\n    marginTop: '5px',\n    marginBottom: '5px',\n  },\n});\n\nfunction NoResults(props) {\n  const { classes } = props;\n\n  return (\n    <Paper className={classes.noRaces}>\n      <Typography variant=\"subheading\">\n        No race results found for this runner!\n      </Typography>\n    </Paper>\n  );\n}\n\nexport default withStyles(styles)(NoResults);\n","import axios from 'axios';\nimport { AllHtmlEntities } from 'html-entities';\n\nimport { getSession, setSession } from './storageService';\n\nconst entities = new AllHtmlEntities();\n\nexport async function search(runnerNames, startIndex, endIndex) {\n  const runnersNamedJoined = runnerNames.join('$$');\n  let races = null;\n\n  await axios\n    .get(\n      `${\n        process.env.REACT_APP_API_SERVER\n      }/runner/${runnersNamedJoined}/${startIndex}/${endIndex}`,\n    )\n    .then(function(response) {\n      races = response.data;\n      return races;\n    })\n    .catch(function(error) {\n      console.log(error);\n    });\n\n  return races;\n}\n\nexport async function searchByRace(runnerNames, raceNames) {\n  const runnersNamedJoined = runnerNames.join('$$');\n  let encodedRaceNames = raceNames.replace('/', '**');\n  encodedRaceNames = entities.encode(encodedRaceNames);\n  let races = null;\n\n  await axios\n    .get(\n      `${\n        process.env.REACT_APP_API_SERVER\n      }/runnerByRace/${runnersNamedJoined}/${encodedRaceNames}`,\n    )\n    .then(function(response) {\n      races = response.data;\n      return races;\n    })\n    .catch(function(error) {\n      console.log(error);\n    });\n\n  return races;\n}\n\nexport function partialSearch(partialName) {\n  const cacheKey = `runnersList${partialName}`;\n  const runnersInSessionStorage = getSession(cacheKey);\n\n  if (runnersInSessionStorage) {\n    return {\n      options: runnersInSessionStorage,\n    };\n  }\n\n  const url = `${\n    process.env.REACT_APP_API_SERVER\n  }/autocomplete/runner/${partialName.toLowerCase()}`;\n\n  return fetch(url)\n    .then(response => {\n      return response.json();\n    })\n    .then(json => {\n      const runnersList = [];\n\n      json.items.map(runner => {\n        let found = false;\n\n        runnersList.map(runnerAdded => {\n          if (runner.display === runnerAdded.display) {\n            found = true;\n\n            return true;\n          }\n\n          return false;\n        });\n\n        if (!found) {\n          runnersList.push(runner);\n        }\n\n        return found;\n      });\n\n      setSession({\n        key: cacheKey,\n        value: runnersList,\n      });\n\n      return {\n        options: runnersList,\n      };\n    });\n}\n\nexport function partialRaceSearch(partialName) {\n  const cacheKey = `raceSearch${partialName}`;\n  const racesInSessionStorage = getSession(cacheKey);\n\n  if (racesInSessionStorage) {\n    return {\n      options: racesInSessionStorage,\n    };\n  }\n\n  const url = `${\n    process.env.REACT_APP_API_SERVER\n  }/autocomplete/race/${partialName.toLowerCase()}`;\n\n  return fetch(url)\n    .then(response => {\n      return response.json();\n    })\n    .then(json => {\n      const raceList = [];\n\n      console.log(json);\n\n      json.map(race => {\n        let found = false;\n\n        raceList.map(raceAdded => {\n          if (race.display === raceAdded.display) {\n            found = true;\n\n            return true;\n          }\n\n          return false;\n        });\n\n        if (!found) {\n          raceList.push(race);\n        }\n\n        return found;\n      });\n\n      setSession({\n        key: cacheKey,\n        value: raceList,\n      });\n\n      return {\n        options: raceList,\n      };\n    });\n}\n\nexport async function getRaceInfoByNames(raceNames) {\n  const url = `${process.env.REACT_APP_API_SERVER}/race/byNames/${raceNames}`;\n  let races = null;\n\n  await axios\n    .get(url)\n    .then(function(response) {\n      races = response.data;\n      return races;\n    })\n    .catch(function(error) {\n      console.log(error);\n    });\n\n  return races;\n}\n","// @TODO: Test Me\nexport function upperCaseWords(sentence) {\n  const sentenceParts = sentence\n    .split(' ')\n    .map(word => `${word.charAt(0).toUpperCase()}${word.slice(1)} `);\n  let sentenceToReturn = '';\n\n  sentenceParts.map(part => {\n    sentenceToReturn = `${sentenceToReturn}${part}`;\n\n    return sentenceToReturn;\n  });\n\n  return sentenceToReturn;\n}\n","import React, { Component, Suspense } from 'react';\nimport { connect } from 'react-redux';\nimport { animateScroll as scroll } from 'react-scroll';\nimport { Async } from 'react-select';\nimport _ from 'lodash';\nimport 'react-select/dist/react-select.css';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { loadingProgressAction, chosenRunnersAction, chosenRaceAction, endIndexAction, loadMoreProgressAction } from './../actions/search';\nimport { runnerDetailsAction } from './../actions/runner';\nimport { stickyAction } from './../actions/scroll';\nimport LoadingProgress from './../components/LoadingProgress';\nimport NoResults from './../components/NoResults';\n\nimport {\n  search,\n  partialSearch,\n  searchByRace,\n} from './../service/searchService';\nimport {\n  getSession,\n  setSession,\n  removeSession,\n  getLocal,\n  setLocal,\n  removeLocal,\n  removeAllSession,\n} from './../service/storageService';\nimport { upperCaseWords } from './../utils/stringUtils';\n\nconst ArrowUpwardButton = React.lazy(() => import('./../components/ArrowUpwardButton'));\nconst ArrowDownwardButton = React.lazy(() => import('./../components/ArrowDownwardButton'));\nconst ClearButton = React.lazy(() => import('./../components/ClearButton'));\nconst RaceDetails = React.lazy(() => import('./../components/RaceDetails'));\nconst RunnerDetails = React.lazy(() => import('./../components/RunnerDetails'));\nconst RaceInfo = React.lazy(() => import('./../components/RaceInfo'));\nconst RaceDropDown = React.lazy(() => import('./../components/RaceDropDown'));\nconst OverallStats = React.lazy(() => import('./../components/OverallStats'));\nconst LoadMoreButton = React.lazy(() => import('./../components/LoadMoreButton'));\n\nconst styles = theme => ({\n  searchField: {\n    paddingBottom: '5px',\n    paddingLeft: '5px',\n    paddingRight: '5px',\n    marginTop: '-5px',\n    zIndex: '2',\n  },\n  search: {\n    position: 'sticky',\n    backgroundColor: 'white',\n    zIndex: '2 !important',\n    borderBottom: '1px solid #CCCCCC',\n    top: '40px',\n    paddingTop: '40px',\n    borderTop: '1px solid #CCCCCC',\n    paddingBottom: '2px',\n  },\n  progress: {\n    margin: theme.spacing.unit * 2,\n  },\n});\n\nconst chosenRunnersKey = 'chosenRunners';\nconst startIndex = 0;\n\nclass Runner extends Component {\n  constructor(props) {\n    super(props);\n\n    this.searchRunnerRef = React.createRef();\n  }\n\n  componentDidMount = () => {\n    window.addEventListener('scroll', this.onScroll, false);\n\n    const namesSet = getLocal(chosenRunnersKey);\n\n    if (namesSet) {\n      this.props.dispatchChosenRunners(namesSet);\n      this.onChange(namesSet);\n    }\n\n    scroll.scrollTo(0);\n  };\n\n  componentWillUnmount = () => {\n    window.removeEventListener('scroll', this.onScroll, false);\n  };\n\n  shouldComponentUpdate = (nextProps, nextState) => {\n    if (!_.isEqual(this.props.classes, nextProps.classes)) {\n      return true;\n    }\n\n    if (!_.isEqual(this.props.dispatchChosenRace, nextProps.dispatchChosenRace)) {\n      return true;\n    }\n\n    if (!_.isEqual(this.props.dispatchChosenRunners, nextProps.dispatchChosenRunners)) {\n      return true;\n    }\n\n    if (!_.isEqual(this.props.dispatchEndIndex, nextProps.dispatchEndIndex)) {\n      return true;\n    }\n\n    if (!_.isEqual(this.props.dispatchLoadMoreProgress, nextProps.dispatchLoadMoreProgress)) {\n      return true;\n    }\n\n    if (!_.isEqual(this.props.dispatchLoadingProgress, nextProps.dispatchLoadingProgress)) {\n      return true;\n    }\n\n    if (!_.isEqual(this.props.dispatchRunnerDetails, nextProps.dispatchRunnerDetails)) {\n      return true;\n    }\n\n    if (!_.isEqual(this.props.dispatchSticky, nextProps.dispatchSticky)) {\n      return true;\n    }\n\n    if (!_.isEqual(this.props.menuReducer, nextProps.menuReducer)) {\n      return true;\n    }\n\n    if (!_.isEqual(this.props.raceReducer, nextProps.raceReducer)) {\n      return true;\n    }\n\n    if (!_.isEqual(this.props.runnerReducer, nextProps.runnerReducer)) {\n      return true;\n    }\n\n    if (!_.isEqual(this.props.scrollReducer, nextProps.scrollReducer)) {\n      return true;\n    }\n\n    if (!_.isEqual(this.props.searchReducer, nextProps.searchReducer)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  buildClearButton = () => {\n    return <Suspense fallback={<CircularProgress className={styles.prototypeprogress} />}>\n            <ClearButton onClick={this.clearClick} />\n          </Suspense>;\n  };\n\n  onScroll = () => {\n    if (window.scrollY >= 165 && !this.props.scrollReducer.sticky) {\n      this.props.dispatchSticky(true);\n    } else if (window.scrollY < 165 && this.props.scrollReducer.sticky) {\n      this.props.dispatchSticky(false);\n    }\n  };\n\n  scrollToTop = () => {\n    scroll.scrollTo(170);\n  };\n\n  performSearch = async runnerName => {\n    if (runnerName) {\n      this.props.dispatchLoadingProgress(true);\n      this.props.dispatchRunnerDetails(null);\n      this.props.dispatchChosenRace('');\n\n      const { endIndex } = this.props.searchReducer;\n      const cacheKey = `getRunner${runnerName}`.replace(' ', '');\n      const runnerInStorage = getSession(cacheKey);\n      let result;\n\n      if (!runnerInStorage) {\n        result = await search(runnerName, startIndex, endIndex);\n        setSession({ key: cacheKey, value: JSON.stringify(result) });\n      } else {\n        result = JSON.parse(runnerInStorage);\n        removeSession(cacheKey);\n      }\n\n      this.props.dispatchRunnerDetails(result);\n      this.props.dispatchLoadingProgress(false);\n      this.scrollToTop();\n    }\n  };\n\n  searchForRunners = async (runners, newEndIndex) => {\n    if (runners && runners.length > 0) {\n      let names = [];\n\n      runners.map(eachRunner => {\n        names.push(eachRunner.display);\n      });\n\n      const cacheKey = `getRunners${names.join(\n        '',\n      )}${startIndex}${newEndIndex}`.replace(' ', '');\n      const runnersInStorage = getSession(cacheKey);\n      let runnersDetails;\n\n      if (!runnersInStorage) {\n        runnersDetails = await search(names, startIndex, newEndIndex);\n        setSession({ key: cacheKey, value: JSON.stringify(runnersDetails) });\n\n        return runnersDetails;\n      } else {\n        runnersDetails = JSON.parse(runnersInStorage);\n        removeSession(cacheKey);\n      }\n\n      return runnersDetails;\n    }\n\n    return null;\n  };\n\n  searchForRunnersByRace = async (runners, race) => {\n    if (runners && runners.length > 0) {\n      let names = [];\n\n      runners.map(eachRunner => {\n        names.push(eachRunner.display);\n      });\n\n      const cacheKey = `getRunnersByRace${names.join('')}${race}`.replace(\n        ' ',\n        '',\n      );\n      const runnersInStorage = getSession(cacheKey);\n      let runnersDetails;\n\n      if (!runnersInStorage) {\n        runnersDetails = await searchByRace(names, race);\n        setSession({ key: cacheKey, value: JSON.stringify(runnersDetails) });\n\n        return runnersDetails;\n      } else {\n        runnersDetails = JSON.parse(runnersInStorage);\n        removeSession(cacheKey);\n      }\n\n      return runnersDetails;\n    }\n\n    return null;\n  };\n\n  handleClick = async event => {\n    event.preventDefault();\n    const searchValue = this.searchRunnerRef.value.trim();\n\n    if (searchValue !== '') {\n      if (upperCaseWords(searchValue) !== this.state.runnerName) {\n        await this.performSearch(searchValue);\n      }\n    } else {\n      this.clearClick();\n    }\n  };\n\n  clearClick = () => {\n    this.props.dispatchLoadingProgress(true);\n    this.props.dispatchRunnerDetails(null);\n    this.props.dispatchSticky(false);\n    this.props.dispatchChosenRunners([]);\n    this.props.dispatchChosenRace('');\n    this.props.dispatchEndIndex(0);\n\n    removeLocal(chosenRunnersKey);\n    removeAllSession();\n\n    this.props.dispatchLoadingProgress(false);\n\n    scroll.scrollToTop();\n  };\n\n  scrollToTopClick = e => {\n    e.preventDefault();\n    scroll.scrollToTop();\n  };\n\n  scrollToBottomClick = e => {\n    e.preventDefault();\n    scroll.scrollToBottom();\n  };\n\n  loadingProgress = () => {\n    return <LoadingProgress />;\n  };\n\n  noResultsFound = () => {\n    return <NoResults />;\n  };\n\n  buildRaceResult = race => {\n    let raceResult = race;\n\n    if (raceResult && raceResult.length > 0) {\n      raceResult = raceResult[0];\n    }\n\n    let raceInfo;\n\n    if (raceResult.raceInfo) {\n      raceInfo = <Suspense fallback={<CircularProgress className={styles.progress} />}>\n                  <RaceInfo raceInfo={raceResult.raceInfo} />\n                </Suspense>;\n    }\n\n    return (\n      <div key={raceResult.id}>\n        <br />\n        <Suspense fallback={<CircularProgress className={styles.progress} />}>\n          <RaceDetails race={raceResult} />\n        </Suspense>\n        {raceInfo}\n        <Suspense fallback={<CircularProgress className={styles.progress} />}>\n          <RunnerDetails runner={raceResult.runner} />\n        </Suspense>\n      </div>\n    );\n  };\n\n  loadMoreOnClick = async event => {\n    event.preventDefault();\n    const { chosenRunners } = this.props.searchReducer;\n\n    this.props.dispatchLoadMoreProgress(true);\n\n    await this.onChange(chosenRunners);\n\n    this.props.dispatchLoadMoreProgress(false);\n  };\n\n  calculateNextEndIndex = runnerNames => {\n    const { runnerDetails } = this.props.runnerReducer;\n    const { endIndex, chosenRunners } = this.props.searchReducer;\n\n    if (endIndex === 0) {\n      return 10;\n    }\n\n    if (runnerNames.length === chosenRunners.length) {\n      if (endIndex + 10 > runnerDetails.overallStats.noOfRaces) {\n        return runnerDetails.overallStats.noOfRaces;\n      }\n\n      return endIndex + 10;\n    } else {\n      return 10;\n    }\n  };\n\n  onChange = async runnerNames => {\n    const { runnersDetails } = this.props.runnerReducer;\n    const { chosenRunners, chosenRace, endIndex } = this.props.searchReducer;\n\n    if (runnerNames.length > 0) {\n      this.props.dispatchLoadingProgress(true);\n\n      const newEndIndex = this.calculateNextEndIndex(runnerNames);\n      const runnersDetailsResult = await this.searchForRunners(\n        runnerNames,\n        newEndIndex,\n      );\n\n      if (!_.isEqual(chosenRunners, runnerNames)) {\n        this.props.dispatchChosenRunners(runnerNames);\n      }\n\n      if (!_.isEqual(runnersDetails, runnersDetailsResult)) {\n        this.props.dispatchRunnerDetails(runnersDetailsResult);\n      }\n\n      if (endIndex !== newEndIndex) {\n        this.props.dispatchEndIndex(newEndIndex);\n      }\n\n      if (chosenRace !== '') {\n        this.props.dispatchChosenRace('');\n      }\n\n      setLocal({ key: chosenRunnersKey, value: runnerNames });\n\n      this.props.dispatchLoadingProgress(false);\n    } else {\n      this.clearClick();\n    }\n  };\n\n  fetchRunnerByRace = async (runnerNames, chosenRaceParam) => {\n    const { runnersDetails } = this.props.runnerReducer;\n    const { chosenRace, chosenRunners } = this.props.searchReducer;\n\n    if (runnerNames.length > 0) {\n      const runnersDetailsResult = await this.searchForRunnersByRace(\n        runnerNames,\n        chosenRaceParam,\n      );\n\n      if (chosenRaceParam !== chosenRace) {\n        this.props.dispatchChosenRace(chosenRaceParam);\n      }\n\n      if (!_.isEqual(runnerNames, chosenRunners)) {\n        this.props.dispatchChosenRunners(runnerNames);\n      }\n\n      if (!_.isEqual(runnersDetails, runnersDetailsResult)) {\n        this.props.dispatchRunnerDetails(runnersDetailsResult);\n      }\n\n      setLocal({ key: chosenRunnersKey, value: runnerNames });\n\n      this.props.dispatchLoadingProgress(false);\n    } else {\n      this.clearClick();\n    }\n  };\n\n  fetchRunners = async (searchValue, callback) => {\n    console.log('searching - ', searchValue);\n    this.props.dispatchLoadingProgress(true);\n\n    if (!searchValue) {\n      callback(null, { options: [] });\n    }\n\n    if (searchValue.length > 2) {\n      callback(null, await partialSearch(searchValue));\n    } else {\n      callback(null, { options: [] });\n    }\n\n    this.props.dispatchLoadingProgress(false);\n  };\n\n  debouncedFetchRunners = _.debounce(this.fetchRunners, 100);\n\n  getRunners = (searchValue, callback) => {\n    if (!searchValue || searchValue.length < 4) {\n      return callback(null, { options: [] });\n    }\n\n    this.debouncedFetchRunners(searchValue, callback);\n  };\n\n  handleChooseRaceChange = async event => {\n    const { chosenRunners, endIndex } = this.props.searchReducer;\n    const chosenRace = event.target.value;\n\n    this.props.dispatchLoadingProgress(true);\n\n    if (endIndex !== 0) {\n      this.props.dispatchEndIndex(0);\n    }\n\n    if (chosenRace === 'all') {\n      await this.onChange(chosenRunners);\n    } else {\n      await this.fetchRunnerByRace(chosenRunners, chosenRace);\n    }\n\n    this.scrollToTop();\n  };\n\n  populateOverallStats = () => {\n    const { runnerDetails } = this.props.runnerReducer;\n\n    if (runnerDetails.overallStats) {\n      return  <Suspense fallback={<CircularProgress className={styles.progress} />}>\n                <OverallStats overallStats={runnerDetails.overallStats} />\n              </Suspense>;\n    }\n\n    return null;\n  };\n\n  buildChosenRaceList = (chosenRace, races) => {\n    let filteredRaces = [];\n    if (!chosenRace) {\n      chosenRace = '';\n    }\n\n    const listOfChosenRaces = chosenRace.split('||');\n\n    if (listOfChosenRaces.length > 1) {\n      listOfChosenRaces.map(eachChosenRace => {\n        for (let i = 0; i < races.length; i++) {\n          if (races[i].name === eachChosenRace) {\n            filteredRaces.push(races[i]);\n          }\n        }\n      });\n    } else {\n      if (races) {\n        filteredRaces = races;\n      }\n    }\n\n    if (filteredRaces.length > 1) {\n      filteredRaces = filteredRaces.sort(function(a, b) {\n        return new Date(b.dateTime) - new Date(a.dateTime);\n      });\n    }\n\n    return filteredRaces.map(race => this.buildRaceResult(race));\n  };\n\n  render() {\n    // @TODO: Tidy this up getting very cluttered\n    const { progress, searchField, search } = this.props.classes;\n    const { loadingProgress, chosenRunners, chosenRace, loadMoreLoading } = this.props.searchReducer;\n    const { runnerDetails } = this.props.runnerReducer;\n    const { sticky } = this.props.scrollReducer;\n    const searchClass = sticky ? search : '';\n    let { endIndex } = this.props.searchReducer;\n    let clearButton;\n    let overallStats;\n    let raceResults;\n    let loadingResults;\n    let scrollToTopButton;\n    let racesSelect;\n    let loadMoreButton;\n    let loadMoreLoadingProgress;\n    let downwardArrowButtonShow;\n\n    // loading main race results\n    if (loadingProgress) {\n      loadingResults = this.loadingProgress();\n    }\n\n    if (runnerDetails != null && runnerDetails.races && runnerDetails.races.length > 0) {\n      // Display clear button\n      clearButton = this.buildClearButton();\n      overallStats = this.populateOverallStats();\n      const racesForRunner = runnerDetails.races;\n\n      if (endIndex === 0) { \n        endIndex = 10;\n      }\n\n      // @TODO : Pass off to a function\n      // Filtering races\n      if (chosenRace === '') {\n        raceResults = racesForRunner.map(race => this.buildRaceResult(race));\n\n        // Load more button\n        if (runnerDetails.overallStats.noOfRaces > endIndex) {\n          loadMoreButton = <Suspense fallback={<CircularProgress className={progress} />}>\n                            <LoadMoreButton onClick={this.loadMoreOnClick} />\n                          </Suspense>;\n        }\n      } else {\n        raceResults = this.buildChosenRaceList(chosenRace, runnerDetails.races);\n\n        // Load more button\n        if (raceResults.length > endIndex) {\n          loadMoreButton = <Suspense fallback={<CircularProgress className={progress} />}>\n                             <LoadMoreButton onClick={this.loadMoreOnClick} />\n                           </Suspense>;\n        }\n      }\n\n      // Populating races drop down\n      racesSelect = (\n        <Suspense fallback={<CircularProgress className={progress} />}>\n                             <RaceDropDown\n                                raceNames={runnerDetails.raceNames}\n                                chosenRace={chosenRace}\n                                onChange={this.handleChooseRaceChange}\n                              />\n        </Suspense>\n      );\n\n      // loading more results\n      if (loadMoreLoading) {\n        loadMoreLoadingProgress = this.loadingProgress();\n        loadMoreButton = null;\n        scroll.scrollMore(250);\n      } else {\n        downwardArrowButtonShow = (\n          <Suspense fallback={<CircularProgress className={progress} />}>\n                  <ArrowDownwardButton onClick={this.scrollToBottomClick} />\n                </Suspense>\n        );\n\n        if (sticky) {\n          scrollToTopButton = (\n            <Suspense fallback={<CircularProgress className={progress} />}>\n                  <ArrowUpwardButton onClick={this.scrollToTopClick} />\n                </Suspense>\n          );\n        }\n      }\n    } else if (runnerDetails != null && runnerDetails.races.length === 0) {\n      raceResults = this.noResultsFound();\n    }\n\n    return (\n      <React.Fragment>\n        <div className={searchClass}>\n          <Async\n            cacheOptions\n            defaultOptions\n            className={searchField}\n            valueKey=\"original\"\n            labelKey=\"display\"\n            matchProp=\"any\"\n            name=\"runner-search-field\"\n            onChange={this.onChange}\n            loadOptions={this.getRunners}\n            placeholder=\"Search Runner\"\n            noResultsText=\"No runners found\"\n            value={chosenRunners}\n            multi={true}\n            ignoreAccents={false}\n          />\n          {racesSelect}\n          {clearButton}\n        </div>\n        {downwardArrowButtonShow}\n        {loadingResults}\n        {overallStats}\n        {raceResults}\n        {loadMoreLoadingProgress}\n        {loadMoreButton}\n        {scrollToTopButton}\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  ...state\n });\n\n const mapDispatchToProps = dispatch => ({\n  dispatchLoadingProgress: (loadingProgress) => dispatch(loadingProgressAction(loadingProgress)),\n  dispatchRunnerDetails: (runnerDetails) => dispatch(runnerDetailsAction(runnerDetails)),\n  dispatchSticky: (sticky) => dispatch(stickyAction(sticky)),\n  dispatchChosenRunners: (chosenRunners) => dispatch(chosenRunnersAction(chosenRunners)),\n  dispatchChosenRace: (chosenRace) => dispatch(chosenRaceAction(chosenRace)),\n  dispatchEndIndex: (endIndex) => dispatch(endIndexAction(endIndex)),\n  dispatchLoadMoreProgress: (loadMoreProgress) => dispatch(loadMoreProgressAction(loadMoreProgress)),\n });\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(React.memo(Runner)));\n","import {\n    LOADING_PROGRESS_ACTION,\n    LOADING_PROGRESS_RACE_ACTION,\n    CHOSEN_RUNNERS_ACTION,\n    CHOSEN_RACES_ACTION,\n    CHOSEN_RACE_ACTION,\n    END_INDEX_ACTION,\n    LOAD_MORE_PROGRESS_ACTION,\n} from './../actionTypes/search';\n\nexport const loadingProgressAction = (loadingProgress = true) => dispatch => {\n    dispatch({\n        type: LOADING_PROGRESS_ACTION,\n        payload: loadingProgress,\n    });\n};\n\nexport const loadingProgressRaceAction = (loadingProgress = true) => dispatch => {\n    dispatch({\n        type: LOADING_PROGRESS_RACE_ACTION,\n        payload: loadingProgress,\n    });\n};\n\nexport const chosenRunnersAction = (chosenRunners = []) => dispatch => {\n    dispatch({\n        type: CHOSEN_RUNNERS_ACTION,\n        payload: chosenRunners,\n    });\n};\n\nexport const chosenRacesAction = (chosenRace = []) => dispatch => {\n    dispatch({\n        type: CHOSEN_RACES_ACTION,\n        payload: chosenRace,\n    });\n};\n\nexport const chosenRaceAction = (chosenRace = '') => dispatch => {\n    dispatch({\n        type: CHOSEN_RACE_ACTION,\n        payload: chosenRace,\n    });\n};\n\nexport const endIndexAction = (endIndex = 0) => dispatch => {\n    dispatch({\n        type: END_INDEX_ACTION,\n        payload: endIndex,\n    });\n};\n\nexport const loadMoreProgressAction = (loadMoreProgress = false) => dispatch => {\n    dispatch({\n        type: LOAD_MORE_PROGRESS_ACTION,\n        payload: loadMoreProgress,\n    });\n};","import {\n    RUNNER_DETAILS_ACTION,\n} from './../actionTypes/runner';\n\nexport const runnerDetailsAction = (details = null) => dispatch => {\n    dispatch({\n        type: RUNNER_DETAILS_ACTION,\n        payload: details,\n    });\n};","/* global google */\n\nimport React, { Component, Suspense } from 'react';\nimport { connect } from 'react-redux';\nimport { animateScroll as scroll } from 'react-scroll';\nimport { Async } from 'react-select';\nimport _ from 'lodash';\nimport 'react-select/dist/react-select.css';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { partialRaceSearch, getRaceInfoByNames } from './../service/searchService';\nimport { loadingProgressRaceAction, chosenRacesAction, } from './../actions/search';\nimport { raceDetailsAction, userOriginAction, } from './../actions/race';\nimport { stickyAction } from './../actions/scroll';\nimport { getSession,\n  setSession,\n  removeSession, getLocal, setLocal, removeLocal, } from './../service/storageService';\n\nimport LoadingProgress from './../components/LoadingProgress';\nimport NoResults from './../components/NoResults';\n\nconst ArrowUpwardButton = React.lazy(() => import('./../components/ArrowUpwardButton'));\nconst ArrowDownwardButton = React.lazy(() => import('./../components/ArrowDownwardButton'));\nconst RaceInfo = React.lazy(() => import('./../components/RaceInfo'));\nconst ClearButton = React.lazy(() => import('./../components/ClearButton'));\nconst ResultCategory = React.lazy(() => import('./../components/ResultCategory'));\nconst YearResultCategory = React.lazy(() => import('./../components/YearResultCategory'));\nconst RacePerformancePanel = React.lazy(() => import('./../components/RacePerformancePanel'));\nconst MapComponent = React.lazy(() => import('./../components/MapComponent'));\nconst SameDayRaces = React.lazy(() => import('./../components/SameDayRaces'));\n\nconst styles = theme => ({\n  searchField: {\n    paddingBottom: '5px',\n    paddingLeft: '5px',\n    paddingRight: '5px',\n    marginTop: '-5px',\n    zIndex: '2',\n  },\n  search: {\n    position: 'sticky',\n    backgroundColor: 'white',\n    zIndex: '2 !important',\n    borderBottom: '1px solid #CCCCCC',\n    top: '40px',\n    paddingTop: '40px',\n    borderTop: '1px solid #CCCCCC',\n    paddingBottom: '2px',\n  },\n  progress: {\n    margin: theme.spacing.unit * 2,\n  },\n  expansionPanel: {\n    marginTop: '5px',\n    marginBottom: '15px',\n  },\n});\n\nconst chosenRacesKey = 'chosenRaces';\nconst directionsDestinationKey = 'directionsDestinationKey';\nconst originKey = 'origin';\n\nclass Race extends Component {\n  constructor(props) {\n    super(props);\n\n\t\tthis.searchRaceRef = React.createRef();\n  }\n\n  getOrigin = () => {\n    let cachedOrigin = getSession(originKey);\n    let origin;\n\n    if (!cachedOrigin && navigator.geolocation) {\n      var self = this;\n\n      const geoSuccess = function(position) {\n        origin = { lat: position.coords.latitude, lng: position.coords.longitude };\n        setSession({ key: originKey, value: JSON.stringify(origin)});\n        self.props.dispatchOrigin(origin);\n      };\n      navigator.geolocation.getCurrentPosition(geoSuccess);\n    } else {\n      origin = JSON.parse(cachedOrigin);\n      this.props.dispatchOrigin(origin);\n    }\n  }\n\n  componentDidMount = () => {\n    window.addEventListener('scroll', this.onScroll, false);\n\n    const racesSet = getLocal(chosenRacesKey);\n\n    if (racesSet) {\n      this.props.dispatchLoadingProgress(true);\n      this.props.dispatchChosenRace(racesSet);\n      this.onChange(racesSet);\n      this.props.dispatchLoadingProgress(false);\n    }\n\n    this.getOrigin();\n    scroll.scrollTo(0);\n  };\n\n  componentWillUnmount = () => {\n    window.removeEventListener('scroll', this.onScroll, false);\n  };\n\n  shouldComponentUpdate = (nextProps, nextState) => {\n    if (!_.isEqual(this.props.classes, nextProps.classes)) {\n      return true;\n    }\n\n    if (!_.isEqual(this.props.dispatchChosenRace, nextProps.dispatchChosenRace)) {\n      return true;\n    }\n\n    if (!_.isEqual(this.props.dispatchLoadingProgress, nextProps.dispatchLoadingProgress)) {\n      return true;\n    }\n\n    if (!_.isEqual(this.props.dispatchRaceDetails, nextProps.dispatchRaceDetails)) {\n      return true;\n    }\n\n    if (!_.isEqual(this.props.dispatchSticky, nextProps.dispatchSticky)) {\n      return true;\n    }\n\n    if (!_.isEqual(this.props.menuReducer, nextProps.menuReducer)) {\n      return true;\n    }\n\n    if (!_.isEqual(this.props.raceReducer, nextProps.raceReducer)) {\n      return true;\n    }\n\n    if (!_.isEqual(this.props.scrollReducer, nextProps.scrollReducer)) {\n      return true;\n    }\n\n    if (!_.isEqual(this.props.searchReducer, nextProps.searchReducer)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  buildClearButton = () => {\n    return <Suspense fallback={<CircularProgress className={styles.prototypeprogress} />}>\n            <ClearButton onClick={this.clearClick} />\n          </Suspense>;\n  };\n\n  onScroll = () => {\n    if (window.scrollY >= 165 && !this.props.scrollReducer.sticky) {\n      this.props.dispatchSticky(true);\n    } else if (window.scrollY < 165 && this.props.scrollReducer.sticky) {\n      this.props.dispatchSticky(false);\n    }\n  };\n\n  scrollToTop = () => {\n    scroll.scrollTo(170);\n  };\n\n  loadingProgress = () => {\n    return <LoadingProgress />;\n  };\n\n  noResultsFound = () => {\n    return <NoResults />;\n  };\n\n  scrollToTopClick = e => {\n    e.preventDefault();\n    scroll.scrollToTop();\n  };\n\n  scrollToBottomClick = e => {\n    e.preventDefault();\n    scroll.scrollToBottom();\n  };\n\n  onChange = async raceNames => {\n    const { raceDetails } = this.props.raceReducer;\n    const { chosenRaces } = this.props.searchReducer;\n\n    if (raceNames.length > 1) {\n      // @TODO: tidy up this hack so the user can only choose one race\n      this.props.dispatchChosenRace(chosenRaces);\n      this.props.dispatchLoadingProgress(false);\n\n      return;\n    }\n\n    if (raceNames.length === 1) {\n      this.props.dispatchLoadingProgress(true);\n\n      const raceDetailsResult = await this.searchForRaces(raceNames);\n\n      if (!_.isEqual(chosenRaces, raceNames)) {\n        this.props.dispatchChosenRace(raceNames);\n      }\n\n      if (!_.isEqual(raceDetails, raceDetailsResult)) {\n        this.props.dispatchRaceDetails(raceDetailsResult);\n      }\n\n      setLocal({ key: chosenRacesKey, value: raceNames });\n\n      this.props.dispatchLoadingProgress(false);\n    } else {\n      this.clearClick();\n    }\n  };\n\n  fetchRaces = async (searchValue, callback) => {\n    console.log('searching - ', searchValue);\n    this.props.dispatchLoadingProgress(true);\n\n    if (!searchValue) {\n      callback(null, { options: [] });\n    }\n\n    if (searchValue.length > 2) {\n      callback(null, await partialRaceSearch(searchValue));\n    } else {\n      callback(null, { options: [] });\n    }\n    this.props.dispatchLoadingProgress(false);\n  };\n\n\tdebouncedFetchRaces = _.debounce(this.fetchRaces, 200);\n\n  getRaces = (searchValue, callback) => {\n    if (!searchValue || searchValue.length < 3) {\n      return callback(null, { options: [] });\n    }\n\n    this.debouncedFetchRaces(searchValue, callback);\n  };\n\n  searchForRaces = async (race) => {\n    if (race) {\n      const cacheKey = `getRaces${race[0].display}`.replace(' ', '');\n      const raceInStorage = getSession(cacheKey);\n      let raceDetails;\n\n      if (!raceInStorage) {\n        raceDetails = await getRaceInfoByNames(race[0].original);\n        setSession({ key: cacheKey, value: JSON.stringify(raceDetails) });\n\n        return raceDetails;\n      } else {\n        raceDetails = JSON.parse(raceInStorage);\n        removeSession(cacheKey);\n      }\n\n      return raceDetails;\n    }\n\n    return null;\n  };\n\n  clearClick = () => {\n    this.props.dispatchLoadingProgress(true);\n    this.props.dispatchSticky(false);\n    this.props.dispatchRaceDetails(null);\n    this.props.dispatchChosenRace(null);\n\n    removeLocal(chosenRacesKey);\n    removeSession(directionsDestinationKey);\n\n    this.props.dispatchLoadingProgress(false);\n\n    scroll.scrollToTop();\n  };\n\n  buildRaceInfo = raceInfo => {\n    let raceInfoComponent;\n\n    if (raceInfo) {\n      if (raceInfo._latitude > 0) {\n        delete raceInfo._latitude; //not needed at there is google maps directions\n      }\n\n      raceInfoComponent = <Suspense fallback={<CircularProgress className={styles.progress} />}>\n                  <RaceInfo raceInfo={raceInfo} />\n                </Suspense>;\n    }\n\n    return (\n      <div key={raceInfo.id}>\n        {raceInfoComponent}\n      </div>\n    );\n  };\n\n  buildResultCategories = (categoryRecords, classes) => {\n    let resultCategoryComponent;\n\n    if (categoryRecords) {\n      resultCategoryComponent = <Suspense fallback={<CircularProgress className={classes.progress} />}>\n                  <ResultCategory categoryRecords={categoryRecords} />\n                </Suspense>;\n    }\n\n    return (\n      <React.Fragment>\n        <ExpansionPanel key={categoryRecords.length} className={classes.expansionPanel}>\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n              <Typography className={classes.heading}>\n                  <b>Overall</b>\n              </Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n              {resultCategoryComponent}\n            </ExpansionPanelDetails>\n        </ExpansionPanel>\n      </React.Fragment>\n    );\n  };\n\n  buildYearResultCategories = races => {\n    let yearResultsComponent;\n \n    if (races) {\n      yearResultsComponent = <Suspense fallback={<CircularProgress className={styles.progress} />}>\n        <YearResultCategory races={races} />\n        <br />\n        <br />\n        <br />\n        <br />\n      </Suspense>;\n    }\n\n    return yearResultsComponent;\n  };\n\n  buildYearPerformanceGraph = (races, progressClass) => {\n    const performanceData = races.map((race) => {\n      if (race.performance > 0) {\n        return [`${race.year}`, `${race.performance}%`];\n      }\n    }).filter((race) => race !== undefined);\n\n    return <Suspense fallback={<CircularProgress className={progressClass} />}>\n            <RacePerformancePanel raceData={performanceData} />\n           </Suspense>;\n  }\n\n  buildDownwardArrow = (progress) => {\n    return (\n      <Suspense fallback={<CircularProgress className={progress} />}>\n              <ArrowDownwardButton onClick={this.scrollToBottomClick} />\n            </Suspense>\n    )\n  };\n\n  buildMapComponent = (origin, destination, progress) => { \n    return <Suspense fallback={<CircularProgress className={progress} />}>\n        <MapComponent destination={destination}\n                      origin={origin}\n         />\n      </Suspense>;\n  };\n\n  buildSameDayRaces = (origin, races, sameDayRaces, progress) => { \n    const yearOfFirstRace = parseInt(races[0].date.substring(6, 10));\n    const yearNow = new Date().getFullYear();\n\n    if (yearOfFirstRace < yearNow || !sameDayRaces || sameDayRaces.length === 0) {\n      return null;\n    }\n\n    return <Suspense fallback={<CircularProgress className={progress} />}>\n        <SameDayRaces origin={origin} races={sameDayRaces} />\n      </Suspense>;\n  };\n\n\n  render() {\n    const { progress, searchField, search } = this.props.classes;\n    const { loadingRaceProgress, chosenRaces } = this.props.searchReducer;\n    const { raceDetails, origin, } = this.props.raceReducer;\n    const { sticky } = this.props.scrollReducer;\n    const searchClass = sticky ? search : '';\n    let clearButton;\n    let loadingResults;\n    let raceInfoComponent;\n    let resultCategoryComponent;\n    let scrollToTopButton;\n    let downwardArrowButtonShow;\n    let yearResultsComponent;\n    let racePerformancePanelComponent;\n    let mapDirectionComponent;\n    let sameDayRacesComponent;\n\n    // loading race details\n    if (loadingRaceProgress) {\n      loadingResults = this.loadingProgress();\n    }\n\n    if (chosenRaces && chosenRaces.length > 0) {\n      clearButton = this.buildClearButton();\n    }\n\n    if (raceDetails) {\n      raceInfoComponent = this.buildRaceInfo(raceDetails.raceInfo);\n      resultCategoryComponent = this.buildResultCategories(raceDetails.categoryRecords, this.props.classes);\n      yearResultsComponent = this.buildYearResultCategories(raceDetails.races);\n      racePerformancePanelComponent = this.buildYearPerformanceGraph(raceDetails.races, progress);\n      downwardArrowButtonShow = this.buildDownwardArrow(progress);\n\n      if (origin) {\n        sameDayRacesComponent = this.buildSameDayRaces(origin, raceDetails.races, raceDetails.racesSameDay, progress);\n      }\n\n      if (origin && raceDetails.properties && raceDetails.properties.latitude && raceDetails.properties.latitude !== 0) { \n        const destination = { lat: raceDetails.properties.latitude, lng: raceDetails.properties.longitude };\n        mapDirectionComponent = this.buildMapComponent(origin, destination, progress);\n      }\n    }\n\n    if (sticky) {\n      scrollToTopButton = (\n        <Suspense fallback={<CircularProgress className={progress} />}>\n              <ArrowUpwardButton onClick={this.scrollToTopClick} />\n            </Suspense>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <div className={searchClass}>\n          <Async\n            cacheOptions\n            defaultOptions\n            className={searchField}\n            valueKey=\"original\"\n            labelKey=\"display\"\n            matchProp=\"any\"\n            name=\"race-search-field\"\n            onChange={this.onChange}\n            loadOptions={this.getRaces}\n            placeholder=\"Search Race\"\n            noResultsText=\"No race found\"\n            value={chosenRaces}\n            multi={true}\n            ignoreAccents={false}\n          />\n          {clearButton}\n        </div>\n        {loadingResults}\n        {raceInfoComponent}\n        {mapDirectionComponent}\n        {sameDayRacesComponent}\n        {racePerformancePanelComponent}\n        {resultCategoryComponent}\n        {yearResultsComponent}\n        {downwardArrowButtonShow}\n        {scrollToTopButton}\n      </React.Fragment>\n  \t);\n \t}\n}\n\nconst mapStateToProps = state => ({\n  ...state\n });\n\n const mapDispatchToProps = dispatch => ({\n  dispatchLoadingProgress: (loadingProgress) => dispatch(loadingProgressRaceAction(loadingProgress)),\n  dispatchChosenRace: (chosenRace) => dispatch(chosenRacesAction(chosenRace)),\n  dispatchRaceDetails: (raceDetails) => dispatch(raceDetailsAction(raceDetails)),\n  dispatchSticky: (sticky) => dispatch(stickyAction(sticky)),\n  dispatchOrigin: (origin) => dispatch(userOriginAction(origin)),\n });\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(React.memo(Race)));","import {\n    RACE_DETAILS_ACTION,\n    USER_ORIGIN_ACTION,\n} from './../actionTypes/race';\n\nexport const raceDetailsAction = (details = null) => dispatch => {\n    dispatch({\n        type: RACE_DETAILS_ACTION,\n        payload: details,\n    });\n};\n\nexport const userOriginAction = (origin = null) => dispatch => {\n    dispatch({\n        type: USER_ORIGIN_ACTION,\n        payload: origin,\n    });\n};","import React, { PureComponent, Suspense } from 'react';\nimport { connect } from 'react-redux';\n\nimport MenuBar from './../components/MenuBar';\nimport Runner from './Runner';\nimport Race from './Race';\n\nimport { menuAction, menuToggleAction } from './../actions/menu';\nimport { getLocal, setLocal,  } from './../service/storageService';\n\nconst cacheKey = 'Main-menuoption';\n\nclass Main extends PureComponent {\n  constructor(props) {\n    super(props);\n\t}\n\t\n\tcomponentWillMount() {\n\t\tconst cachedValue = getLocal(cacheKey);\n\n\t\tif (cachedValue) {\n\t\t\tif (cachedValue === 'race') {\n\t\t\t\tthis.props.dispatchMenuAction({race: true, runner: false});\n\t\t\t} else {\n\t\t\t\tthis.props.dispatchMenuAction({race: false, runner: true});\n\t\t\t}\n\n\t\t\tthis.props.dispatchMenuToggleAction(false);\n\t\t}\n\t}\n\n\traceOnClick = async event => {\n    event.preventDefault();\n\t\tsetLocal({key: cacheKey, value: 'race'});\n\n\t\tthis.props.dispatchMenuAction({race: true, runner: false});\n\t\tthis.props.dispatchMenuToggleAction(false);\n  };\n\n\trunnerOnClick = async event => {\n    event.preventDefault();\n\t\tsetLocal({key: cacheKey, value: 'runner'});\n\n\t\tthis.props.dispatchMenuAction({race: false, runner: true});\n\t\tthis.props.dispatchMenuToggleAction(false);\n  };\n\n  render() {\n\t\tconst { race, runner } = this.props.menuReducer;\n\t\tlet runnerOrRaceSearch;\n\t\tlet hasUserSelectedMenuOption = false;\n\n\t\tif (!race) {\n\t\t\trunnerOrRaceSearch = <Runner />;\n\t\t} else {\n\t\t\trunnerOrRaceSearch = <Race />;\n\t\t}\n\n\t\tif (race || runner) {\n\t\t\thasUserSelectedMenuOption = true;\n\t\t}\n\n    return (\n      <React.Fragment>\n\t\t\t\t<MenuBar raceOnClick={this.raceOnClick} runnerOnClick={this.runnerOnClick} \n\t\t\t\t\t\t\t\t closeMenu={hasUserSelectedMenuOption} />\n\t\t\t\t{runnerOrRaceSearch}\n      </React.Fragment>\n  \t);\n \t}\n}\n\nconst mapStateToProps = state => ({\n  ...state\n });\n\n const mapDispatchToProps = dispatch => ({\n\t dispatchMenuAction: (menu) => dispatch(menuAction(menu)),\n\t dispatchMenuToggleAction: (menuOpen) => dispatch(menuToggleAction(menuOpen)),\n });\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);"],"sourceRoot":""}