{"version":3,"sources":["components/LoadingProgress.js","components/NoResults.js","service/storageService.js","service/searchService.js","utils/stringUtils.js","containers/Main.js"],"names":["withStyles","theme","react_default","a","createElement","LinearProgress_default","color","variant","noRaces","marginRight","marginLeft","marginTop","marginBottom","props","classes","Paper_default","className","Typography_default","setSession","_ref","key","value","sessionStorage","setItem","JSON","stringify","getSession","getItem","parse","removeSession","removeItem","setLocal","_ref2","localStorage","entities","AllHtmlEntities","search","_x","_x2","_x3","_search","apply","this","arguments","_callee","runnerNames","startIndex","endIndex","runnersNamedJoined","races","regenerator_default","wrap","_context","prev","next","join","axios","get","concat","process","then","response","data","catch","error","console","log","abrupt","stop","searchByRace","_x4","_x5","_searchByRace","_callee2","raceNames","encodedRaceNames","_context2","replace","encode","partialSearch","partialName","cacheKey","runnersInSessionStorage","options","url","toLowerCase","fetch","json","runnersList","items","map","runner","found","runnerAdded","display","push","upperCaseWords","sentence","sentenceParts","split","word","charAt","toUpperCase","slice","sentenceToReturn","part","ArrowUpwardButton","React","lazy","Promise","all","__webpack_require__","e","bind","ArrowDownwardButton","ClearButton","RaceDetails","RunnerDetails","RaceInfo","RaceDropDown","OverallStats","LoadMoreButton","styles","searchField","paddingBottom","paddingLeft","paddingRight","zIndex","position","top","backgroundColor","progress","margin","spacing","unit","chosenRunnersKey","Main","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","window","addEventListener","onScroll","onChange","state","chosenRunners","componentWillUnmount","removeEventListener","buildClearButton","react","fallback","CircularProgress_default","prototypeprogress","onClick","clearClick","scrollY","sticky","setState","scrollToTop","scroll","scrollTo","performSearch","asyncToGenerator","mark","runnerName","_this$state","formattedName","runnerInStorage","result","loadingResults","chosenRace","sent","searchForRunners","runners","newEndIndex","names","runnersInStorage","runnersDetails","length","eachRunner","searchForRunnersByRace","_ref3","_callee3","race","_context3","handleClick","_ref4","_callee4","event","searchValue","_context4","preventDefault","searchRunnerRef","trim","_x6","clear","scrollToTopClick","scrollToBottomClick","scrollToBottom","loadingProgress","components_LoadingProgress","noResultsFound","components_NoResults","buildRaceResult","raceInfo","id","loadMoreOnClick","_ref5","_callee5","_context5","loadMoreLoading","_x7","calculateNextEndIndex","_this$state2","overallStats","noOfRaces","_ref6","_callee6","_context6","_x8","fetchRunnerByRace","_ref7","_callee7","_context7","_x9","_x10","fetchRunners","_ref8","_callee8","callback","_context8","t0","t1","_x11","_x12","debouncedFetchRunners","_","debounce","getRunners","handleChooseRaceChange","_ref9","_callee9","_context9","target","_x13","populateOverallStats","buildChosenRaceList","filteredRaces","listOfChosenRaces","eachChosenRace","i","name","createRef","namesSet","getLocal","clearButton","raceResults","scrollToTopButton","racesSelect","loadMoreButton","loadMoreLoadingProgress","downwardArrowButtonShow","_this2","_this$state3","_this$props$classes","searchClass","racesForRunner","scrollMore","Fragment","react_select_es","cacheOptions","defaultOptions","valueKey","labelKey","matchProp","loadOptions","placeholder","noResultsText","multi","ignoreAccents","PureComponent"],"mappings":"sRAmBeA,2BAfA,SAAAC,GAAK,MAAK,IAeVD,CAbf,WACE,OACEE,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACC,EAAAF,EAAD,MACAD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAgBG,MAAM,YAAYC,QAAQ,UAC1CL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACC,EAAAF,EAAD,6CCYSH,2BArBA,SAAAC,GAAK,MAAK,CACvBO,QAAS,CACPC,YAAa,OACbC,WAAY,OACZC,UAAW,MACXC,aAAc,SAgBHZ,CAZf,SAAmBa,GAAO,IAChBC,EAAYD,EAAZC,QAER,OACEZ,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,CAAOa,UAAWF,EAAQN,SACxBN,EAAAC,EAAAC,cAACa,EAAAd,EAAD,CAAYI,QAAQ,cAApB,gECnBC,SAASW,EAATC,GAAoC,IAAdC,EAAcD,EAAdC,IAAKC,EAASF,EAATE,MAClB,SAAVA,GACFC,eAAeC,QAAQH,EAAKI,KAAKC,UAAUJ,IAIxC,SAASK,EAAWN,GACzB,IAAMC,EAAQC,eAAeK,QAAQP,GAErC,OAAIC,EACKG,KAAKI,MAAMP,GAGbA,EAGF,SAASQ,EAAcT,GACxBA,GACFE,eAAeQ,WAAWV,GAQvB,SAASW,EAATC,GAAkC,IAAdZ,EAAcY,EAAdZ,IAAKC,EAASW,EAATX,MAChB,SAAVA,GACFY,aAAaV,QAAQH,EAAKI,KAAKC,UAAUJ,ICvB7C,IAAMa,EAAW,YAAIC,iBAEd,SAAeC,EAAtBC,EAAAC,EAAAC,GAAA,OAAAC,EAAAC,MAAAC,KAAAC,sDAAO,SAAAC,EAAsBC,EAAaC,EAAYC,GAA/C,IAAAC,EAAAC,EAAA,OAAAC,EAAA/C,EAAAgD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACCN,EAAqBH,EAAYU,KAAK,MACxCN,EAAQ,KAFPG,EAAAE,KAAA,EAICE,IACHC,IADG,GAAAC,OAGAC,+CAHA,YAAAD,OAISV,EAJT,KAAAU,OAI+BZ,EAJ/B,KAAAY,OAI6CX,IAEhDa,KAAK,SAASC,GAEb,OADAZ,EAAQY,EAASC,OAGlBC,MAAM,SAASC,GACdC,QAAQC,IAAIF,KAfX,cAAAZ,EAAAe,OAAA,SAkBElB,GAlBF,wBAAAG,EAAAgB,SAAAxB,EAAAF,gCAqBA,SAAe2B,EAAtBC,EAAAC,GAAA,OAAAC,EAAA/B,MAAAC,KAAAC,sDAAO,SAAA8B,EAA4B5B,EAAa6B,GAAzC,IAAA1B,EAAA2B,EAAA1B,EAAA,OAAAC,EAAA/C,EAAAgD,KAAA,SAAAyB,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,cACCN,EAAqBH,EAAYU,KAAK,MACxCoB,EAAmBD,EAAUG,QAAQ,IAAK,MAC9CF,EAAmBzC,EAAS4C,OAAOH,GAC/B1B,EAAQ,KAJP2B,EAAAtB,KAAA,EAMCE,IACHC,IADG,GAAAC,OAGAC,+CAHA,kBAAAD,OAIeV,EAJf,KAAAU,OAIqCiB,IAExCf,KAAK,SAASC,GAEb,OADAZ,EAAQY,EAASC,OAGlBC,MAAM,SAASC,GACdC,QAAQC,IAAIF,KAjBX,cAAAY,EAAAT,OAAA,SAoBElB,GApBF,wBAAA2B,EAAAR,SAAAK,EAAA/B,gCAuBA,SAASqC,EAAcC,GAC5B,IAAMC,EAAQ,cAAAvB,OAAiBsB,GACzBE,EAA0BxD,EAAWuD,GAE3C,GAAIC,EACF,MAAO,CACLC,QAASD,GAIb,IAAME,EAAG,GAAA1B,OACPC,+CADO,yBAAAD,OAEesB,EAAYK,eAEpC,OAAOC,MAAMF,GACVxB,KAAK,SAAAC,GACJ,OAAOA,EAAS0B,SAEjB3B,KAAK,SAAA2B,GACJ,IAAMC,EAAc,GA2BpB,OAzBAD,EAAKE,MAAMC,IAAI,SAAAC,GACb,IAAIC,GAAQ,EAgBZ,OAdAJ,EAAYE,IAAI,SAAAG,GACd,OAAIF,EAAOG,UAAYD,EAAYC,UACjCF,GAAQ,GAED,KAMNA,GACHJ,EAAYO,KAAKJ,GAGZC,IAGT1E,EAAW,CACTE,IAAK6D,EACL5D,MAAOmE,IAGF,CACLL,QAASK,KCjGV,SAASQ,EAAeC,GAC7B,IAAMC,EAAgBD,EACnBE,MAAM,KACNT,IAAI,SAAAU,GAAI,SAAA1C,OAAO0C,EAAKC,OAAO,GAAGC,eAAtB5C,OAAsC0C,EAAKG,MAAM,GAAjD,OACPC,EAAmB,GAQvB,OANAN,EAAcR,IAAI,SAAAe,GAGhB,OAFAD,EAAgB,GAAA9C,OAAM8C,GAAN9C,OAAyB+C,KAKpCD,ECgBT,IAAME,EAAoBC,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAC,EAAAC,EAAA,GAAAD,EAAAC,EAAA,GAAAD,EAAAC,EAAA,KAAApD,KAAAmD,EAAAE,KAAA,cACrCC,EAAsBP,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAC,EAAAC,EAAA,GAAAD,EAAAC,EAAA,GAAAD,EAAAC,EAAA,KAAApD,KAAAmD,EAAAE,KAAA,cACvCE,EAAcR,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAC,EAAAC,EAAA,GAAAD,EAAAC,EAAA,GAAAD,EAAAC,EAAA,KAAApD,KAAAmD,EAAAE,KAAA,cAC/BG,EAAcT,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAC,EAAAC,EAAA,GAAAD,EAAAC,EAAA,KAAApD,KAAAmD,EAAAE,KAAA,cAC/BI,EAAgBV,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAC,EAAAC,EAAA,GAAAD,EAAAC,EAAA,IAAAD,EAAAC,EAAA,MAAApD,KAAAmD,EAAAE,KAAA,cACjCK,EAAWX,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAC,EAAAC,EAAA,GAAAD,EAAAC,EAAA,MAAApD,KAAAmD,EAAAE,KAAA,cAC5BM,EAAeZ,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAC,EAAAC,EAAA,GAAAD,EAAAC,EAAA,IAAAD,EAAAC,EAAA,MAAApD,KAAAmD,EAAAE,KAAA,cAChCO,EAAeb,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAC,EAAAC,EAAA,GAAAD,EAAAC,EAAA,GAAAD,EAAAC,EAAA,IAAAD,EAAAC,EAAA,MAAApD,KAAAmD,EAAAE,KAAA,cAChCQ,EAAiBd,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAC,EAAAC,EAAA,GAAAD,EAAAC,EAAA,MAAApD,KAAAmD,EAAAE,KAAA,cAElCS,EAAS,SAAAzH,GAAK,MAAK,CACvB0H,YAAa,CACXC,cAAe,MACfC,YAAa,MACbC,aAAc,MACdnH,UAAW,QACXoH,OAAQ,KAEV3F,OAAQ,CACN4F,SAAU,SACVC,IAAK,MACLC,gBAAiB,QACjBH,OAAQ,gBAEVI,SAAU,CACRC,OAA6B,EAArBnI,EAAMoI,QAAQC,QAIpBC,EAAmB,gBAEnBC,cACJ,SAAAA,EAAY3H,GAAO,IAAA4H,EAAAC,OAAAC,EAAA,EAAAD,CAAAhG,KAAA8F,IACjBC,EAAAC,OAAAE,EAAA,EAAAF,CAAAhG,KAAAgG,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAApG,KAAM7B,KA0BRkI,kBAAoB,WAClBC,OAAOC,iBAAiB,SAAUR,EAAKS,UAAU,GACjDT,EAAKU,SAASV,EAAKW,MAAMC,gBA7BRZ,EAgCnBa,qBAAuB,WACrBN,OAAOO,oBAAoB,SAAUd,EAAKS,UAAU,IAjCnCT,EAoCnBe,iBAAmB,WACjB,OAAOtJ,EAAAC,EAAAC,cAACqJ,EAAA,SAAD,CAAUC,SAAUxJ,EAAAC,EAAAC,cAACuJ,EAAAxJ,EAAD,CAAkBa,UAAW0G,EAAOkC,qBACvD1J,EAAAC,EAAAC,cAAC+G,EAAD,CAAa0C,QAASpB,EAAKqB,eAtClBrB,EA0CnBS,SAAW,WACLF,OAAOe,SAAW,MAAQtB,EAAKW,MAAMY,OACvCvB,EAAKwB,SAAS,CAAED,QAAQ,IACfhB,OAAOe,QAAU,KAAOtB,EAAKW,MAAMY,QAC5CvB,EAAKwB,SAAS,CAAED,QAAQ,KA9CTvB,EAkDnByB,YAAc,WACZC,gBAAOC,SAAS,MAnDC3B,EAsDnB4B,cAtDmB,eAAAlJ,EAAAuH,OAAA4B,EAAA,EAAA5B,CAAAxF,EAAA/C,EAAAoK,KAsDH,SAAA3H,EAAM4H,GAAN,IAAAC,EAAA3H,EAAAC,EAAAkC,EAAAyF,EAAAC,EAAAC,EAAA,OAAA1H,EAAA/C,EAAAgD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WACVkH,EADU,CAAApH,EAAAE,KAAA,YAEZmF,EAAKwB,SAAS,CAAEtE,OAAQ,KAAMkF,gBAAgB,EAAMC,WAAY,KAFpDL,EAGqBhC,EAAKW,MAA9BtG,EAHI2H,EAGJ3H,WAAYC,EAHR0H,EAGQ1H,SACdkC,EAAW,YAAAvB,OAAY8G,GAAa3F,QAAQ,IAAK,IACjD6F,EAAgBF,EAChBG,EAAkBjJ,EAAWuD,GANvB,CAAA7B,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EAUKlB,EAAOoI,EAAY1H,EAAYC,GAVpC,OAUV6H,EAVUxH,EAAA2H,KAWV7J,EAAW,CAAEE,IAAK6D,EAAU5D,MAAOG,KAAKC,UAAUmJ,KAXxCxH,EAAAE,KAAA,iBAaVsH,EAASpJ,KAAKI,MAAM+I,GACpB9I,EAAcoD,GAdJ,QAiBZwD,EAAKwB,SAAS,CACZtE,OAAQiF,EACRJ,WAAYE,EACZG,gBAAgB,IAElBpC,EAAKyB,cAtBO,yBAAA9G,EAAAgB,SAAAxB,EAAAF,SAtDG,gBAAAL,GAAA,OAAAlB,EAAAsB,MAAAC,KAAAC,YAAA,GAAA8F,EAgFnBuC,iBAhFmB,eAAAhJ,EAAA0G,OAAA4B,EAAA,EAAA5B,CAAAxF,EAAA/C,EAAAoK,KAgFA,SAAA9F,EAAOwG,EAASC,GAAhB,IAAApI,EAAAqI,EAAAlG,EAAAmG,EAAAC,EAAA,OAAAnI,EAAA/C,EAAAgD,KAAA,SAAAyB,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,YACb2H,GAAWA,EAAQK,OAAS,GADf,CAAA1G,EAAAtB,KAAA,YAEPR,EAAe2F,EAAKW,MAApBtG,WACJqI,EAAQ,GAEZF,EAAQvF,IAAI,SAAA6F,GACVJ,EAAMpF,KAAKwF,EAAWzF,WAGlBb,EAAW,aAAAvB,OAAayH,EAAM5H,KAClC,KADeG,OAEbZ,GAFaY,OAEAwH,GAAcrG,QAAQ,IAAK,IACtCuG,EAAmB1J,EAAWuD,GAZrB,CAAAL,EAAAtB,KAAA,gBAAAsB,EAAAtB,KAAA,EAgBUlB,EAAO+I,EAAOrI,EAAYoI,GAhBpC,cAgBbG,EAhBazG,EAAAmG,KAiBb7J,EAAW,CAAEE,IAAK6D,EAAU5D,MAAOG,KAAKC,UAAU4J,KAjBrCzG,EAAAT,OAAA,SAmBNkH,GAnBM,QAqBbA,EAAiB7J,KAAKI,MAAMwJ,GAC5BvJ,EAAcoD,GAtBD,eAAAL,EAAAT,OAAA,SAyBRkH,GAzBQ,eAAAzG,EAAAT,OAAA,SA4BV,MA5BU,yBAAAS,EAAAR,SAAAK,EAAA/B,SAhFA,gBAAAJ,EAAAC,GAAA,OAAAP,EAAAS,MAAAC,KAAAC,YAAA,GAAA8F,EA+GnB+C,uBA/GmB,eAAAC,EAAA/C,OAAA4B,EAAA,EAAA5B,CAAAxF,EAAA/C,EAAAoK,KA+GM,SAAAmB,EAAOT,EAASU,GAAhB,IAAAR,EAAAlG,EAAAmG,EAAAC,EAAA,OAAAnI,EAAA/C,EAAAgD,KAAA,SAAAyI,GAAA,cAAAA,EAAAvI,KAAAuI,EAAAtI,MAAA,YACnB2H,GAAWA,EAAQK,OAAS,GADT,CAAAM,EAAAtI,KAAA,YAEjB6H,EAAQ,GAEZF,EAAQvF,IAAI,SAAA6F,GACVJ,EAAMpF,KAAKwF,EAAWzF,WAGlBb,EAAW,mBAAAvB,OAAmByH,EAAM5H,KAAK,KAA9BG,OAAoCiI,GAAO9G,QAC1D,IACA,IAEIuG,EAAmB1J,EAAWuD,GAZf,CAAA2G,EAAAtI,KAAA,gBAAAsI,EAAAtI,KAAA,EAgBIe,EAAa8G,EAAOQ,GAhBxB,cAgBnBN,EAhBmBO,EAAAb,KAiBnB7J,EAAW,CAAEE,IAAK6D,EAAU5D,MAAOG,KAAKC,UAAU4J,KAjB/BO,EAAAzH,OAAA,SAmBZkH,GAnBY,QAqBnBA,EAAiB7J,KAAKI,MAAMwJ,GAC5BvJ,EAAcoD,GAtBK,eAAA2G,EAAAzH,OAAA,SAyBdkH,GAzBc,eAAAO,EAAAzH,OAAA,SA4BhB,MA5BgB,yBAAAyH,EAAAxH,SAAAsH,EAAAhJ,SA/GN,gBAAA4B,EAAAC,GAAA,OAAAkH,EAAAhJ,MAAAC,KAAAC,YAAA,GAAA8F,EA8InBoD,YA9ImB,eAAAC,EAAApD,OAAA4B,EAAA,EAAA5B,CAAAxF,EAAA/C,EAAAoK,KA8IL,SAAAwB,EAAMC,GAAN,IAAAC,EAAA,OAAA/I,EAAA/C,EAAAgD,KAAA,SAAA+I,GAAA,cAAAA,EAAA7I,KAAA6I,EAAA5I,MAAA,UACZ0I,EAAMG,iBAGc,MAFdF,EAAcxD,EAAK2D,gBAAgB/K,MAAMgL,QAFnC,CAAAH,EAAA5I,KAAA,WAKN0C,EAAeiG,KAAiBxD,EAAKW,MAAMoB,WALrC,CAAA0B,EAAA5I,KAAA,eAAA4I,EAAA5I,KAAA,EAMFmF,EAAK4B,cAAc4B,GANjB,OAAAC,EAAA5I,KAAA,eASVmF,EAAKqB,aATK,wBAAAoC,EAAA9H,SAAA2H,EAAArJ,SA9IK,gBAAA4J,GAAA,OAAAR,EAAArJ,MAAAC,KAAAC,YAAA,GAAA8F,EA2JnBqB,WAAa,WH9KR,IAAqB1I,EG+KxBqH,EAAKwB,SAAS,CACZD,QAAQ,EACRrE,OAAQ,KACR6E,WAAY,KACZK,gBAAgB,EAChBC,WAAY,GACZzB,cAAe,GACftG,SAAU,KHtLY3B,EGyLZmH,IHvLZtG,aAAaH,WAAWV,GArB1BE,eAAeiL,QG+MbpC,gBAAOD,eAzKUzB,EA4KnB+D,iBAAmB,SAAAxF,GACjBA,EAAEmF,iBACFhC,gBAAOD,eA9KUzB,EAiLnBgE,oBAAsB,SAAAzF,GACpBA,EAAEmF,iBACFhC,gBAAOuC,kBAnLUjE,EAsLnBkE,gBAAkB,WAChB,OAAOzM,EAAAC,EAAAC,cAACwM,EAAD,OAvLUnE,EA0LnBoE,eAAiB,WACf,OAAO3M,EAAAC,EAAAC,cAAC0M,EAAD,OA3LUrE,EA8LnBsE,gBAAkB,SAAApB,GAChB,IAAIqB,EAQJ,OANIrB,EAAKqB,WACPA,EAAW9M,EAAAC,EAAAC,cAACqJ,EAAA,SAAD,CAAUC,SAAUxJ,EAAAC,EAAAC,cAACuJ,EAAAxJ,EAAD,CAAkBa,UAAW0G,EAAOS,YACvDjI,EAAAC,EAAAC,cAACkH,EAAD,CAAU0F,SAAUrB,EAAKqB,aAKrC9M,EAAAC,EAAAC,cAAA,OAAKgB,IAAKuK,EAAKsB,IACb/M,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACqJ,EAAA,SAAD,CAAUC,SAAUxJ,EAAAC,EAAAC,cAACuJ,EAAAxJ,EAAD,CAAkBa,UAAW0G,EAAOS,YACtDjI,EAAAC,EAAAC,cAACgH,EAAD,CAAauE,KAAMA,KAEpBqB,EACD9M,EAAAC,EAAAC,cAACqJ,EAAA,SAAD,CAAUC,SAAUxJ,EAAAC,EAAAC,cAACuJ,EAAAxJ,EAAD,CAAkBa,UAAW0G,EAAOS,YACtDjI,EAAAC,EAAAC,cAACiH,EAAD,CAAe1B,OAAQgG,EAAKhG,YA/MjB8C,EAqNnByE,gBArNmB,eAAAC,EAAAzE,OAAA4B,EAAA,EAAA5B,CAAAxF,EAAA/C,EAAAoK,KAqND,SAAA6C,EAAMpB,GAAN,IAAA3C,EAAA,OAAAnG,EAAA/C,EAAAgD,KAAA,SAAAkK,GAAA,cAAAA,EAAAhK,KAAAgK,EAAA/J,MAAA,cAChB0I,EAAMG,iBACE9C,EAAkBZ,EAAKW,MAAvBC,cAERZ,EAAKwB,SAAS,CACZqD,iBAAiB,IALHD,EAAA/J,KAAA,EAQVmF,EAAKU,SAASE,GARJ,OAUhBZ,EAAKwB,SAAS,CACZqD,iBAAiB,IAXH,wBAAAD,EAAAjJ,SAAAgJ,EAAA1K,SArNC,gBAAA6K,GAAA,OAAAJ,EAAA1K,MAAAC,KAAAC,YAAA,GAAA8F,EAoOnB+E,sBAAwB,SAAA3K,GAAe,IAAA4K,EACOhF,EAAKW,MAAzCrG,EAD6B0K,EAC7B1K,SAAUsG,EADmBoE,EACnBpE,cAAe1D,EADI8H,EACJ9H,OAEjC,OAAiB,IAAb5C,EACK,GAGLF,EAAYyI,SAAWjC,EAAciC,OACnCvI,EAAW,GAAK4C,EAAO+H,aAAaC,UAC/BhI,EAAO+H,aAAaC,UAGtB5K,EAAW,GAEX,IAlPQ0F,EAsPnBU,SAtPmB,eAAAyE,EAAAlF,OAAA4B,EAAA,EAAA5B,CAAAxF,EAAA/C,EAAAoK,KAsPR,SAAAsD,EAAMhL,GAAN,IAAAqI,EAAAG,EAAA,OAAAnI,EAAA/C,EAAAgD,KAAA,SAAA2K,GAAA,cAAAA,EAAAzK,KAAAyK,EAAAxK,MAAA,YACLT,EAAYyI,OAAS,GADhB,CAAAwC,EAAAxK,KAAA,gBAEPmF,EAAKwB,SAAS,CACZY,gBAAgB,IAEZK,EAAczC,EAAK+E,sBAAsB3K,GALxCiL,EAAAxK,KAAA,EAMsBmF,EAAKuC,iBAChCnI,EACAqI,GARK,OAMDG,EANCyC,EAAA/C,KAWPtC,EAAKwB,SAAS,CACZtE,OAAQ0F,EACRb,WAAY3H,EAAY,GAAGiD,QAC3B+E,gBAAgB,EAChBxB,cAAexG,EACfE,SAAUmI,EACVJ,WAAY,KAGd/I,EAAS,CAAEX,IAAKmH,EAAkBlH,MAAOwB,IApBlCiL,EAAAxK,KAAA,iBAsBPmF,EAAKqB,aAtBE,yBAAAgE,EAAA1J,SAAAyJ,EAAAnL,SAtPQ,gBAAAqL,GAAA,OAAAH,EAAAnL,MAAAC,KAAAC,YAAA,GAAA8F,EAgRnBuF,kBAhRmB,eAAAC,EAAAvF,OAAA4B,EAAA,EAAA5B,CAAAxF,EAAA/C,EAAAoK,KAgRC,SAAA2D,EAAOrL,EAAaiI,GAApB,IAAAO,EAAA,OAAAnI,EAAA/C,EAAAgD,KAAA,SAAAgL,GAAA,cAAAA,EAAA9K,KAAA8K,EAAA7K,MAAA,YACdT,EAAYyI,OAAS,GADP,CAAA6C,EAAA7K,KAAA,eAEhBmF,EAAKwB,SAAS,CACZY,gBAAgB,IAHFsD,EAAA7K,KAAA,EAMamF,EAAK+C,uBAChC3I,EACAiI,GARc,OAMVO,EANU8C,EAAApD,KAWhBtC,EAAKwB,SAAS,CACZtE,OAAQ0F,EACRb,WAAY3H,EAAY,GAAGiD,QAC3B+E,gBAAgB,EAChBxB,cAAexG,EACfiI,WAAYA,IAGd/I,EAAS,CAAEX,IAAKmH,EAAkBlH,MAAOwB,IAnBzBsL,EAAA7K,KAAA,gBAqBhBmF,EAAKqB,aArBW,yBAAAqE,EAAA/J,SAAA8J,EAAAxL,SAhRD,gBAAA0L,EAAAC,GAAA,OAAAJ,EAAAxL,MAAAC,KAAAC,YAAA,GAAA8F,EAySnB6F,aAzSmB,eAAAC,EAAA7F,OAAA4B,EAAA,EAAA5B,CAAAxF,EAAA/C,EAAAoK,KAySJ,SAAAiE,EAAOvC,EAAawC,GAApB,OAAAvL,EAAA/C,EAAAgD,KAAA,SAAAuL,GAAA,cAAAA,EAAArL,KAAAqL,EAAApL,MAAA,UACbW,QAAQC,IAAI,eAAgB+H,GAEvBA,GACHwC,EAAS,KAAM,CAAEtJ,QAAS,OAGxB8G,EAAYX,OAAS,GAPZ,CAAAoD,EAAApL,KAAA,gBAAAoL,EAAAC,GAQXF,EARWC,EAAApL,KAAA,EAQUyB,EAAckH,GARxB,OAAAyC,EAAAE,GAAAF,EAAA3D,MAAA,EAAA2D,EAAAC,IAQF,KARED,EAAAE,IAAAF,EAAApL,KAAA,iBAUXmL,EAAS,KAAM,CAAEtJ,QAAS,KAVf,yBAAAuJ,EAAAtK,SAAAoK,EAAA9L,SAzSI,gBAAAmM,EAAAC,GAAA,OAAAP,EAAA9L,MAAAC,KAAAC,YAAA,GAAA8F,EAuTnBsG,sBAAwBC,IAAEC,SAASxG,EAAK6F,aAAc,KAvTnC7F,EAyTnByG,WAAa,SAACjD,EAAawC,GACzB,IAAKxC,GAAeA,EAAYX,OAAS,EACvC,OAAOmD,EAAS,KAAM,CAAEtJ,QAAS,KAGnCsD,EAAKsG,sBAAsB9C,EAAawC,IA9TvBhG,EAiUnB0G,uBAjUmB,eAAAC,EAAA1G,OAAA4B,EAAA,EAAA5B,CAAAxF,EAAA/C,EAAAoK,KAiUM,SAAA8E,EAAMrD,GAAN,IAAA3C,EAAAyB,EAAA,OAAA5H,EAAA/C,EAAAgD,KAAA,SAAAmM,GAAA,cAAAA,EAAAjM,KAAAiM,EAAAhM,MAAA,UACf+F,EAAkBZ,EAAKW,MAAvBC,cACFyB,EAAakB,EAAMuD,OAAOlO,MAEhCoH,EAAKwB,SAAS,CACZY,gBAAgB,EAChB9H,SAAU,IAGO,QAAf+H,EATmB,CAAAwE,EAAAhM,KAAA,eAAAgM,EAAAhM,KAAA,EAUfmF,EAAKU,SAASE,GAVC,OAAAiG,EAAAhM,KAAA,uBAAAgM,EAAAhM,KAAA,GAYfmF,EAAKuF,kBAAkB3E,EAAeyB,GAZvB,QAevBrC,EAAKyB,cAfkB,yBAAAoF,EAAAlL,SAAAiL,EAAA3M,SAjUN,gBAAA8M,GAAA,OAAAJ,EAAA3M,MAAAC,KAAAC,YAAA,GAAA8F,EAmVnBgH,qBAAuB,WAAM,IACnB9J,EAAW8C,EAAKW,MAAhBzD,OAER,OAAIA,EAAO+H,aACDxN,EAAAC,EAAAC,cAACqJ,EAAA,SAAD,CAAUC,SAAUxJ,EAAAC,EAAAC,cAACuJ,EAAAxJ,EAAD,CAAkBa,UAAW0G,EAAOS,YACtDjI,EAAAC,EAAAC,cAACoH,EAAD,CAAckG,aAAc/H,EAAO+H,gBAIxC,MA5VUjF,EA+VnBiH,oBAAsB,SAAC5E,EAAY7H,GACjC,IAAI0M,EAAgB,GACdC,EAAoB9E,EAAW3E,MAAM,MAiB3C,OAfIyJ,EAAkBtE,OAAS,EAC7BsE,EAAkBlK,IAAI,SAAAmK,GACpB,IAAK,IAAIC,EAAI,EAAGA,EAAI7M,EAAMqI,OAAQwE,IAChC,GAAI7M,EAAM6M,GAAG,GAAGC,OAASF,EAAgB,CACvCF,EAAc5J,KAAK9C,EAAM6M,GAAG,IAC5B,SAKF7M,IACF0M,EAAgB1M,EAAM,IAInB0M,EAAcjK,IAAI,SAAAiG,GAAI,OAAIlD,EAAKsE,gBAAgBpB,MA/WtDlD,EAAK2D,gBAAkBzF,IAAMqJ,YAE7B,IAAMC,EHlCH,SAAkB7O,GACvB,IAAMC,EAAQY,aAAaN,QAAQP,GAEnC,OAAIC,EACKG,KAAKI,MAAMP,GAGbA,EG2BY6O,CAAS3H,GACtBc,EAAgB,GANH,OAQb4G,IACF5G,EAAgB4G,GAGlBxH,EAAKW,MAAQ,CACXoB,WAAY,GACZ7E,OAAQ,KACR1C,MAAO,KACP+G,QAAQ,EACRa,gBAAgB,EAChBxJ,MAAOgI,EACPyB,WAAY,GACZzB,cAAeA,EACfvG,WAAY,EACZC,SAAU,EACVuK,iBAAiB,GAvBF7E,wEAqXV,IAaH0H,EACAzC,EACA0C,EACAzD,EACA0D,EACAC,EACAC,EACAC,EACAC,EArBGC,EAAAhO,KAAAiO,EAUHjO,KAAK0G,MAPPzD,EAHKgL,EAGLhL,OACAmF,EAJK6F,EAIL7F,WACAD,EALK8F,EAKL9F,eACAb,EANK2G,EAML3G,OACAX,EAPKsH,EAOLtH,cACAtG,EARK4N,EAQL5N,SACAuK,EATKqD,EASLrD,gBATKsD,EAWmClO,KAAK7B,MAAMC,QAA7CqH,EAXDyI,EAWCzI,SAAUR,EAXXiJ,EAWWjJ,YAAavF,EAXxBwO,EAWwBxO,OACzByO,EAAc7G,EAAS5H,EAAS,GAgBtC,GAJIyI,IACF8B,EAAkBjK,KAAKiK,mBAGX,MAAVhH,GAAkBA,EAAO1C,OAAS0C,EAAO1C,MAAMqI,OAAS,EAAG,CAE7D6E,EAAczN,KAAK8G,mBACnBkE,EAAehL,KAAK+M,uBACpB,IAAMqB,EAAiBnL,EAAO1C,MAGX,KAAf6H,GACFsF,EAAcU,EAAepL,IAAI,SAAAiG,GAAI,OAAI+E,EAAK3D,gBAAgBpB,KAG1DhG,EAAO+H,aAAaC,UAAY5K,IAClCwN,EAAiBrQ,EAAAC,EAAAC,cAACqJ,EAAA,SAAD,CAAUC,SAAUxJ,EAAAC,EAAAC,cAACuJ,EAAAxJ,EAAD,CAAkBa,UAAWmH,KAChDjI,EAAAC,EAAAC,cAACqH,EAAD,CAAgBoC,QAASnH,KAAKwK,sBAIlDkD,EAAc1N,KAAKgN,oBAAoB5E,EAAYnF,EAAO1C,OAGtD0C,EAAO1C,MAAQF,IACjBwN,EAAiBrQ,EAAAC,EAAAC,cAACqJ,EAAA,SAAD,CAAUC,SAAUxJ,EAAAC,EAAAC,cAACuJ,EAAAxJ,EAAD,CAAkBa,UAAWmH,KAC/CjI,EAAAC,EAAAC,cAACqH,EAAD,CAAgBoC,QAASnH,KAAKwK,qBAMrDoD,EACEpQ,EAAAC,EAAAC,cAACqJ,EAAA,SAAD,CAAUC,SAAUxJ,EAAAC,EAAAC,cAACuJ,EAAAxJ,EAAD,CAAkBa,UAAWmH,KAC5BjI,EAAAC,EAAAC,cAACmH,EAAD,CACG7C,UAAWiB,EAAOjB,UAClBoG,WAAYA,EACZ3B,SAAUzG,KAAKyM,0BAMrC7B,GACFkD,EAA0B9N,KAAKiK,kBAC/B4D,EAAiB,KACjBpG,gBAAO4G,WAAW,OAElBN,EACEvQ,EAAAC,EAAAC,cAACqJ,EAAA,SAAD,CAAUC,SAAUxJ,EAAAC,EAAAC,cAACuJ,EAAAxJ,EAAD,CAAkBa,UAAWmH,KACzCjI,EAAAC,EAAAC,cAAC8G,EAAD,CAAqB2C,QAASnH,KAAK+J,uBAIzCzC,IACFqG,EACEnQ,EAAAC,EAAAC,cAACqJ,EAAA,SAAD,CAAUC,SAAUxJ,EAAAC,EAAAC,cAACuJ,EAAAxJ,EAAD,CAAkBa,UAAWmH,KAC3CjI,EAAAC,EAAAC,cAACsG,EAAD,CAAmBmD,QAASnH,KAAK8J,2BAK1B,MAAV7G,GAA0C,IAAxBA,EAAO1C,MAAMqI,SACxC8E,EAAc1N,KAAKmK,kBAGrB,OACE3M,EAAAC,EAAAC,cAACF,EAAAC,EAAM6Q,SAAP,KACE9Q,EAAAC,EAAAC,cAAA,OAAKY,UAAW6P,GACd3Q,EAAAC,EAAAC,cAAC6Q,EAAA,EAAD,CACEC,cAAY,EACZC,gBAAc,EACdnQ,UAAW2G,EACXyJ,SAAS,WACTC,SAAS,UACTC,UAAU,MACVvB,KAAK,sBACL5G,SAAUzG,KAAKyG,SACfoI,YAAa7O,KAAKwM,WAClBsC,YAAY,gBACZC,cAAc,mBACdpQ,MAAOgI,EACPqI,OAAO,EACPC,eAAe,IAEhBrB,EACAH,GAEFM,EACA9D,EACAe,EACA0C,EACAI,EACAD,EACAF,UA5eUuB,iBAkfJ5R,+BAAW0H,EAAX1H,CAAmBwI","file":"static/js/5.70c32bc8.chunk.js","sourcesContent":["import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst styles = theme => ({});\n\nfunction LoadingProgress() {\n  return (\n    <span>\n      <br />\n      <LinearProgress />\n      <br />\n      <LinearProgress color=\"secondary\" variant=\"query\" />\n      <br />\n      <LinearProgress />\n    </span>\n  );\n}\n\nexport default withStyles(styles)(LoadingProgress);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n  noRaces: {\n    marginRight: '10px',\n    marginLeft: '10px',\n    marginTop: '5px',\n    marginBottom: '5px',\n  },\n});\n\nfunction NoResults(props) {\n  const { classes } = props;\n\n  return (\n    <Paper className={classes.noRaces}>\n      <Typography variant=\"subheading\">\n        No race results found for this runner!\n      </Typography>\n    </Paper>\n  );\n}\n\nexport default withStyles(styles)(NoResults);\n","export function setSession({ key, value }) {\n  if (value !== 'null') {\n    sessionStorage.setItem(key, JSON.stringify(value));\n  }\n}\n\nexport function getSession(key) {\n  const value = sessionStorage.getItem(key);\n\n  if (value) {\n    return JSON.parse(value);\n  }\n\n  return value;\n}\n\nexport function removeSession(key) {\n  if (key) {\n    sessionStorage.removeItem(key);\n  }\n}\n\nexport function removeAllSession() {\n  sessionStorage.clear();\n}\n\nexport function setLocal({ key, value }) {\n  if (value !== 'null') {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n}\n\nexport function getLocal(key) {\n  const value = localStorage.getItem(key);\n\n  if (value) {\n    return JSON.parse(value);\n  }\n\n  return value;\n}\n\nexport function removeLocal(key) {\n  if (key) {\n    localStorage.removeItem(key);\n  }\n}\n\nexport function removeAllLocal() {\n  localStorage.clear();\n}\n","import axios from 'axios';\nimport { AllHtmlEntities } from 'html-entities';\n\nimport { getSession, setSession } from './storageService';\n\nconst entities = new AllHtmlEntities();\n\nexport async function search(runnerNames, startIndex, endIndex) {\n  const runnersNamedJoined = runnerNames.join('$$');\n  let races = null;\n\n  await axios\n    .get(\n      `${\n        process.env.REACT_APP_API_SERVER\n      }/runner/${runnersNamedJoined}/${startIndex}/${endIndex}`,\n    )\n    .then(function(response) {\n      races = response.data;\n      return races;\n    })\n    .catch(function(error) {\n      console.log(error);\n    });\n\n  return races;\n}\n\nexport async function searchByRace(runnerNames, raceNames) {\n  const runnersNamedJoined = runnerNames.join('$$');\n  let encodedRaceNames = raceNames.replace('/', '**');\n  encodedRaceNames = entities.encode(encodedRaceNames);\n  let races = null;\n\n  await axios\n    .get(\n      `${\n        process.env.REACT_APP_API_SERVER\n      }/runnerByRace/${runnersNamedJoined}/${encodedRaceNames}`,\n    )\n    .then(function(response) {\n      races = response.data;\n      return races;\n    })\n    .catch(function(error) {\n      console.log(error);\n    });\n\n  return races;\n}\n\nexport function partialSearch(partialName) {\n  const cacheKey = `runnersList${partialName}`;\n  const runnersInSessionStorage = getSession(cacheKey);\n\n  if (runnersInSessionStorage) {\n    return {\n      options: runnersInSessionStorage,\n    };\n  }\n\n  const url = `${\n    process.env.REACT_APP_API_SERVER\n  }/autocomplete/runner/${partialName.toLowerCase()}`;\n\n  return fetch(url)\n    .then(response => {\n      return response.json();\n    })\n    .then(json => {\n      const runnersList = [];\n\n      json.items.map(runner => {\n        let found = false;\n\n        runnersList.map(runnerAdded => {\n          if (runner.display === runnerAdded.display) {\n            found = true;\n\n            return true;\n          }\n\n          return false;\n        });\n\n        if (!found) {\n          runnersList.push(runner);\n        }\n\n        return found;\n      });\n\n      setSession({\n        key: cacheKey,\n        value: runnersList,\n      });\n\n      return {\n        options: runnersList,\n      };\n    });\n}\n","// @TODO: Test Me\nexport function upperCaseWords(sentence) {\n  const sentenceParts = sentence\n    .split(' ')\n    .map(word => `${word.charAt(0).toUpperCase()}${word.slice(1)} `);\n  let sentenceToReturn = '';\n\n  sentenceParts.map(part => {\n    sentenceToReturn = `${sentenceToReturn}${part}`;\n\n    return sentenceToReturn;\n  });\n\n  return sentenceToReturn;\n}\n","import React, { PureComponent, Suspense } from 'react';\nimport { animateScroll as scroll } from 'react-scroll';\nimport { Async } from 'react-select';\nimport _ from 'lodash';\nimport 'react-select/dist/react-select.css';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport LoadingProgress from './../components/LoadingProgress';\nimport NoResults from './../components/NoResults';\n\nimport {\n  search,\n  partialSearch,\n  searchByRace,\n} from './../service/searchService';\nimport {\n  getSession,\n  setSession,\n  removeSession,\n  getLocal,\n  setLocal,\n  removeLocal,\n  removeAllSession,\n} from './../service/storageService';\nimport { upperCaseWords } from './../utils/stringUtils';\n\nconst ArrowUpwardButton = React.lazy(() => import('./../components/ArrowUpwardButton'));\nconst ArrowDownwardButton = React.lazy(() => import('./../components/ArrowDownwardButton'));\nconst ClearButton = React.lazy(() => import('./../components/ClearButton'));\nconst RaceDetails = React.lazy(() => import('./../components/RaceDetails'));\nconst RunnerDetails = React.lazy(() => import('./../components/RunnerDetails'));\nconst RaceInfo = React.lazy(() => import('./../components/RaceInfo'));\nconst RaceDropDown = React.lazy(() => import('./../components/RaceDropDown'));\nconst OverallStats = React.lazy(() => import('./../components/OverallStats'));\nconst LoadMoreButton = React.lazy(() => import('./../components/LoadMoreButton'));\n\nconst styles = theme => ({\n  searchField: {\n    paddingBottom: '5px',\n    paddingLeft: '5px',\n    paddingRight: '5px',\n    marginTop: '-20px',\n    zIndex: '2',\n  },\n  search: {\n    position: 'sticky',\n    top: '0px',\n    backgroundColor: 'white',\n    zIndex: '2 !important',\n  },\n  progress: {\n    margin: theme.spacing.unit * 2,\n  },\n});\n\nconst chosenRunnersKey = 'chosenRunners';\n\nclass Main extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.searchRunnerRef = React.createRef();\n\n    const namesSet = getLocal(chosenRunnersKey);\n    let chosenRunners = [];\n\n    if (namesSet) {\n      chosenRunners = namesSet;\n    }\n\n    this.state = {\n      runnerName: '',\n      runner: null,\n      races: null,\n      sticky: false,\n      loadingResults: true,\n      value: chosenRunners,\n      chosenRace: '',\n      chosenRunners: chosenRunners,\n      startIndex: 0,\n      endIndex: 0,\n      loadMoreLoading: false,\n    };\n  }\n\n  componentDidMount = () => {\n    window.addEventListener('scroll', this.onScroll, false);\n    this.onChange(this.state.chosenRunners);\n  };\n\n  componentWillUnmount = () => {\n    window.removeEventListener('scroll', this.onScroll, false);\n  };\n\n  buildClearButton = () => {\n    return <Suspense fallback={<CircularProgress className={styles.prototypeprogress} />}>\n            <ClearButton onClick={this.clearClick} />\n          </Suspense>;\n  };\n\n  onScroll = () => {\n    if (window.scrollY >= 165 && !this.state.sticky) {\n      this.setState({ sticky: true });\n    } else if (window.scrollY < 165 && this.state.sticky) {\n      this.setState({ sticky: false });\n    }\n  };\n\n  scrollToTop = () => {\n    scroll.scrollTo(170);\n  };\n\n  performSearch = async runnerName => {\n    if (runnerName) {\n      this.setState({ runner: null, loadingResults: true, chosenRace: '' });\n      const { startIndex, endIndex } = this.state;\n      const cacheKey = `getRunner${runnerName}`.replace(' ', '');\n      const formattedName = runnerName;\n      const runnerInStorage = getSession(cacheKey);\n      let result;\n\n      if (!runnerInStorage) {\n        result = await search(runnerName, startIndex, endIndex);\n        setSession({ key: cacheKey, value: JSON.stringify(result) });\n      } else {\n        result = JSON.parse(runnerInStorage);\n        removeSession(cacheKey);\n      }\n\n      this.setState({\n        runner: result,\n        runnerName: formattedName,\n        loadingResults: false,\n      });\n      this.scrollToTop();\n    }\n  };\n\n  searchForRunners = async (runners, newEndIndex) => {\n    if (runners && runners.length > 0) {\n      const { startIndex } = this.state;\n      let names = [];\n\n      runners.map(eachRunner => {\n        names.push(eachRunner.display);\n      });\n\n      const cacheKey = `getRunners${names.join(\n        '',\n      )}${startIndex}${newEndIndex}`.replace(' ', '');\n      const runnersInStorage = getSession(cacheKey);\n      let runnersDetails;\n\n      if (!runnersInStorage) {\n        runnersDetails = await search(names, startIndex, newEndIndex);\n        setSession({ key: cacheKey, value: JSON.stringify(runnersDetails) });\n\n        return runnersDetails;\n      } else {\n        runnersDetails = JSON.parse(runnersInStorage);\n        removeSession(cacheKey);\n      }\n\n      return runnersDetails;\n    }\n\n    return null;\n  };\n\n  searchForRunnersByRace = async (runners, race) => {\n    if (runners && runners.length > 0) {\n      let names = [];\n\n      runners.map(eachRunner => {\n        names.push(eachRunner.display);\n      });\n\n      const cacheKey = `getRunnersByRace${names.join('')}${race}`.replace(\n        ' ',\n        '',\n      );\n      const runnersInStorage = getSession(cacheKey);\n      let runnersDetails;\n\n      if (!runnersInStorage) {\n        runnersDetails = await searchByRace(names, race);\n        setSession({ key: cacheKey, value: JSON.stringify(runnersDetails) });\n\n        return runnersDetails;\n      } else {\n        runnersDetails = JSON.parse(runnersInStorage);\n        removeSession(cacheKey);\n      }\n\n      return runnersDetails;\n    }\n\n    return null;\n  };\n\n  handleClick = async event => {\n    event.preventDefault();\n    const searchValue = this.searchRunnerRef.value.trim();\n\n    if (searchValue !== '') {\n      if (upperCaseWords(searchValue) !== this.state.runnerName) {\n        await this.performSearch(searchValue);\n      }\n    } else {\n      this.clearClick();\n    }\n  };\n\n  clearClick = () => {\n    this.setState({\n      sticky: false,\n      runner: null,\n      runnerName: null,\n      loadingResults: false,\n      chosenRace: '',\n      chosenRunners: [],\n      endIndex: 0,\n    });\n\n    removeLocal(chosenRunnersKey);\n    removeAllSession();\n\n    scroll.scrollToTop();\n  };\n\n  scrollToTopClick = e => {\n    e.preventDefault();\n    scroll.scrollToTop();\n  };\n\n  scrollToBottomClick = e => {\n    e.preventDefault();\n    scroll.scrollToBottom();\n  };\n\n  loadingProgress = () => {\n    return <LoadingProgress />;\n  };\n\n  noResultsFound = () => {\n    return <NoResults />;\n  };\n\n  buildRaceResult = race => {\n    let raceInfo;\n\n    if (race.raceInfo) {\n      raceInfo = <Suspense fallback={<CircularProgress className={styles.progress} />}>\n                  <RaceInfo raceInfo={race.raceInfo} />\n                </Suspense>;\n    }\n\n    return (\n      <div key={race.id}>\n        <br />\n        <Suspense fallback={<CircularProgress className={styles.progress} />}>\n          <RaceDetails race={race} />\n        </Suspense>\n        {raceInfo}\n        <Suspense fallback={<CircularProgress className={styles.progress} />}>\n          <RunnerDetails runner={race.runner} />\n        </Suspense>\n      </div>\n    );\n  };\n\n  loadMoreOnClick = async event => {\n    event.preventDefault();\n    const { chosenRunners } = this.state;\n\n    this.setState({\n      loadMoreLoading: true,\n    });\n\n    await this.onChange(chosenRunners);\n\n    this.setState({\n      loadMoreLoading: false,\n    });\n  };\n\n  calculateNextEndIndex = runnerNames => {\n    const { endIndex, chosenRunners, runner } = this.state;\n\n    if (endIndex === 0) {\n      return 10;\n    }\n\n    if (runnerNames.length === chosenRunners.length) {\n      if (endIndex + 10 > runner.overallStats.noOfRaces) {\n        return runner.overallStats.noOfRaces;\n      }\n\n      return endIndex + 10;\n    } else {\n      return 10;\n    }\n  };\n\n  onChange = async runnerNames => {\n    if (runnerNames.length > 0) {\n      this.setState({\n        loadingResults: true,\n      });\n      const newEndIndex = this.calculateNextEndIndex(runnerNames);\n      const runnersDetails = await this.searchForRunners(\n        runnerNames,\n        newEndIndex,\n      );\n\n      this.setState({\n        runner: runnersDetails,\n        runnerName: runnerNames[0].display,\n        loadingResults: false,\n        chosenRunners: runnerNames,\n        endIndex: newEndIndex,\n        chosenRace: '',\n      });\n\n      setLocal({ key: chosenRunnersKey, value: runnerNames });\n    } else {\n      this.clearClick();\n    }\n  };\n\n  fetchRunnerByRace = async (runnerNames, chosenRace) => {\n    if (runnerNames.length > 0) {\n      this.setState({\n        loadingResults: true,\n      });\n\n      const runnersDetails = await this.searchForRunnersByRace(\n        runnerNames,\n        chosenRace,\n      );\n\n      this.setState({\n        runner: runnersDetails,\n        runnerName: runnerNames[0].display,\n        loadingResults: false,\n        chosenRunners: runnerNames,\n        chosenRace: chosenRace,\n      });\n\n      setLocal({ key: chosenRunnersKey, value: runnerNames });\n    } else {\n      this.clearClick();\n    }\n  };\n\n  fetchRunners = async (searchValue, callback) => {\n    console.log('searching - ', searchValue);\n\n    if (!searchValue) {\n      callback(null, { options: [] });\n    }\n\n    if (searchValue.length > 2) {\n      callback(null, await partialSearch(searchValue));\n    } else {\n      callback(null, { options: [] });\n    }\n  };\n\n  debouncedFetchRunners = _.debounce(this.fetchRunners, 350);\n\n  getRunners = (searchValue, callback) => {\n    if (!searchValue || searchValue.length < 3) {\n      return callback(null, { options: [] });\n    }\n\n    this.debouncedFetchRunners(searchValue, callback);\n  };\n\n  handleChooseRaceChange = async event => {\n    const { chosenRunners } = this.state;\n    const chosenRace = event.target.value;\n\n    this.setState({\n      loadingResults: true,\n      endIndex: 0,\n    });\n\n    if (chosenRace === 'all') {\n      await this.onChange(chosenRunners);\n    } else {\n      await this.fetchRunnerByRace(chosenRunners, chosenRace);\n    }\n\n    this.scrollToTop();\n  };\n\n  populateOverallStats = () => {\n    const { runner } = this.state;\n\n    if (runner.overallStats) {\n      return  <Suspense fallback={<CircularProgress className={styles.progress} />}>\n                <OverallStats overallStats={runner.overallStats} />\n              </Suspense>;\n    }\n\n    return null;\n  };\n\n  buildChosenRaceList = (chosenRace, races) => {\n    let filteredRaces = [];\n    const listOfChosenRaces = chosenRace.split('||');\n\n    if (listOfChosenRaces.length > 1) {\n      listOfChosenRaces.map(eachChosenRace => {\n        for (let i = 0; i < races.length; i++) {\n          if (races[i][0].name === eachChosenRace) {\n            filteredRaces.push(races[i][0]);\n            break;\n          }\n        }\n      });\n    } else {\n      if (races) {\n        filteredRaces = races[0];\n      }\n    }\n\n    return filteredRaces.map(race => this.buildRaceResult(race));\n  };\n\n  render() {\n    // @TODO: Tidy this up getting very cluttered\n    const {\n      runner,\n      chosenRace,\n      loadingResults,\n      sticky,\n      chosenRunners,\n      endIndex,\n      loadMoreLoading,\n    } = this.state;\n    const { progress, searchField, search } = this.props.classes;\n    const searchClass = sticky ? search : '';\n    let clearButton;\n    let overallStats;\n    let raceResults;\n    let loadingProgress;\n    let scrollToTopButton;\n    let racesSelect;\n    let loadMoreButton;\n    let loadMoreLoadingProgress;\n    let downwardArrowButtonShow;\n\n    // loading main race results\n    if (loadingResults) {\n      loadingProgress = this.loadingProgress();\n    }\n\n    if (runner != null && runner.races && runner.races.length > 0) {\n      // Display clear button\n      clearButton = this.buildClearButton();\n      overallStats = this.populateOverallStats();\n      const racesForRunner = runner.races;\n\n      // Filtering races\n      if (chosenRace === '') {\n        raceResults = racesForRunner.map(race => this.buildRaceResult(race));\n\n        // Load more button\n        if (runner.overallStats.noOfRaces > endIndex) {\n          loadMoreButton = <Suspense fallback={<CircularProgress className={progress} />}>\n                            <LoadMoreButton onClick={this.loadMoreOnClick} />\n                          </Suspense>;\n        }\n      } else {\n        raceResults = this.buildChosenRaceList(chosenRace, runner.races);\n\n        // Load more button\n        if (runner.races > endIndex) {\n          loadMoreButton = <Suspense fallback={<CircularProgress className={progress} />}>\n                             <LoadMoreButton onClick={this.loadMoreOnClick} />\n                           </Suspense>;\n        }\n      }\n\n      // Populating races drop down\n      racesSelect = (\n        <Suspense fallback={<CircularProgress className={progress} />}>\n                             <RaceDropDown\n                                raceNames={runner.raceNames}\n                                chosenRace={chosenRace}\n                                onChange={this.handleChooseRaceChange}\n                              />\n        </Suspense>\n      );\n\n      // loading more results\n      if (loadMoreLoading) {\n        loadMoreLoadingProgress = this.loadingProgress();\n        loadMoreButton = null;\n        scroll.scrollMore(170);\n      } else {\n        downwardArrowButtonShow = (\n          <Suspense fallback={<CircularProgress className={progress} />}>\n                  <ArrowDownwardButton onClick={this.scrollToBottomClick} />\n                </Suspense>\n        );\n\n        if (sticky) {\n          scrollToTopButton = (\n            <Suspense fallback={<CircularProgress className={progress} />}>\n                  <ArrowUpwardButton onClick={this.scrollToTopClick} />\n                </Suspense>\n          );\n        }\n      }\n    } else if (runner != null && runner.races.length === 0) {\n      raceResults = this.noResultsFound();\n    }\n\n    return (\n      <React.Fragment>\n        <div className={searchClass}>\n          <Async\n            cacheOptions\n            defaultOptions\n            className={searchField}\n            valueKey=\"original\"\n            labelKey=\"display\"\n            matchProp=\"any\"\n            name=\"runner-search-field\"\n            onChange={this.onChange}\n            loadOptions={this.getRunners}\n            placeholder=\"Search Runner\"\n            noResultsText=\"No runners found\"\n            value={chosenRunners}\n            multi={true}\n            ignoreAccents={false}\n          />\n          {racesSelect}\n          {clearButton}\n        </div>\n        {downwardArrowButtonShow}\n        {loadingProgress}\n        {overallStats}\n        {raceResults}\n        {loadMoreLoadingProgress}\n        {loadMoreButton}\n        {scrollToTopButton}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles)(Main);\n"],"sourceRoot":""}